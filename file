warning: Git tree '/home/nyiyui/inaba/qrystal' is dirty
evaluating flake...
trace: { cs = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = [ "-mod=vendor" "-trimpath" ]; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/ja22cw1cy9va63wpf2629nrpij735kyv-qrystal-cs-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ { CC_FOR_TARGET = null; CGO_ENABLED = 1; CXX_FOR_TARGET = null; GO386 = "softfloat"; GOARCH = "arm64"; GOARM = ""; GOHOSTARCH = "arm64"; GOHOSTOS = "linux"; GOOS = "linux"; GOROOT_BOOTSTRAP = "/nix/store/d11b7kr0i5vfjlhfscskpz4xn0ikggba-go-1.16-linux-arm64-bootstrap/share/go"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { BASH_SHELL = "/bin/sh"; NIX_CFLAGS_COMPILE = ""; NIX_HARDENING_ENABLE = [ "pic" "strictoverflow" "format" "relro" "bindnow" ]; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { BASH_SHELL = "/bin/sh"; NIX_CFLAGS_COMPILE = ""; NIX_HARDENING_ENABLE = «repeated»; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ { ARCH = "arm64"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "make mrproper $makeFlags\nmake headers $makeFlags\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkPhase = "make headers_check $makeFlags\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--static" "--shared" ]; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ ]; makeFlags = [ "PREFIX=" "SHARED_MODE=1" ]; mesonFlags = [ ]; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; outputDoc = "dev"; outputs = [ "out" "dev" "static" ]; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = [ "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "zlib-1.2.13.tar.gz"; out = «repeated»; outPath = "/nix/store/3yhi12pgsmv2dz0x2ialvjw51lnv4jw8-zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = { aesSupport = false; avx2Support = false; avx512Support = false; avxSupport = false; canExecute = <LAMBDA>; config = "aarch64-unknown-linux-gnu"; darwinArch = "arm64"; darwinMinVersion = "11.0"; darwinMinVersionVariable = null; darwinPlatform = null; darwinSdkVersion = "11.0"; efiArch = "aa64"; emulator = <LAMBDA>; emulatorAvailable = <LAMBDA>; extensions = { executable = <CODE>; library = <CODE>; sharedLibrary = ".so"; staticLibrary = <CODE>; }; fma4Support = false; fmaSupport = false; gcc = { arch = "armv8-a"; }; is32bit = false; is64bit = true; isAarch = true; isAarch32 = false; isAarch64 = true; isAbiElfv2 = false; isAlpha = false; isAndroid = false; isAvr = false; isBSD = false; isBigEndian = false; isCompatible = <LAMBDA>; isCygwin = false; isDarwin = false; isEfi = true; isFreeBSD = false; isGenode = false; isGhcjs = false; isGnu = true; isJavaScript = false; isLinux = true; isLittleEndian = true; isM68k = false; isMacOS = false; isMicroBlaze = false; isMinGW = false; isMips = false; isMips32 = false; isMips64 = false; isMips64n32 = false; isMips64n64 = false; isMmix = false; isMsp430 = false; isMusl = false; isNetBSD = false; isNone = false; isOpenBSD = false; isOr1k = false; isPower = false; isPower64 = false; isRedox = false; isRiscV = false; isRiscV32 = false; isRiscV64 = false; isRx = false; isS390 = false; isSparc = false; isStatic = false; isSunOS = false; isUClibc = false; isUnix = true; isVc4 = false; isWasi = false; isWasm = false; isWindows = false; isi686 = false; isiOS = false; isx86 = false; isx86_32 = false; isx86_64 = false; libc = "glibc"; linker = "bfd"; linux-kernel = { DTB = true; autoModules = true; baseConfig = "defconfig"; extraConfig = "# Raspberry Pi 3 stuff. Not needed for   s >= 4.10.\nARCH_BCM2835 y\nBCM2835_MBOX y\nBCM2835_WDT y\nRASPBERRYPI_FIRMWARE y\nRASPBERRYPI_POWER y\nSERIAL_8250_BCM2835AUX y\nSERIAL_8250_EXTENDED y\nSERIAL_8250_SHARE_IRQ y\n\n# Cavium ThunderX stuff.\nPCI_HOST_THUNDER_ECAM y\n\n# Nvidia Tegra stuff.\nPCI_TEGRA y\n\n# The default (=y) forces us to have the XHCI firmware available in initrd,\n# which our initrd builder can't currently do easily.\nUSB_XHCI_TEGRA m\n"; name = "aarch64-multiplatform"; preferBuiltin = true; target = "Image"; }; linuxArch = "arm64"; parsed = { _type = "system"; abi = { _type = "abi"; assertions = [ { assertion = <LAMBDA>; message = "The \"gnu\" ABI is ambiguous on 32-bit ARM. Use \"gnueabi\" or \"gnueabihf\" instead.\n"; } { assertion = <LAMBDA>; message = "The \"gnu\" ABI is ambiguous on big-endian 64-bit PowerPC. Use \"gnuabielfv2\" or \"gnuabielfv1\" instead.\n"; } ]; name = "gnu"; }; cpu = { _type = "cpu-type"; arch = "armv8-a"; bits = 64; family = "arm"; name = "aarch64"; significantByte = { _type = "significant-byte"; name = "littleEndian"; }; version = "8"; }; kernel = { _type = "kernel"; execFormat = { _type = "exec-format"; name = "elf"; }; families = { }; name = "linux"; }; vendor = { _type = "vendor"; name = "unknown"; }; }; qemuArch = "aarch64"; rustc = { }; sse3Support = false; sse4_1Support = false; sse4_2Support = false; sse4_aSupport = false; ssse3Support = false; system = "aarch64-linux"; uname = { processor = <CODE>; release = null; system = <CODE>; }; useAndroidPrebuilt = false; useiOSPrebuilt = false; }; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { all = <CODE>; args = [ "ash" "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/linux/bootstrap-tools/scripts/unpack-bootstrap-tools.sh ]; builder = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = true; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "busybox"; outputHash = "sha256-4EN2vLvXUkelZZR2eKaAQA5kCEuHNvRZN6dcohxVY+c="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "http://tarballs.nixos.org/stdenv-linux/aarch64/c7c997a0662bf88264db52cbc41e67884eb7a1ff/busybox"; urls = [ "http://tarballs.nixos.org/stdenv-linux/aarch64/c7c997a0662bf88264db52cbc41e67884eb7a1ff/busybox" ]; }; drvPath = <CODE>; executable = true; impureEnvVars = «repeated»; name = "busybox"; out = «repeated»; outPath = "/nix/store/lxysayv166n6xi6yg8m8n249pzkxhybg-busybox"; outputHash = "sha256-4EN2vLvXUkelZZR2eKaAQA5kCEuHNvRZN6dcohxVY+c="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "http://tarballs.nixos.org/stdenv-linux/aarch64/c7c997a0662bf88264db52cbc41e67884eb7a1ff/busybox"; urls = «repeated»; }; drvAttrs = { args = «repeated»; builder = «repeated»; isGNU = true; langC = true; langCC = true; name = "bootstrap-tools"; system = "aarch64-linux"; tarball = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bootstrap-tools.tar.xz"; outputHash = "sha256-AjOvmaW8JFVZaBSRUMKufr9kJozg/tsZr7PvUEBQyi4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "http://tarballs.nixos.org/stdenv-linux/aarch64/c7c997a0662bf88264db52cbc41e67884eb7a1ff/bootstrap-tools.tar.xz"; urls = [ "http://tarballs.nixos.org/stdenv-linux/aarch64/c7c997a0662bf88264db52cbc41e67884eb7a1ff/bootstrap-tools.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bootstrap-tools.tar.xz"; out = «repeated»; outPath = "/nix/store/2k8p2v40fv54lvsmzq0p76i9vf039jkk-bootstrap-tools.tar.xz"; outputHash = "sha256-AjOvmaW8JFVZaBSRUMKufr9kJozg/tsZr7PvUEBQyi4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "http://tarballs.nixos.org/stdenv-linux/aarch64/c7c997a0662bf88264db52cbc41e67884eb7a1ff/bootstrap-tools.tar.xz"; urls = «repeated»; }; }; drvPath = <CODE>; isGNU = true; langC = true; langCC = true; name = "bootstrap-tools"; out = «repeated»; outPath = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools"; outputName = "out"; system = "aarch64-linux"; tarball = «repeated»; type = "derivation"; }; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dynamicLinker = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld-linux-aarch64.so.1"; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc_bin = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out\nln -s /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib $out/lib\nln -s /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/include-glibc $out/include\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out\nln -s /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib $out/lib\nln -s /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/include-glibc $out/include\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "bootstrap-stage0-glibc-bootstrap"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "bootstrap-stage0-glibc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = [ «repeated» ]; name = "bootstrap-stage0-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage0-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage0-stdenv-linux"; out = «repeated»; outPath = "/nix/store/i37k5mp1y891cbg996k57h6is8d7gbvh-bootstrap-stage0-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/i37k5mp1y891cbg996k57h6is8d7gbvh-bootstrap-stage0-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "bootstrap"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage0-glibc-bootstrap"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "bootstrap-stage0-glibc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "bootstrap"; }; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "bootstrap-stage0-binutils-wrapper-"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "bootstrap-stage0-binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap > $out/nix-support/propagated-user-env-packages\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/bintools-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage0-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage0-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage0-stdenv-linux"; out = «repeated»; outPath = "/nix/store/i37k5mp1y891cbg996k57h6is8d7gbvh-bootstrap-stage0-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/i37k5mp1y891cbg996k57h6is8d7gbvh-bootstrap-stage0-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapperName = "BINTOOLS_WRAPPER"; }; drvPath = <CODE>; dynamicLinker = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildCommand = "mkdir -p $out\nln -s /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib $out/lib\nln -s /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/include-glibc $out/include\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage0-glibc-bootstrap"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "bootstrap-stage0-glibc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "bootstrap"; }; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage0-binutils-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; dynamicLinker = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage0-binutils-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = «repeated»; outPath = "/nix/store/28xr3p2wjpvj73zmp5bp1jcizvq4mygv-bootstrap-stage0-binutils-wrapper-"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; }; patches = [ ]; pname = "bootstrap-stage0-binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap > $out/nix-support/propagated-user-env-packages\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapperName = "BINTOOLS_WRAPPER"; }; outPath = "/nix/store/28xr3p2wjpvj73zmp5bp1jcizvq4mygv-bootstrap-stage0-binutils-wrapper-"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "bootstrap-stage0-binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap > $out/nix-support/propagated-user-env-packages\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapperName = "BINTOOLS_WRAPPER"; }; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "bootstrap-stage1-gcc-wrapper-"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "bootstrap-stage1-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = ""; expandResponseParams = "/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage1-gcc-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = ""; expandResponseParams = "/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage1-gcc-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; expand-response-params = ""; isClang = false; isGNU = true; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; }; patches = [ ]; pname = "bootstrap-stage1-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; outPath = "/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "bootstrap-stage1-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = [ «repeated» ]; name = "bootstrap-stage1-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage1-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage1-stdenv-linux"; out = «repeated»; outPath = "/nix/store/6nm9kxwaq28l2dw29bjn06m7mdjnyryq-bootstrap-stage1-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/6nm9kxwaq28l2dw29bjn06m7mdjnyryq-bootstrap-stage1-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.2.13"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ygjlx3cdsr7jxpddx1w19nkmvg00cd2l-zlib-1.2.13"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; }; outPath = "/nix/store/bfjsycf4rdys0q0agbjq91bsinvcz9sd-zlib-1.2.13-dev"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; } { LDFLAGS = ""; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-readline" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" ]; makeFlags = [ ]; mesonFlags = [ ]; name = "bash-5.1-p16"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "bison-3.8.2"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-syscmd-shell=/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "gnum4-1.4.19"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "gnum4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "m4-1.4.19.tar.bz2"; outputHash = "sha256-swapHA/ZO8QoDPwumMt6s5gf91oYe+oyk4EfRSyJqMg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/m4/m4-1.4.19.tar.bz2"; urls = [ "https://ftpmirror.gnu.org/m4/m4-1.4.19.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "m4-1.4.19.tar.bz2"; out = «repeated»; outPath = "/nix/store/mcayf992diwks293vs12iwx1ywgm4ijg-m4-1.4.19.tar.bz2"; outputHash = "sha256-swapHA/ZO8QoDPwumMt6s5gf91oYe+oyk4EfRSyJqMg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/m4/m4-1.4.19.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.4.19"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnum4-1.4.19"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/3cbw46ggrnf111hdnkfp62kqlljg8vn8-gnum4-1.4.19"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "gnum4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.4.19"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-de" "-Dcc=cc" "-Uinstallusrbinperl" "-Dinstallstyle=lib/perl5" "-Duseshrplib" "-Dlocincpth=/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include" "-Dloclibpth=/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib" "-A clear:d_crypt_r" "-Dprefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" "-Dman1dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man1" "-Dman3dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man3" ]; configurePlatforms = [ ]; configureScript = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "perl-5.36.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/no-sys-dirs-5.31.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/http-tiny-verify-ssl-by-default.patch ]; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" /no-such-path \\\n  --replace \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\" /no-such-path \\\n  --replace \"/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/bfjsycf4rdys0q0agbjq91bsinvcz9sd-zlib-1.2.13-dev/include\nLIB          = /nix/store/ygjlx3cdsr7jxpddx1w19nkmvg00cd2l-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n# We need to do this because the bootstrap doesn't have a static libpthread\nsed -i 's,\\(libswanted.*\\)pthread,\\1,g' Configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = [ "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "perl-5.36.0.tar.gz"; out = «repeated»; outPath = "/nix/store/jrq5yrwn0km82vnbs41xha3a41mszdka-perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.36.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jqvdj540fhid3mm5i21m98hzkplhalri-perl-5.36.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; pkgs = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" /no-such-path \\\n  --replace \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\" /no-such-path \\\n  --replace \"/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/bfjsycf4rdys0q0agbjq91bsinvcz9sd-zlib-1.2.13-dev/include\nLIB          = /nix/store/ygjlx3cdsr7jxpddx1w19nkmvg00cd2l-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n# We need to do this because the bootstrap doesn't have a static libpthread\nsed -i 's,\\(libswanted.*\\)pthread,\\1,g' Configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.36.0"; withPackages = <CODE>; } ]; outputs = [ "out" ]; patches = [ ]; pname = "bison"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bison-3.8.2.tar.gz"; outputHash = "sha256-BsnhO99+sk1M62tZIFpPZ8LH5yExGWREMP6C+9FKCrs="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bison/bison-3.8.2.tar.gz"; urls = [ "https://ftpmirror.gnu.org/bison/bison-3.8.2.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bison-3.8.2.tar.gz"; out = «repeated»; outPath = "/nix/store/9vm1ihdg1ysmrjdbb80g834iizzxb4yk-bison-3.8.2.tar.gz"; outputHash = "sha256-BsnhO99+sk1M62tZIFpPZ8LH5yExGWREMP6C+9FKCrs="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bison/bison-3.8.2.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.8.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; glrSupport = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bison-3.8.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/q18i3maw8dnml84f82hb65618m5syr86-bison-3.8.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { glrSupport = true; }; patches = [ ]; pname = "bison"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.8.2"; } ]; outputs = [ "out" "dev" "man" "doc" "info" ]; patchFlags = [ "-p0" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-001"; out = «repeated»; outPath = "/nix/store/5ibv7vnqs9qq75qwp9p276l9r35ldccm-bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-002"; out = «repeated»; outPath = "/nix/store/z1wfvm57izp9mdx3svdm8ayvw9f24bsr-bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-003"; out = «repeated»; outPath = "/nix/store/db77yl7pra8dk4jkdg82gja84ara63nj-bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-004"; out = «repeated»; outPath = "/nix/store/h1xsw38qjfclxwji7pa2ysvgdrgwbmaj-bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-005"; out = «repeated»; outPath = "/nix/store/99jb0lrxv2w0iby2pyj69qg5d8gjbpgg-bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-006"; out = «repeated»; outPath = "/nix/store/c13hmsqmwb8ip2bjba4xxzmxjwyqn0qw-bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-007"; out = «repeated»; outPath = "/nix/store/clfxvc0dwwbnrs9n9ingq542yv1mavvd-bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-008"; out = «repeated»; outPath = "/nix/store/8ryxppqg6lay7vj105sd175svh9is18w-bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-009"; out = «repeated»; outPath = "/nix/store/46wm974l1ywf7h84bizls4hiv2mc8caj-bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-010"; out = «repeated»; outPath = "/nix/store/1zph6k1xylkaajdcx6g10m1himcm1bmh-bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-011"; out = «repeated»; outPath = "/nix/store/dfzijgqay55f61yldz74dlzcj3kc84n9-bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-012"; out = «repeated»; outPath = "/nix/store/rl9348bn6clw01gzy8bdmdzjxync1rsp-bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-013"; out = «repeated»; outPath = "/nix/store/z4amhpapl83iwjxkq9p9lylkh0ffyq1d-bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-014"; out = «repeated»; outPath = "/nix/store/wanyhkgjwxccvyqla6r236423cda6c6v-bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-015"; out = «repeated»; outPath = "/nix/store/k3hwb5acr6xjycj853fczqby0c9d6mmq-bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-016"; out = «repeated»; outPath = "/nix/store/526apfg6pqnq86vflaiv4j2hikl8cjyx-bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = «repeated»; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/shells/bash/pgrp-pipe-5.1.patch ]; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash-5.1.tar.gz"; out = «repeated»; outPath = "/nix/store/5sgii519481kdsdg9kk027jlr7z641wd-bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bash-5.1-p16"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/bzbyxh230k3cj0qg30nmbfxzwcl7vrvv-bash-5.1-p16-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { shellPath = "/bin/bash"; }; patchFlags = «repeated»; patches = «repeated»; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shellPath = "/bin/bash"; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.1"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-csharp" "--with-xz" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { LDFLAGS = ""; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = false; gettextNeedsLdflags = false; hardeningDisable = [ "format" ]; mesonFlags = [ ]; name = "gettext-0.21"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "xz-5.2.9"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "man" "doc" ]; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = [ "https://tukaani.org/xz/xz-5.2.9.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "xz-5.2.9.tar.bz2"; out = «repeated»; outPath = "/nix/store/c1z3szr5rlsi6936nvvq40ipra6gsjxi-xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.2.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/wqjggr1mmzhfi7jqj3lvp56dag5rkgg8-xz-5.2.9-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "5.2.9"; }; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/hdy11m5d18jggzy18m4ix8vj744q1clc-xz-5.2.9-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "5.2.9"; } «repeated» ]; outputs = [ "out" "man" "doc" "info" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gettext/absolute-paths.diff ]; pname = "gettext"; postPatch = "substituteAllInPlace gettext-runtime/src/gettext.sh.in\nsubstituteInPlace gettext-tools/projects/KDE/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/projects/GNOME/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/src/project-id --replace \"/bin/pwd\" pwd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gettext/gettext-setup-hook.sh ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gettext-0.21.tar.gz"; outputHash = "04kbg1sx0ncfrsbr85ggjslqkzzb243fcw9nyh3rrv1a22ihszf7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gettext/gettext-0.21.tar.gz"; urls = [ "https://ftpmirror.gnu.org/gettext/gettext-0.21.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gettext-0.21.tar.gz"; out = «repeated»; outPath = "/nix/store/s1bb06rzbxlvq08sg0ymwdgcgd1a7xh3-gettext-0.21.tar.gz"; outputHash = "04kbg1sx0ncfrsbr85ggjslqkzzb243fcw9nyh3rrv1a22ihszf7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gettext/gettext-0.21.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.21"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = false; gettextNeedsLdflags = false; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gettext-0.21"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/0c41awvl6vng3ad4lx3jfljh7dzw8ck2-gettext-0.21"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "gettext"; postPatch = "substituteAllInPlace gettext-runtime/src/gettext.sh.in\nsubstituteInPlace gettext-tools/projects/KDE/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/projects/GNOME/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/src/project-id --replace \"/bin/pwd\" pwd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.21"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-64-bit-bfd" "--with-system-zlib" "--enable-deterministic-archives" "--disable-werror" "--enable-fix-loongson2f-nop" "--enable-new-dtags" "--program-prefix=" "--disable-gprofng" "--enable-shared" "--disable-static" "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" "--target=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" "target" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" "pie" ]; mesonFlags = [ ]; name = "binutils-2.39"; nativeBuildInputs = [ «repeated» «repeated» { NATIVE_TOOLS_CFLAGS = null; NATIVE_TOOLS_LDFLAGS = null; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» null ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkFlags = [ "XFAIL_TESTS=test_scripts/layout_formatting_fr_icons.sh" ]; cmakeFlags = [ ]; configureFlags = [ "PERL=/nix/store/jqvdj540fhid3mm5i21m98hzkplhalri-perl-5.36.0/bin/perl" ]; depsBuildBuild = [ «repeated» «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { NATIVE_TOOLS_CFLAGS = null; NATIVE_TOOLS_LDFLAGS = null; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkFlags = «repeated»; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "TEXMF=$(out)/texmf-dist" ]; installTargets = [ "install" "install-tex" ]; mesonFlags = [ ]; name = "texinfo-6.8"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/texinfo/fix-glibc-2.34.patch ]; pname = "texinfo"; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "texinfo-6.8.tar.xz"; outputHash = "1i7yb7mrp3inz25zbzv2pllr4y7d58v818f1as7iz8mw53nm7dwf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/texinfo/texinfo-6.8.tar.xz"; urls = [ "https://ftpmirror.gnu.org/texinfo/texinfo-6.8.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "texinfo-6.8.tar.xz"; out = «repeated»; outPath = "/nix/store/ycj1q918l6852kndr75rlwmw43k5ybys-texinfo-6.8.tar.xz"; outputHash = "1i7yb7mrp3inz25zbzv2pllr4y7d58v818f1as7iz8mw53nm7dwf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/texinfo/texinfo-6.8.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.8"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; installTargets = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "texinfo-6.8"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/dq6m8wj52nhradhkfryxyh84wpf08iws-texinfo-6.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "texinfo"; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.8"; } ]; noSysDirs = true; outputs = [ "out" "info" "man" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/deterministic.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/0001-Revert-libtool.m4-fix-the-NM-nm-over-here-B-option-w.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/0001-Revert-libtool.m4-fix-nm-BSD-flag-detection.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/0001-libtool.m4-update-macos-version-detection-block.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/always-search-rpath.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/gas-dwarf-zero-PR29451.patch ]; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "binutils-2.39.tar.bz2"; outputHash = "sha256-2iSoT+8iAQLdJAQt8G/eqFHCYUpTd/hu/6KPM7exYUg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/binutils/binutils-2.39.tar.bz2"; urls = [ "https://ftpmirror.gnu.org/binutils/binutils-2.39.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "binutils-2.39.tar.bz2"; out = «repeated»; outPath = "/nix/store/055z4fd2s2frwl13i07f5vprfpffmc85-binutils-2.39.tar.bz2"; outputHash = "sha256-2iSoT+8iAQLdJAQt8G/eqFHCYUpTd/hu/6KPM7exYUg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/binutils/binutils-2.39.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; userHook = null; version = "2.39"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = false; info = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = false; info = «repeated»; inputDerivation = <CODE>; isGNU = true; man = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = false; info = «repeated»; inputDerivation = <CODE>; isGNU = true; man = «repeated»; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; description = "Tools for manipulating binaries (linker, assembler, etc.)"; homepage = "https://www.gnu.org/software/binutils/"; insecure = <CODE>; license = { deprecated = false; free = true; fullName = "GNU General Public License v3.0 or later"; redistributable = <CODE>; shortName = "gpl3Plus"; spdxId = "GPL-3.0-or-later"; url = <CODE>; }; longDescription = "The GNU Binutils are a collection of binary tools.  The main\nones are `ld' (the GNU linker) and `as' (the GNU assembler).\nThey also include the BFD (Binary File Descriptor) library,\n`gprof', `nm', `strip', etc.\n"; maintainers = [ <CODE> <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = [ "i686-cygwin" "x86_64-cygwin" "x86_64-darwin" "i686-darwin" "aarch64-darwin" "armv7a-darwin" "i686-freebsd13" "x86_64-freebsd13" "x86_64-solaris" "aarch64-linux" "armv5tel-linux" "armv6l-linux" "armv7a-linux" "armv7l-linux" "i686-linux" "m68k-linux" "microblaze-linux" "microblazeel-linux" "mipsel-linux" "mips64el-linux" "powerpc64-linux" "powerpc64le-linux" "riscv32-linux" "riscv64-linux" "s390-linux" "s390x-linux" "x86_64-linux" <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> <CODE> ]; position = <CODE>; priority = 10; unfree = <CODE>; unsupported = <CODE>; }; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = false; info = «repeated»; inputDerivation = <CODE>; isGNU = true; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { hasGold = false; isGNU = true; targetPrefix = ""; }; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; userHook = null; version = "2.39"; }; outPath = "/nix/store/62hb4wn44qwsf2m0hq6f289j6ibp0kr2-binutils-2.39-man"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; userHook = null; version = "2.39"; }; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/5964d6d0rzp95pj9ilq45xn2mddfi0sa-binutils-2.39-info"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; userHook = null; version = "2.39"; }; inputDerivation = <CODE>; isGNU = true; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; userHook = null; version = "2.39"; }; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dynamicLinker = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld-linux-aarch64.so.1"; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "info" ]; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39 /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/62hb4wn44qwsf2m0hq6f289j6ibp0kr2-binutils-2.39-man $man\nln -s /nix/store/5964d6d0rzp95pj9ilq45xn2mddfi0sa-binutils-2.39-info $info\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/bintools-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage1-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage1-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage1-stdenv-linux"; out = «repeated»; outPath = "/nix/store/09xin4pn91i4vhh4i421q3zm7020w356-bootstrap-stage1-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/09xin4pn91i4vhh4i421q3zm7020w356-bootstrap-stage1-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; drvPath = <CODE>; dynamicLinker = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; dynamicLinker = "/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = «repeated»; outPath = "/nix/store/mja62sxrp34c51wwy72ahzbv4msw2czx-binutils-wrapper-2.39"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; }; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39 /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/62hb4wn44qwsf2m0hq6f289j6ibp0kr2-binutils-2.39-man $man\nln -s /nix/store/5964d6d0rzp95pj9ilq45xn2mddfi0sa-binutils-2.39-info $info\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; outPath = "/nix/store/mja62sxrp34c51wwy72ahzbv4msw2czx-binutils-wrapper-2.39"; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39 /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/62hb4wn44qwsf2m0hq6f289j6ibp0kr2-binutils-2.39-man $man\nln -s /nix/store/5964d6d0rzp95pj9ilq45xn2mddfi0sa-binutils-2.39-info $info\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "bootstrap-stage2-gcc-wrapper-"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "bootstrap-stage2-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; name = "expand-response-params"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; meta = <CODE>; name = "expand-response-params"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage2-gcc-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/4r5w0hzj0clfq7wwml2spkj3qb3sc6f8-bootstrap-stage2-gcc-wrapper-"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; expand-response-params = «repeated»; isClang = false; isGNU = true; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; }; patches = [ ]; pname = "bootstrap-stage2-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; } ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { ARCH = "arm64"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "make mrproper $makeFlags\nmake headers $makeFlags\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkPhase = "make headers_check $makeFlags\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; extraIncludeDirs = [ ]; hardeningDisable = [ ]; installPhase = "mkdir -p $out\ncp -r usr/include $out\nfind $out -type f ! -name '*.h' -delete\nmkdir -p $out/include/config\necho \"6.0-default\" > $out/include/config/kernel.release\n"; makeFlags = [ "SHELL=bash" "cc-version:=9999" "cc-fullversion:=999999" "HOSTCC:=$(CC_FOR_BUILD)" "HOSTCXX:=$(CXX_FOR_BUILD)" ]; mesonFlags = [ ]; name = "linux-headers-6.0"; nativeBuildInputs = [ «repeated» null ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/kernel-headers/no-relocs.patch ]; pname = "linux-headers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "linux-6.0.tar.xz"; outputHash = "sha256-XCRDpVON5SaI77VcJ6sFOcH161jAz9FqK5+7CP2BeI4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.0.tar.xz"; urls = [ "https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.0.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "linux-6.0.tar.xz"; out = «repeated»; outPath = "/nix/store/4rglx3nfn33w68rvj1y7rvys8p9s4zw1-linux-6.0.tar.xz"; outputHash = "sha256-XCRDpVON5SaI77VcJ6sFOcH161jAz9FqK5+7CP2BeI4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.0.tar.xz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = [ «repeated» ]; name = "bootstrap-stage2-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage2-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage2-stdenv-linux"; out = «repeated»; outPath = "/nix/store/h51jxl9qp75ayn5kch010vknjdw2byrf-bootstrap-stage2-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/h51jxl9qp75ayn5kch010vknjdw2byrf-bootstrap-stage2-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; extraIncludeDirs = [ ]; hardeningDisable = [ ]; inputDerivation = <CODE>; installPhase = "mkdir -p $out\ncp -r usr/include $out\nfind $out -type f ! -name '*.h' -delete\nmkdir -p $out/include/config\necho \"6.0-default\" > $out/include/config/kernel.release\n"; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "linux-headers-6.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/d8kydsy7nmzv9cswlhkcckg03x0v3yc8-linux-headers-6.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "linux-headers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.0"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-C" "--enable-add-ons" "--sysconfdir=/etc" "--enable-stack-protector=strong" "--enable-bind-now" "--with-headers=/nix/store/d8kydsy7nmzv9cswlhkcckg03x0v3yc8-linux-headers-6.0/include" "--disable-profile" "--enable-static-pie" "--enable-kernel=3.10.0" "--disable-crypt" ]; debug = <CODE>; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { BASH_SHELL = "/bin/sh"; NIX_CFLAGS_COMPILE = ""; NIX_HARDENING_ENABLE = «repeated»; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { BASH_SHELL = "/bin/sh"; NIX_CFLAGS_COMPILE = ""; NIX_HARDENING_ENABLE = «repeated»; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "fortify" "pie" "stackprotector" ]; installFlags = [ "sysconfdir=$(out)/etc" ]; is64bit = true; linuxHeaders = { ARCH = "arm64"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; buildPhase = "make mrproper $makeFlags\nmake headers $makeFlags\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkPhase = "make headers_check $makeFlags\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; extraIncludeDirs = [ ]; hardeningDisable = [ ]; inputDerivation = <CODE>; installPhase = "mkdir -p $out\ncp -r usr/include $out\nfind $out -type f ! -name '*.h' -delete\nmkdir -p $out/include/config\necho \"6.0-default\" > $out/include/config/kernel.release\n"; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "linux-headers-6.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/d8kydsy7nmzv9cswlhkcckg03x0v3yc8-linux-headers-6.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "linux-headers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.0"; }; makeFlags = [ "OBJCOPY=objcopy" ]; mesonFlags = [ ]; name = "glibc-2.35-224"; nativeBuildInputs = [ «repeated» { CPPFLAGS = "-I/nix/store/ik64czkjg0hgf81a82wp83cibnismnjq-zlib-1.2.13-dev/include -I/nix/store/ycvddm5z5n9a6knhvdz3djzwi2icqpfg-bzip2-1.0.8-dev/include -I/nix/store/mxmcy2l3c6k7sm7nqix3ai29fqysgpfd-expat-2.5.0-dev/include -I/nix/store/a581g8840y05m085vpb41lcmcldh511m-xz-5.2.9-dev/include -I/nix/store/lxcm6n2mz5icgmw7d7hmcp6zijvmz0ml-libffi-3.4.4-dev/include -I/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33/include"; LDFLAGS = "-L/nix/store/yxg6yp6i23x3kwp0q5b12rsnk66vj74l-zlib-1.2.13/lib -L/nix/store/r6sl7hn8czb4mjgmxyqs3zkfxnfr5sw1-bzip2-1.0.8/lib -L/nix/store/8d83a5j36zpmzbqa01vvnfrld3a2m50a-expat-2.5.0/lib -L/nix/store/gqnc8wf3412by7zndglwh54ph4hpm50y-xz-5.2.9/lib -L/nix/store/5vfmka0k00z8i9mhg63ws8mjy0221fsc-libffi-3.4.4/lib -L/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-readline" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" ]; makeFlags = [ ]; mesonFlags = [ ]; name = "bash-5.1-p16"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "man" "doc" "info" ]; patchFlags = [ "-p0" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-001"; out = «repeated»; outPath = "/nix/store/5ibv7vnqs9qq75qwp9p276l9r35ldccm-bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-002"; out = «repeated»; outPath = "/nix/store/z1wfvm57izp9mdx3svdm8ayvw9f24bsr-bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-003"; out = «repeated»; outPath = "/nix/store/db77yl7pra8dk4jkdg82gja84ara63nj-bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-004"; out = «repeated»; outPath = "/nix/store/h1xsw38qjfclxwji7pa2ysvgdrgwbmaj-bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-005"; out = «repeated»; outPath = "/nix/store/99jb0lrxv2w0iby2pyj69qg5d8gjbpgg-bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-006"; out = «repeated»; outPath = "/nix/store/c13hmsqmwb8ip2bjba4xxzmxjwyqn0qw-bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-007"; out = «repeated»; outPath = "/nix/store/clfxvc0dwwbnrs9n9ingq542yv1mavvd-bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-008"; out = «repeated»; outPath = "/nix/store/8ryxppqg6lay7vj105sd175svh9is18w-bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-009"; out = «repeated»; outPath = "/nix/store/46wm974l1ywf7h84bizls4hiv2mc8caj-bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-010"; out = «repeated»; outPath = "/nix/store/1zph6k1xylkaajdcx6g10m1himcm1bmh-bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-011"; out = «repeated»; outPath = "/nix/store/dfzijgqay55f61yldz74dlzcj3kc84n9-bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-012"; out = «repeated»; outPath = "/nix/store/rl9348bn6clw01gzy8bdmdzjxync1rsp-bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-013"; out = «repeated»; outPath = "/nix/store/z4amhpapl83iwjxkq9p9lylkh0ffyq1d-bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-014"; out = «repeated»; outPath = "/nix/store/wanyhkgjwxccvyqla6r236423cda6c6v-bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-015"; out = «repeated»; outPath = "/nix/store/k3hwb5acr6xjycj853fczqby0c9d6mmq-bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-016"; out = «repeated»; outPath = "/nix/store/526apfg6pqnq86vflaiv4j2hikl8cjyx-bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = «repeated»; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/shells/bash/pgrp-pipe-5.1.patch ]; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash-5.1.tar.gz"; out = «repeated»; outPath = "/nix/store/5sgii519481kdsdg9kk027jlr7z641wd-bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = «repeated»; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage2-gcc-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/4r5w0hzj0clfq7wwml2spkj3qb3sc6f8-bootstrap-stage2-gcc-wrapper-"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "bootstrap-stage2-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc\necho \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage2-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage2-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage2-stdenv-linux"; out = «repeated»; outPath = "/nix/store/b7lcyr88arcx10qb38nh035d2f2b8idr-bootstrap-stage2-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/b7lcyr88arcx10qb38nh035d2f2b8idr-bootstrap-stage2-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bash-5.1-p16"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/hnyk3vnxlb50qrx2k443giv8b7lb7534-bash-5.1-p16-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { shellPath = "/bin/bash"; }; patchFlags = «repeated»; patches = «repeated»; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shellPath = "/bin/bash"; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.1"; } { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--static" "--shared" ]; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ ]; makeFlags = [ "PREFIX=" "SHARED_MODE=1" ]; mesonFlags = [ ]; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; outputDoc = "dev"; outputs = [ "out" "dev" "static" ]; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = [ "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "zlib-1.2.13.tar.gz"; out = «repeated»; outPath = "/nix/store/3yhi12pgsmv2dz0x2ialvjw51lnv4jw8-zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.2.13"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/yxg6yp6i23x3kwp0q5b12rsnk66vj74l-zlib-1.2.13"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; }; outPath = "/nix/store/ik64czkjg0hgf81a82wp83cibnismnjq-zlib-1.2.13-dev"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "bzip2-1.0.8"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/xsvxs949hc8m6s7bhf6rhsfcy1v7dnvj-autoconf-2.71 /nix/store/m3l1yjwzj541yz6ns97hag4z7fhzzg73-automake-1.16.5 /nix/store/0lxrp5hjdnjms2xlnqrbw1s2z6npql3i-gettext-0.21 /nix/store/vxqi05v8gh74czqy3mj28h5a4srz0jzh-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/xsvxs949hc8m6s7bhf6rhsfcy1v7dnvj-autoconf-2.71 /nix/store/m3l1yjwzj541yz6ns97hag4z7fhzzg73-automake-1.16.5 /nix/store/0lxrp5hjdnjms2xlnqrbw1s2z6npql3i-gettext-0.21 /nix/store/vxqi05v8gh74czqy3mj28h5a4srz0jzh-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/xqp9nwbz52xf4lj7sw1h5fhr1apw1njp-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "bin" "dev" "out" "man" ]; patchFlags = [ "-p0" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bzip2-1.0.6.2-autoconfiscated.patch"; outputHash = "sha256-QMufl6ffJVVVVZespvkCbFpB6++R1lnq1687jEsUjr0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftp.suse.com/pub/people/sbrabec/bzip2/for_downstream/bzip2-1.0.6.2-autoconfiscated.patch"; urls = [ "https://ftp.suse.com/pub/people/sbrabec/bzip2/for_downstream/bzip2-1.0.6.2-autoconfiscated.patch" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bzip2-1.0.6.2-autoconfiscated.patch"; out = «repeated»; outPath = "/nix/store/ws73d521m0im6x7nhb0836i51z2yd9dq-bzip2-1.0.6.2-autoconfiscated.patch"; outputHash = "sha256-QMufl6ffJVVVVZespvkCbFpB6++R1lnq1687jEsUjr0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftp.suse.com/pub/people/sbrabec/bzip2/for_downstream/bzip2-1.0.6.2-autoconfiscated.patch"; urls = «repeated»; } ]; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bzip2-1.0.8.tar.gz"; outputHash = "sha256-q1oDF27hBtPw+pDjgdpHjdrkBZGBU8yiSOaCzQxKImk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz"; urls = [ "https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bzip2-1.0.8.tar.gz"; out = «repeated»; outPath = "/nix/store/slpdqm3wlhwbkzyijjz3xpifa219ac0x-bzip2-1.0.8.tar.gz"; outputHash = "sha256-q1oDF27hBtPw+pDjgdpHjdrkBZGBU8yiSOaCzQxKImk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.0.8"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bzip2-1.0.8"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bzip2-1.0.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/r6sl7hn8czb4mjgmxyqs3zkfxnfr5sw1-bzip2-1.0.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0.8"; }; outPath = "/nix/store/ycvddm5z5n9a6knhvdz3djzwi2icqpfg-bzip2-1.0.8-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0.8"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "expat-2.5.0"; nativeBuildInputs = [ ]; outputBin = "dev"; outputMan = "dev"; outputs = [ "out" "dev" ]; patches = [ ]; pname = "expat"; postFixup = "substituteInPlace $dev/lib/cmake/expat-2.5.0/expat-noconfig.cmake \\\n  --replace \"$\"'{_IMPORT_PREFIX}' $out\n"; preCheck = "patchShebangs ./configure ./run.sh ./test-driver-wrapper.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "expat-2.5.0.tar.xz"; outputHash = "1gnwihpfz4x18rwd6cbrdggmfqjzwsdfh1gpmc0ph21c4gq2097g"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.xz"; urls = [ "https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "expat-2.5.0.tar.xz"; out = «repeated»; outPath = "/nix/store/z0dk90vlwlhm097kka2632wmnjr0izw2-expat-2.5.0.tar.xz"; outputHash = "1gnwihpfz4x18rwd6cbrdggmfqjzwsdfh1gpmc0ph21c4gq2097g"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.5.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "expat-2.5.0"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "expat-2.5.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/8d83a5j36zpmzbqa01vvnfrld3a2m50a-expat-2.5.0"; outputBin = "dev"; outputMan = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "expat"; postFixup = "substituteInPlace $dev/lib/cmake/expat-2.5.0/expat-noconfig.cmake \\\n  --replace \"$\"'{_IMPORT_PREFIX}' $out\n"; preCheck = "patchShebangs ./configure ./run.sh ./test-driver-wrapper.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "2.5.0"; }; outPath = "/nix/store/mxmcy2l3c6k7sm7nqix3ai29fqysgpfd-expat-2.5.0-dev"; outputBin = "dev"; outputMan = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "expat"; postFixup = "substituteInPlace $dev/lib/cmake/expat-2.5.0/expat-noconfig.cmake \\\n  --replace \"$\"'{_IMPORT_PREFIX}' $out\n"; preCheck = "patchShebangs ./configure ./run.sh ./test-driver-wrapper.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "2.5.0"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "xz-5.2.9"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "man" "doc" ]; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = [ "https://tukaani.org/xz/xz-5.2.9.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "xz-5.2.9.tar.bz2"; out = «repeated»; outPath = "/nix/store/c1z3szr5rlsi6936nvvq40ipra6gsjxi-xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.2.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/gqnc8wf3412by7zndglwh54ph4hpm50y-xz-5.2.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "5.2.9"; }; outPath = "/nix/store/na17ksabi25hdmr8diw7lyj0bj49isf6-xz-5.2.9-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "5.2.9"; }; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/a581g8840y05m085vpb41lcmcldh511m-xz-5.2.9-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "5.2.9"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-gcc-arch=generic" "--enable-pax_emutramp" "--disable-exec-static-tramp" "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; dontStrip = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libffi-3.4.4"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "man" "info" ]; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "libffi-3.4.4.tar.gz"; outputHash = "sha256-1mxWrSWags8qnfxAizK/XaUjcVALhHRff7i2RXEt9nY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz"; urls = [ "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "libffi-3.4.4.tar.gz"; out = «repeated»; outPath = "/nix/store/pgxpq0lmk4bd0yybaxkb82qlcjx55apn-libffi-3.4.4.tar.gz"; outputHash = "sha256-1mxWrSWags8qnfxAizK/XaUjcVALhHRff7i2RXEt9nY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.4.4"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libffi-3.4.4"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; dontStrip = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libffi-3.4.4"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/5vfmka0k00z8i9mhg63ws8mjy0221fsc-libffi-3.4.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.4.4"; }; outPath = "/nix/store/lxcm6n2mz5icgmw7d7hmcp6zijvmz0ml-libffi-3.4.4-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.4.4"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-hashes=all" "--enable-obsolete-api=glibc" "--disable-failure-tokens" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libxcrypt-4.4.33"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-de" "-Dcc=cc" "-Uinstallusrbinperl" "-Dinstallstyle=lib/perl5" "-Duseshrplib" "-Dlocincpth=/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/include" "-Dloclibpth=/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib" "-A clear:d_crypt_r" "-Dprefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" "-Dman1dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man1" "-Dman3dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man3" ]; configurePlatforms = [ ]; configureScript = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "perl-5.36.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/no-sys-dirs-5.31.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/http-tiny-verify-ssl-by-default.patch ]; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" /no-such-path \\\n  --replace \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\" /no-such-path \\\n  --replace \"/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/bfjsycf4rdys0q0agbjq91bsinvcz9sd-zlib-1.2.13-dev/include\nLIB          = /nix/store/ygjlx3cdsr7jxpddx1w19nkmvg00cd2l-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n# We need to do this because the bootstrap doesn't have a static libpthread\nsed -i 's,\\(libswanted.*\\)pthread,\\1,g' Configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = [ "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "perl-5.36.0.tar.gz"; out = «repeated»; outPath = "/nix/store/jrq5yrwn0km82vnbs41xha3a41mszdka-perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.36.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jqvdj540fhid3mm5i21m98hzkplhalri-perl-5.36.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; pkgs = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" /no-such-path \\\n  --replace \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\" /no-such-path \\\n  --replace \"/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/bfjsycf4rdys0q0agbjq91bsinvcz9sd-zlib-1.2.13-dev/include\nLIB          = /nix/store/ygjlx3cdsr7jxpddx1w19nkmvg00cd2l-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n# We need to do this because the bootstrap doesn't have a static libpthread\nsed -i 's,\\(libswanted.*\\)pthread,\\1,g' Configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.36.0"; withPackages = <CODE>; } ]; outputs = [ "out" "man" ]; patches = [ ]; pname = "libxcrypt"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "libxcrypt-4.4.33.tar.xz"; outputHash = "sha256-6HrPnGUsVzpHE9VYIVn5jzBdVu1fdUzmT1fUGU1rOm8="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/besser82/libxcrypt/releases/download/v4.4.33/libxcrypt-4.4.33.tar.xz"; urls = [ "https://github.com/besser82/libxcrypt/releases/download/v4.4.33/libxcrypt-4.4.33.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "libxcrypt-4.4.33.tar.xz"; out = «repeated»; outPath = "/nix/store/13242jfkz71av0n4skwn0hzj209c0rwz-libxcrypt-4.4.33.tar.xz"; outputHash = "sha256-6HrPnGUsVzpHE9VYIVn5jzBdVu1fdUzmT1fUGU1rOm8="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/besser82/libxcrypt/releases/download/v4.4.33/libxcrypt-4.4.33.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.4.33"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libxcrypt-4.4.33"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "libxcrypt"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "4.4.33"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "CFLAGS=-I/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/ik64czkjg0hgf81a82wp83cibnismnjq-zlib-1.2.13-dev/include -I/nix/store/ycvddm5z5n9a6knhvdz3djzwi2icqpfg-bzip2-1.0.8-dev/include -I/nix/store/mxmcy2l3c6k7sm7nqix3ai29fqysgpfd-expat-2.5.0-dev/include -I/nix/store/a581g8840y05m085vpb41lcmcldh511m-xz-5.2.9-dev/include -I/nix/store/lxcm6n2mz5icgmw7d7hmcp6zijvmz0ml-libffi-3.4.4-dev/include -I/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33/include"; LDFLAGS = "-L/nix/store/yxg6yp6i23x3kwp0q5b12rsnk66vj74l-zlib-1.2.13/lib -L/nix/store/r6sl7hn8czb4mjgmxyqs3zkfxnfr5sw1-bzip2-1.0.8/lib -L/nix/store/8d83a5j36zpmzbqa01vvnfrld3a2m50a-expat-2.5.0/lib -L/nix/store/gqnc8wf3412by7zndglwh54ph4hpm50y-xz-5.2.9/lib -L/nix/store/5vfmka0k00z8i9mhg63ws8mjy0221fsc-libffi-3.4.4/lib -L/nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-minimal-3.10.9"; nativeBuildInputs = [ «repeated» { __ignoreNulls = true; addFlags = [ ]; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; baseBinName = "pkg-config"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; addFlags = [ ]; args = «repeated»; baseBinName = "pkg-config"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\n\necho $pkg-config > $out/nix-support/orig-pkg-config\n\nwrap pkg-config /nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh \"/nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2/bin/pkg-config\"\nln -s /nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2/share $out/share\n"; mesonFlags = [ ]; name = "pkg-config-wrapper-0.29.2"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "doc" ]; patches = [ ]; pname = "pkg-config-wrapper"; postFixup = "printWords /nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2 > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/la5blr107fwsksw3if5srx404fnvyqyx-pkg-config-0.29.2-man $man\nln -s /nix/store/d80fdd11fif9vrmd8lcvd5x7392vv1ri-pkg-config-0.29.2-doc $doc\nsubstituteAll /nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/pkg-config-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "0.29.2"; wrapperName = "PKG_CONFIG_WRAPPER"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\n\necho $pkg-config > $out/nix-support/orig-pkg-config\n\nwrap pkg-config /nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh \"/nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2/bin/pkg-config\"\nln -s /nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2/share $out/share\n"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pkg-config-wrapper-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/fxcx8gdikpab9k7b26faibcd6h2yl3n7-pkg-config-wrapper-0.29.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pkg-config = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-internal-glib" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "doc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/pkg-config/requires-private.patch ]; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "pkg-config-0.29.2.tar.gz"; outputHash = "14fmwzki1rlz8bs2p810lk6jqdxsk966d8drgsjmi54cd00rrikg"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"; urls = [ "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "pkg-config-0.29.2.tar.gz"; out = «repeated»; outPath = "/nix/store/83haczzqmdmjjaf73y4fnk1zkcfai9zf-pkg-config-0.29.2.tar.gz"; outputHash = "14fmwzki1rlz8bs2p810lk6jqdxsk966d8drgsjmi54cd00rrikg"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.29.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; description = "A tool that allows packages to find out information about other packages"; homepage = "http://pkg-config.freedesktop.org/wiki/"; insecure = <CODE>; license = { deprecated = false; free = true; fullName = "GNU General Public License v2.0 or later"; redistributable = <CODE>; shortName = "gpl2Plus"; spdxId = "GPL-2.0-or-later"; url = <CODE>; }; name = <CODE>; outputsToInstall = <CODE>; platforms = [ "i686-cygwin" "x86_64-cygwin" "x86_64-darwin" "i686-darwin" "aarch64-darwin" "armv7a-darwin" "i686-freebsd13" "x86_64-freebsd13" "aarch64-genode" "i686-genode" "x86_64-genode" "x86_64-solaris" "js-ghcjs" "aarch64-linux" "armv5tel-linux" "armv6l-linux" "armv7a-linux" "armv7l-linux" "i686-linux" "m68k-linux" "microblaze-linux" "microblazeel-linux" "mipsel-linux" "mips64el-linux" "powerpc64-linux" "powerpc64le-linux" "riscv32-linux" "riscv64-linux" "s390-linux" "s390x-linux" "x86_64-linux" "mmix-mmixware" "aarch64-netbsd" "armv6l-netbsd" "armv7a-netbsd" "armv7l-netbsd" "i686-netbsd" "m68k-netbsd" "mipsel-netbsd" "powerpc-netbsd" "riscv32-netbsd" "riscv64-netbsd" "x86_64-netbsd" "aarch64_be-none" "aarch64-none" "arm-none" "armv6l-none" "avr-none" "i686-none" "microblaze-none" "microblazeel-none" "msp430-none" "or1k-none" "m68k-none" "powerpc-none" "powerpcle-none" "riscv32-none" "riscv64-none" "rx-none" "s390-none" "s390x-none" "vc4-none" "x86_64-none" "i686-openbsd" "x86_64-openbsd" "x86_64-redox" "wasm64-wasi" "wasm32-wasi" "x86_64-windows" "i686-windows" ]; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; outPath = "/nix/store/la5blr107fwsksw3if5srx404fnvyqyx-pkg-config-0.29.2-man"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/d80fdd11fif9vrmd8lcvd5x7392vv1ri-pkg-config-0.29.2-doc"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.29.2"; }; }; patches = [ ]; pkg-config = «repeated»; pname = "pkg-config-wrapper"; postFixup = "printWords /nix/store/3m2bk4jad93sckzsspbcsaxz4kk8613d-pkg-config-0.29.2 > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/la5blr107fwsksw3if5srx404fnvyqyx-pkg-config-0.29.2-man $man\nln -s /nix/store/d80fdd11fif9vrmd8lcvd5x7392vv1ri-pkg-config-0.29.2-doc $doc\nsubstituteAll /nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "0.29.2"; wrapperName = "PKG_CONFIG_WRAPPER"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "autoconf-archive-2022.09.03"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "autoconf-archive"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "autoconf-archive-2022.09.03.tar.xz"; outputHash = "sha256-4HRU8A2MrnkHvtQtB0d5iSeAmUdoTZTDcgek1joy9CM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/autoconf-archive/autoconf-archive-2022.09.03.tar.xz"; urls = [ "https://ftpmirror.gnu.org/autoconf-archive/autoconf-archive-2022.09.03.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "autoconf-archive-2022.09.03.tar.xz"; out = «repeated»; outPath = "/nix/store/50fzb7ic7bcpc74q7bqy2yjcnqy51nz1-autoconf-archive-2022.09.03.tar.xz"; outputHash = "sha256-4HRU8A2MrnkHvtQtB0d5iSeAmUdoTZTDcgek1joy9CM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/autoconf-archive/autoconf-archive-2022.09.03.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2022.09.03"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "autoconf-archive-2022.09.03"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/s3ck407an40kmja3wkvwn5ag0zdsm73d-autoconf-archive-2022.09.03"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "autoconf-archive"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2022.09.03"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dontUnpack = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dontUnpack = true; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $out/bin\nsubstituteAll /nix/store/9m54l1bi5814x9cqznwlga7yfs5ipi6h-nuke-refs.sh $out/bin/nuke-refs\nchmod a+x $out/bin/nuke-refs\n"; mesonFlags = [ ]; name = "nuke-references"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; perl = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jqvdj540fhid3mm5i21m98hzkplhalri-perl-5.36.0"; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pkgs = <CODE>; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap\" /no-such-path \\\n  --replace \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\" /no-such-path \\\n  --replace \"/nix/store/97wcj8smd9wcmnqpc8bg5s6gygzmjm0k-bootstrap-stage1-gcc-wrapper-\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/bfjsycf4rdys0q0agbjq91bsinvcz9sd-zlib-1.2.13-dev/include\nLIB          = /nix/store/ygjlx3cdsr7jxpddx1w19nkmvg00cd2l-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n# We need to do this because the bootstrap doesn't have a static libpthread\nsed -i 's,\\(libswanted.*\\)pthread,\\1,g' Configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "5.36.0"; withPackages = <CODE>; }; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; signingUtils = null; stdenv = «repeated»; storeDir = "/nix/store"; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin\nsubstituteAll /nix/store/9m54l1bi5814x9cqznwlga7yfs5ipi6h-nuke-refs.sh $out/bin/nuke-refs\nchmod a+x $out/bin/nuke-refs\n"; mesonFlags = [ ]; meta = <CODE>; name = "nuke-references"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; perl = «repeated»; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; signingUtils = null; stdenv = «repeated»; storeDir = "/nix/store"; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3-minimal"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33 '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33 '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\nrm -R $out/bin/python*-config $out/lib/python*/config-*\n# Strip IDLE (and turtledemo, which uses it)\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\nrm -R $out/lib/python*/tkinter\n# Strip tests\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/656k6z8acjgvmzsrkwzbsw34af2bmj5n-bash-5.1-p16/bin/sh'\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/hbnbxvz7js587535xi35ik8vlzc7x8an-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "Python-3.10.9.tar.xz"; out = «repeated»; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = <CODE>; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = <CODE>; name = "python3-minimal-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/l1pfiswjkfgg56kfqhfnk60cph32wxqj-python3-minimal-3.10.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = <CODE>; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = "python3Minimal"; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = { major = "3"; minor = "10"; patch = "9"; suffix = ""; }; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3-minimal"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33 '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/1cszlz1yafhqid4y3bd74f3462zggd3p-libxcrypt-4.4.33 '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\nrm -R $out/bin/python*-config $out/lib/python*/config-*\n# Strip IDLE (and turtledemo, which uses it)\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\nrm -R $out/lib/python*/tkinter\n# Strip tests\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/656k6z8acjgvmzsrkwzbsw34af2bmj5n-bash-5.1-p16/bin/sh'\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python3Minimal"; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.10.9"; withPackages = <CODE>; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "bin" "dev" "static" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/2.35-master.patch.gz /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/revert-mktime.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/nix-locale-archive.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/dont-use-system-ld-so-cache.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/dont-use-system-ld-so-preload.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/fix_path_attribute_in_getconf.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/fix-x64-abi.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/nix-nss-open-files.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/0001-Revert-Remove-all-usage-of-BASH-or-BASH-in-installed.patch ]; pname = "glibc"; postConfigure = "# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"; postInstall = "echo SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j\${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\nln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib OBJDUMP=/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/objdump\"\n\n\n"; preInstall = "if [ -f /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"; profilingLibraries = false; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "glibc-2.35.tar.xz"; outputHash = "sha256-USNzL2tnzNMZMF79OZlx1YWSEivMKmUYob0lEN0M9S4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/glibc/glibc-2.35.tar.xz"; urls = [ "https://ftpmirror.gnu.org/glibc/glibc-2.35.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "glibc-2.35.tar.xz"; out = «repeated»; outPath = "/nix/store/hsji8dkz2azgn3ylyzx9898qyrf46axv-glibc-2.35.tar.xz"; outputHash = "sha256-USNzL2tnzNMZMF79OZlx1YWSEivMKmUYob0lEN0M9S4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/glibc/glibc-2.35.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.35-224"; withLibcrypt = false; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; is64bit = true; linuxHeaders = «repeated»; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; minorRelease = "2.35"; name = "glibc-2.35-224"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { minorRelease = "2.35"; version = "2.35"; }; patches = «repeated»; pname = "glibc"; postConfigure = "# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"; postInstall = "echo SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j\${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\nln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib OBJDUMP=/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/objdump\"\n\n\n"; preInstall = "if [ -f /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"; profilingLibraries = false; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; static = { BASH_SHELL = "/bin/sh"; NIX_CFLAGS_COMPILE = ""; NIX_HARDENING_ENABLE = «repeated»; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; is64bit = true; linuxHeaders = «repeated»; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; minorRelease = "2.35"; name = "glibc-2.35-224"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/pri0qpp0b6j5m6w1lri06mlfj96a1h2y-glibc-2.35-224-static"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "glibc"; postConfigure = "# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"; postInstall = "echo SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j\${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\nln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib OBJDUMP=/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/objdump\"\n\n\n"; preInstall = "if [ -f /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"; profilingLibraries = false; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; static = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.35"; withLibcrypt = false; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.35"; withLibcrypt = false; }; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; is64bit = true; linuxHeaders = «repeated»; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; minorRelease = "2.35"; name = "glibc-2.35-224"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "glibc"; postConfigure = "# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"; postInstall = "echo SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j\${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\nln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib OBJDUMP=/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/objdump\"\n\n\n"; preInstall = "if [ -f /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"; profilingLibraries = false; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; static = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.35"; withLibcrypt = false; }; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; is64bit = true; linuxHeaders = «repeated»; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; minorRelease = "2.35"; name = "glibc-2.35-224"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "glibc"; postConfigure = "# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"; postInstall = "echo SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j\${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\nln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib OBJDUMP=/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/objdump\"\n\n\n"; preInstall = "if [ -f /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"; profilingLibraries = false; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; static = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.35"; withLibcrypt = false; } «repeated» ]; buildPhase = "runHook preBuild\nexport GOCACHE=$TMPDIR/go-cache\n# this is compiled into the binary\nexport GOROOT_FINAL=$out/share/go\n\nexport PATH=$(pwd)/bin:$PATH\n\n\nulimit -a\n\npushd src\n./make.bash\npopd\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontStrip = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontStrip = false; installPhase = "runHook preInstall\nmkdir -p $out/share/go $out/bin\ncp -r . $out/share/go\nln -s $out/share/go/bin/go $out/bin/go\nrunHook postInstall\n"; mesonFlags = [ ]; name = "go-1.16-linux-arm64-bootstrap"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; autoPatchelfScript = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/auto-patchelf.py; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/rdypp041l20z5i2fzzz7rr1qznj8ww1q-auto-patchelf.sh $out/nix-support/setup-hook\nprintWords /nix/store/qy7hdj4vz3sza4x713fz101j1j326wf3-binutils-wrapper-2.39 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/rdypp041l20z5i2fzzz7rr1qznj8ww1q-auto-patchelf.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; autoPatchelfScript = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/auto-patchelf.py; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/rdypp041l20z5i2fzzz7rr1qznj8ww1q-auto-patchelf.sh $out/nix-support/setup-hook\nprintWords /nix/store/qy7hdj4vz3sza4x713fz101j1j326wf3-binutils-wrapper-2.39 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/rdypp041l20z5i2fzzz7rr1qznj8ww1q-auto-patchelf.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "auto-patchelf-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/sfpfsrqbqymf8rw7hb1hbj96c2y3s8gl-python3-3.10.9-env/bin/python"; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; allowedRequisites = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ "SHELL=/bin/sh" "GREP=grep" "ZLESS_MAN=zless.1" "ZLESS_PROG=zless" ]; mesonFlags = [ ]; name = "gzip-1.12"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "xz-5.2.9"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "man" "doc" ]; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = [ "https://tukaani.org/xz/xz-5.2.9.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "xz-5.2.9.tar.bz2"; out = «repeated»; outPath = "/nix/store/c1z3szr5rlsi6936nvvq40ipra6gsjxi-xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontUnpack = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontUnpack = true; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p \"$out\"/bin\ncp -a '/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39'/bin/* \"$out\"/bin/\nchmod +w \"$out\"/bin/ld.bfd\npatchelf --set-interpreter '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224'/lib/ld*.so.? \\\n  --set-rpath \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib:$(patchelf --print-rpath \"$out\"/bin/ld.bfd)\" \\\n  \"$out\"/bin/ld.bfd\n"; mesonFlags = [ ]; name = "binutils-2.39"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p \"$out\"/bin\ncp -a '/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39'/bin/* \"$out\"/bin/\nchmod +w \"$out\"/bin/ld.bfd\npatchelf --set-interpreter '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224'/lib/ld*.so.? \\\n  --set-rpath \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib:$(patchelf --print-rpath \"$out\"/bin/ld.bfd)\" \\\n  \"$out\"/bin/ld.bfd\n"; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; insecure = <CODE>; name = <CODE>; outputsToInstall = <CODE>; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "binutils-2.39"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontUnpack = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p \"$out\"/bin\ncp -a '/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39'/bin/* \"$out\"/bin/\nchmod +w \"$out\"/bin/ld.bfd\npatchelf --set-interpreter '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224'/lib/ld*.so.? \\\n  --set-rpath \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib:$(patchelf --print-rpath \"$out\"/bin/ld.bfd)\" \\\n  \"$out\"/bin/ld.bfd\n"; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dynamicLinker = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1"; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39 /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin > $out/nix-support/propagated-user-env-packages\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/bintools-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; drvPath = <CODE>; dynamicLinker = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = { BASH_SHELL = "/bin/sh"; NIX_CFLAGS_COMPILE = ""; NIX_HARDENING_ENABLE = «repeated»; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; is64bit = true; linuxHeaders = «repeated»; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; minorRelease = "2.35"; name = "glibc-2.35-224"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "glibc"; postConfigure = "# Hack: get rid of the `-static' flag set by the bootstrap stdenv.\n# This has to be done *after* `configure' because it builds some\n# test binaries.\nexport NIX_CFLAGS_LINK=\nexport NIX_LDFLAGS_BEFORE=\n\nexport NIX_DONT_SET_RPATH=1\nunset CFLAGS\n\n# Apparently --bindir is not respected.\nmakeFlagsArray+=(\"bindir=$bin/bin\" \"sbindir=$bin/sbin\" \"rootsbindir=$bin/sbin\")\n"; postInstall = "echo SUPPORTED-LOCALES=C.UTF-8/UTF-8 > ../glibc-2*/localedata/SUPPORTED\nmake -j\${NIX_BUILD_CORES:-1} localedata/install-locales\n\ntest -f $out/etc/ld.so.cache && rm $out/etc/ld.so.cache\n\nif test -n \"$linuxHeaders\"; then\n    # Include the Linux kernel headers in Glibc, except the `scsi'\n    # subdirectory, which Glibc provides itself.\n    (cd $dev/include && \\\n     ln -sv $(ls -d $linuxHeaders/include/* | grep -v scsi\\$) .)\nfi\n\n# Fix for NIXOS-54 (ldd not working on x86_64).  Make a symlink\n# \"lib64\" to \"lib\".\nif test -n \"$is64bit\"; then\n    ln -s lib $out/lib64\nfi\n\n# Get rid of more unnecessary stuff.\nrm -rf $out/var $bin/bin/sln\n\n# Backwards-compatibility to fix e.g.\n# \"configure: error: Pthreads are required to build libgomp\" during `gcc`-build\n# because it's not actually needed anymore to link against `pthreads` since\n# it's now part of `libc.so.6` itself, but the gcc build breaks if\n# this doesn't work.\nln -sf $out/lib/libpthread.so.0 $out/lib/libpthread.so\nln -sf $out/lib/librt.so.1 $out/lib/librt.so\nln -sf $out/lib/libdl.so.2 $out/lib/libdl.so\nln -sf $out/lib/libutil.so.1 $out/lib/libutil.so\ntouch $out/lib/libpthread.a\n\n# Put libraries for static linking in a separate output.  Note\n# that libc_nonshared.a and libpthread_nonshared.a are required\n# for dynamically-linked applications.\nmkdir -p $static/lib\nmv $out/lib/*.a $static/lib\nmv $static/lib/lib*_nonshared.a $out/lib\n# Some of *.a files are linker scripts where moving broke the paths.\nsed \"/^GROUP/s|$out/lib/lib|$static/lib/lib|g\" \\\n  -i \"$static\"/lib/*.a\n\n# Work around a Nix bug: hard links across outputs cause a build failure.\ncp $bin/bin/getconf $bin/bin/getconf_\nmv $bin/bin/getconf_ $bin/bin/getconf\n"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/jhclryrafs9ak5cbrl5c6lsckgkdzg14-bootstrap-stage0-glibc-bootstrap/lib OBJDUMP=/nix/store/jdfkya797snblnq054vywv5wpm30vdld-binutils-2.39/bin/objdump\"\n\n\n"; preInstall = "if [ -f /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 ]; then\n    mkdir -p $out/lib\n    cp /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so.1 $out/lib/libgcc_s.so.1\n    # the .so It used to be a symlink, but now it is a script\n    cp -a /nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib/libgcc_s.so $out/lib/libgcc_s.so\nfi\n"; profilingLibraries = false; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; static = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.35"; withLibcrypt = false; }; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; dynamicLinker = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/jlzzb35gxa9gk2i9rb7nbgr1fvdwwjj1-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = «repeated»; outPath = "/nix/store/5ifk31d00vwf7cqqj664yxv0vj7jnlrk-binutils-wrapper-2.39"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; }; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39 /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin > $out/nix-support/propagated-user-env-packages\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; outPath = "/nix/store/5ifk31d00vwf7cqqj664yxv0vj7jnlrk-binutils-wrapper-2.39"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/ngbal87x4pczymckbd07avk9r1j28l19-binutils-2.39 /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin > $out/nix-support/propagated-user-env-packages\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = { CPATH = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include"; EXTRA_FLAGS_FOR_TARGET = [ ]; EXTRA_LDFLAGS_FOR_TARGET = [ ]; LIBRARY_PATH = "/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; NIX_LDFLAGS = ""; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/gcc/builder.sh ]; buildFlags = [ "bootstrap" ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ "-DBUILD_SHARED_LIBS:BOOL=OFF" ]; configureFlags = [ "--with-pic" "--enable-cxx" "--disable-fat" "--build=aarch64-unknown-linux-gnu" "--enable-static" "--disable-shared" ]; depsBuildBuild = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/34k9w1lnax1nk16qpx5bzl08zp9zva1z-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "bootstrap-stage3-gcc-wrapper-"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "bootstrap-stage3-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; name = "expand-response-params"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; meta = <CODE>; name = "expand-response-params"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/34k9w1lnax1nk16qpx5bzl08zp9zva1z-expand-response-params"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; expandResponseParams = "/nix/store/34k9w1lnax1nk16qpx5bzl08zp9zva1z-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage3-gcc-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/0rrp6fw296y8niyis624d0gz86748bvz-bootstrap-stage3-gcc-wrapper-"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; expand-response-params = «repeated»; isClang = false; isGNU = true; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; }; patches = [ ]; pname = "bootstrap-stage3-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; } ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontDisableStatic = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = «repeated»; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontDisableStatic = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ "-Ddefault_library=static" ]; name = "gmp-with-cxx-stage3-6.2.1"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "info" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gmp/6.2.1-CVE-2021-43618.patch ]; pname = "gmp-with-cxx-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gmp-6.2.1.tar.bz2"; outputHash = "0z2ddfiwgi0xbf65z4fg4hqqzlhv0cc6hdcswf3c6n21xdmk5sga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2"; urls = [ "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gmp-6.2.1.tar.bz2"; out = «repeated»; outPath = "/nix/store/mw1rz69y1gm0504mnziij4n51993zi74-gmp-6.2.1.tar.bz2"; outputHash = "0z2ddfiwgi0xbf65z4fg4hqqzlhv0cc6hdcswf3c6n21xdmk5sga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = «repeated»; expandResponseParams = "/nix/store/34k9w1lnax1nk16qpx5bzl08zp9zva1z-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage3-gcc-wrapper-"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/0rrp6fw296y8niyis624d0gz86748bvz-bootstrap-stage3-gcc-wrapper-"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "bootstrap-stage3-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" -a ! -L \"/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\n  ccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\nccCFlags+=\" -B/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = ""; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "patchelf-0.15.0"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "patchelf"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/patchelf/setup-hook.sh ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "patchelf-0.15.0.tar.bz2"; outputHash = "sha256-9ANtPuTY4ijewb7/8PbkbYpA6eVw4AaOOdd+YuLIvcI="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/NixOS/patchelf/releases/download/0.15.0/patchelf-0.15.0.tar.bz2"; urls = [ "https://github.com/NixOS/patchelf/releases/download/0.15.0/patchelf-0.15.0.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "patchelf-0.15.0.tar.bz2"; out = «repeated»; outPath = "/nix/store/447hvnlzzi9myri1iq3bijxgx6v6b592-patchelf-0.15.0.tar.bz2"; outputHash = "sha256-9ANtPuTY4ijewb7/8PbkbYpA6eVw4AaOOdd+YuLIvcI="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/NixOS/patchelf/releases/download/0.15.0/patchelf-0.15.0.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.15.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "patchelf-0.15.0"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "patchelf-0.15.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/i011qrfd5c5libx7xjf056rilyjbsqmb-patchelf-0.15.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "patchelf"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.15.0"; }; outPath = "/nix/store/i011qrfd5c5libx7xjf056rilyjbsqmb-patchelf-0.15.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "patchelf"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.15.0"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; gnu_config = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out\ncp /nix/store/jsr3hk44asgyf51crp7ajgmrq95k1pw2-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.guess\ncp /nix/store/ms3a99q5qhgiryi8xqa3vs26xwrg5vn6-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.sub\n\nchmod +x $out/config.*\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out\ncp /nix/store/jsr3hk44asgyf51crp7ajgmrq95k1pw2-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.guess\ncp /nix/store/ms3a99q5qhgiryi8xqa3vs26xwrg5vn6-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.sub\n\nchmod +x $out/config.*\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnu-config-2021-01-25"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "gnu-config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2021-01-25"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnu-config-2021-01-25"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/br5ag8yxpk8kv9f1x45y3vmkpwznk0x2-gnu-config-2021-01-25"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "gnu-config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2021-01-25"; }; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; gnu_config = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/gmb57g4xvqjvr3l2vpih100iykp4fyir-hook"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = [ «repeated» ]; name = "bootstrap-stage3-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ «repeated» «repeated» ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage3-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; out = «repeated»; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.2.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = «repeated»; meta = <CODE>; name = "gmp-with-cxx-stage3-6.2.1"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = «repeated»; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontDisableStatic = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = «repeated»; meta = <CODE>; name = "gmp-with-cxx-stage3-6.2.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/31ncxqayv2gbswygqshscka3mwkw4d19-gmp-with-cxx-stage3-6.2.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { static = <CODE>; }; patches = «repeated»; pname = "gmp-with-cxx-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.2.1"; }; outPath = "/nix/store/1lyasfr4cypbyhc01rc7l51cnw4npi56-gmp-with-cxx-stage3-6.2.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "gmp-with-cxx-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.2.1"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ "-DBUILD_SHARED_LIBS:BOOL=OFF" ]; configureFlags = [ "--with-pic" "--enable-static" "--disable-shared" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; dontDisableStatic = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = «repeated»; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontDisableStatic = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ "-Ddefault_library=static" ]; name = "mpfr-stage3-4.1.1"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "doc" "info" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "patch01"; outputHash = "sha256-gKPCcJviGsqsEqnMmYiNY6APp3+3VXbyBf6LoZhP9Eo="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/patch01"; urls = [ "https://www.mpfr.org/mpfr-4.1.1/patch01" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "patch01"; out = «repeated»; outPath = "/nix/store/bi1v64yc2yqsq0qmiijyvj3lkyc315wr-patch01"; outputHash = "sha256-gKPCcJviGsqsEqnMmYiNY6APp3+3VXbyBf6LoZhP9Eo="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/patch01"; urls = «repeated»; } ]; pname = "mpfr-stage3"; propagatedBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-pic" "--enable-cxx" "--disable-fat" "--build=aarch64-unknown-linux-gnu" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontDisableStatic = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontDisableStatic = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "gmp-with-cxx-6.2.1"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "info" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gmp/6.2.1-CVE-2021-43618.patch ]; pname = "gmp-with-cxx"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gmp-6.2.1.tar.bz2"; outputHash = "0z2ddfiwgi0xbf65z4fg4hqqzlhv0cc6hdcswf3c6n21xdmk5sga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2"; urls = [ "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gmp-6.2.1.tar.bz2"; out = «repeated»; outPath = "/nix/store/mw1rz69y1gm0504mnziij4n51993zi74-gmp-6.2.1.tar.bz2"; outputHash = "0z2ddfiwgi0xbf65z4fg4hqqzlhv0cc6hdcswf3c6n21xdmk5sga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage3-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; out = «repeated»; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.2.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gmp-with-cxx-6.2.1"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/digyjaj147s5fy5rwia88970n2ld94qg-gmp-with-cxx-6.2.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { static = <CODE>; }; patches = «repeated»; pname = "gmp-with-cxx"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.2.1"; } ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "mpfr-4.1.1.tar.xz"; outputHash = "sha256-/9GVvVZ9uv/DuYsj/QCq0FN2gMmJYXHkT+P/eeKKwz0="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/mpfr-4.1.1.tar.xz"; urls = [ "https://www.mpfr.org/mpfr-4.1.1/mpfr-4.1.1.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "mpfr-4.1.1.tar.xz"; out = «repeated»; outPath = "/nix/store/n961w204jg2yjgfv2gwcywbnnp2l463m-mpfr-4.1.1.tar.xz"; outputHash = "sha256-/9GVvVZ9uv/DuYsj/QCq0FN2gMmJYXHkT+P/eeKKwz0="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/mpfr-4.1.1.tar.xz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage3-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; out = «repeated»; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "4.1.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = «repeated»; meta = <CODE>; name = "mpfr-stage3-4.1.1"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = «repeated»; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; dontDisableStatic = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = «repeated»; meta = <CODE>; name = "mpfr-stage3-4.1.1"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ga0hryz7il0086sdh8fdiyf6gdnjv0yb-mpfr-stage3-4.1.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = «repeated»; pname = "mpfr-stage3"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "4.1.1"; }; outPath = "/nix/store/iwb0yg6jbnxvcmvacp8swmbcr6c3iwph-mpfr-stage3-4.1.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "mpfr-stage3"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "4.1.1"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-pic" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "mpfr-4.1.1"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "doc" "info" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "patch01"; outputHash = "sha256-gKPCcJviGsqsEqnMmYiNY6APp3+3VXbyBf6LoZhP9Eo="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/patch01"; urls = [ "https://www.mpfr.org/mpfr-4.1.1/patch01" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "patch01"; out = «repeated»; outPath = "/nix/store/bi1v64yc2yqsq0qmiijyvj3lkyc315wr-patch01"; outputHash = "sha256-gKPCcJviGsqsEqnMmYiNY6APp3+3VXbyBf6LoZhP9Eo="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/patch01"; urls = «repeated»; } ]; pname = "mpfr"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "mpfr-4.1.1.tar.xz"; outputHash = "sha256-/9GVvVZ9uv/DuYsj/QCq0FN2gMmJYXHkT+P/eeKKwz0="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/mpfr-4.1.1.tar.xz"; urls = [ "https://www.mpfr.org/mpfr-4.1.1/mpfr-4.1.1.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "mpfr-4.1.1.tar.xz"; out = «repeated»; outPath = "/nix/store/n961w204jg2yjgfv2gwcywbnnp2l463m-mpfr-4.1.1.tar.xz"; outputHash = "sha256-/9GVvVZ9uv/DuYsj/QCq0FN2gMmJYXHkT+P/eeKKwz0="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.mpfr.org/mpfr-4.1.1/mpfr-4.1.1.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "4.1.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "mpfr-4.1.1"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/7m1lml5yvawa5vpj0098q8lysgy8az3m-mpfr-4.1.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = «repeated»; pname = "mpfr"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "4.1.1"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ "-DBUILD_SHARED_LIBS:BOOL=OFF" ]; configureFlags = [ "--enable-static" "--disable-shared" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontDisableStatic = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = «repeated»; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontDisableStatic = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ "-Ddefault_library=static" ]; name = "libmpc-stage3-1.2.1"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "libmpc-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "mpc-1.2.1.tar.gz"; outputHash = "0n846hqfqvmsmim7qdlms0qr86f1hck19p12nq3g3z2x74n3sl0p"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/mpc/mpc-1.2.1.tar.gz"; urls = [ "https://ftpmirror.gnu.org/mpc/mpc-1.2.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "mpc-1.2.1.tar.gz"; out = «repeated»; outPath = "/nix/store/x4jhvxj104vdciivf1zvijncyd4rd3dp-mpc-1.2.1.tar.gz"; outputHash = "0n846hqfqvmsmim7qdlms0qr86f1hck19p12nq3g3z2x74n3sl0p"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/mpc/mpc-1.2.1.tar.gz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage3-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; out = «repeated»; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.2.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = «repeated»; meta = <CODE>; name = "libmpc-stage3-1.2.1"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ickrhbp6b8a4yc43y35fv8si1v2a90cs-libmpc-stage3-1.2.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libmpc-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.1"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ "-DBUILD_SHARED_LIBS:BOOL=OFF" ]; configureFlags = [ "--with-gcc-arch=generic" "--enable-static" "--disable-shared" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = «repeated»; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ "-Ddefault_library=static" ]; name = "isl-stage3-0.20"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "isl-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "isl-0.20.tar.xz"; outputHash = "1akpgq0rbqbah5517blg2zlnfvjxfcl9cjrfc75nbcx5p2gnlnd5"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://downloads.sourceforge.net/libisl/isl-0.20.tar.xz"; urls = [ "https://downloads.sourceforge.net/libisl/isl-0.20.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "isl-0.20.tar.xz"; out = «repeated»; outPath = "/nix/store/x9v0hmr76dm68pijzldzxks01iqzag1z-isl-0.20.tar.xz"; outputHash = "1akpgq0rbqbah5517blg2zlnfvjxfcl9cjrfc75nbcx5p2gnlnd5"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://downloads.sourceforge.net/libisl/isl-0.20.tar.xz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage3-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; out = «repeated»; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/b7kf13f7f3ib89j6iccj816j3mcsfwiq-bootstrap-stage3-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.20"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = «repeated»; meta = <CODE>; name = "isl-stage3-0.20"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/7qylgv5dj90vb0yl9n4nyymrapbxjbdq-isl-stage3-0.20"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "isl-stage3"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.20"; } { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--static" "--shared" ]; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ ]; makeFlags = [ "PREFIX=" "SHARED_MODE=1" ]; mesonFlags = [ ]; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; outputDoc = "dev"; outputs = [ "out" "dev" "static" ]; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = [ "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "zlib-1.2.13.tar.gz"; out = «repeated»; outPath = "/nix/store/3yhi12pgsmv2dz0x2ialvjw51lnv4jw8-zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.2.13"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; }; outPath = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-gmp-include=/nix/store/1lyasfr4cypbyhc01rc7l51cnw4npi56-gmp-with-cxx-stage3-6.2.1-dev/include" "--with-gmp-lib=/nix/store/31ncxqayv2gbswygqshscka3mwkw4d19-gmp-with-cxx-stage3-6.2.1/lib" "--with-mpfr-include=/nix/store/iwb0yg6jbnxvcmvacp8swmbcr6c3iwph-mpfr-stage3-4.1.1-dev/include" "--with-mpfr-lib=/nix/store/ga0hryz7il0086sdh8fdiyf6gdnjv0yb-mpfr-stage3-4.1.1/lib" "--with-mpc=/nix/store/ickrhbp6b8a4yc43y35fv8si1v2a90cs-libmpc-stage3-1.2.1" "--with-native-system-header-dir=/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include" "--with-build-sysroot=/" "--program-prefix=" "--enable-lto" "--disable-libstdcxx-pch" "--without-included-gettext" "--with-system-zlib" "--enable-static" "--enable-languages=c,c++" "--disable-multilib" "--enable-plugin" "--with-isl=/nix/store/7qylgv5dj90vb0yl9n4nyymrapbxjbdq-isl-stage3-0.20" "--with-arch=armv8-a" "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" "--target=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" "target" ]; crossMingw = false; crossStageStatic = false; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ «repeated» «repeated» ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; drvAttrs = { CPATH = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include"; EXTRA_FLAGS_FOR_TARGET = [ ]; EXTRA_LDFLAGS_FOR_TARGET = [ ]; LIBRARY_PATH = "/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib"; NIX_HARDENING_ENABLE = «repeated»; NIX_LDFLAGS = ""; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; args = «repeated»; buildFlags = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; crossMingw = false; crossStageStatic = false; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = «repeated»; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; enableMultilib = false; enableParallelBuilding = true; enableParallelChecking = true; enableShared = true; hardeningDisable = [ "format" "pie" ]; libcCross = null; libc_dev = «repeated»; mesonFlags = [ ]; name = "gcc-9.5.0"; nativeBuildInputs = [ { NATIVE_TOOLS_CFLAGS = null; NATIVE_TOOLS_LDFLAGS = null; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "xz-5.2.9"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "man" "doc" ]; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = [ "https://tukaani.org/xz/xz-5.2.9.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "xz-5.2.9.tar.bz2"; out = «repeated»; outPath = "/nix/store/c1z3szr5rlsi6936nvvq40ipra6gsjxi-xz-5.2.9.tar.bz2"; outputHash = "sZRQf7o6Rip1PFUxSczaoWgze8t97v3dBnuph8g9/OY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://tukaani.org/xz/xz-5.2.9.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.2.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/lcl7xpw5r3xzs1d8cpqwx9lwkn8mcrij-xz-5.2.9-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "5.2.9"; }; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/9xqcawka2j7l2b4ddlyspf4f7sa59bc3-xz-5.2.9-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "5.2.9"; } { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-readline" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" ]; makeFlags = [ ]; mesonFlags = [ ]; name = "bash-5.1-p16"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "man" "doc" "info" ]; patchFlags = [ "-p0" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-001"; out = «repeated»; outPath = "/nix/store/5ibv7vnqs9qq75qwp9p276l9r35ldccm-bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-002"; out = «repeated»; outPath = "/nix/store/z1wfvm57izp9mdx3svdm8ayvw9f24bsr-bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-003"; out = «repeated»; outPath = "/nix/store/db77yl7pra8dk4jkdg82gja84ara63nj-bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-004"; out = «repeated»; outPath = "/nix/store/h1xsw38qjfclxwji7pa2ysvgdrgwbmaj-bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-005"; out = «repeated»; outPath = "/nix/store/99jb0lrxv2w0iby2pyj69qg5d8gjbpgg-bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-006"; out = «repeated»; outPath = "/nix/store/c13hmsqmwb8ip2bjba4xxzmxjwyqn0qw-bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-007"; out = «repeated»; outPath = "/nix/store/clfxvc0dwwbnrs9n9ingq542yv1mavvd-bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-008"; out = «repeated»; outPath = "/nix/store/8ryxppqg6lay7vj105sd175svh9is18w-bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-009"; out = «repeated»; outPath = "/nix/store/46wm974l1ywf7h84bizls4hiv2mc8caj-bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-010"; out = «repeated»; outPath = "/nix/store/1zph6k1xylkaajdcx6g10m1himcm1bmh-bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-011"; out = «repeated»; outPath = "/nix/store/dfzijgqay55f61yldz74dlzcj3kc84n9-bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-012"; out = «repeated»; outPath = "/nix/store/rl9348bn6clw01gzy8bdmdzjxync1rsp-bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-013"; out = «repeated»; outPath = "/nix/store/z4amhpapl83iwjxkq9p9lylkh0ffyq1d-bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-014"; out = «repeated»; outPath = "/nix/store/wanyhkgjwxccvyqla6r236423cda6c6v-bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-015"; out = «repeated»; outPath = "/nix/store/k3hwb5acr6xjycj853fczqby0c9d6mmq-bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-016"; out = «repeated»; outPath = "/nix/store/526apfg6pqnq86vflaiv4j2hikl8cjyx-bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = «repeated»; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/shells/bash/pgrp-pipe-5.1.patch ]; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash-5.1.tar.gz"; out = «repeated»; outPath = "/nix/store/5sgii519481kdsdg9kk027jlr7z641wd-bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bash-5.1-p16"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/n76726rb6vwnhyk2zbdl4fr6jha6g1dx-bash-5.1-p16-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { shellPath = "/bin/bash"; }; patchFlags = «repeated»; patches = «repeated»; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shellPath = "/bin/bash"; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.1"; } null ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkFlags = [ "XFAIL_TESTS=test_scripts/layout_formatting_fr_icons.sh" ]; cmakeFlags = [ ]; configureFlags = [ "PERL=/nix/store/jqvdj540fhid3mm5i21m98hzkplhalri-perl-5.36.0/bin/perl" ]; depsBuildBuild = [ «repeated» «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { NATIVE_TOOLS_CFLAGS = null; NATIVE_TOOLS_LDFLAGS = null; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkFlags = «repeated»; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "TEXMF=$(out)/texmf-dist" ]; installTargets = [ "install" "install-tex" ]; mesonFlags = [ ]; name = "texinfo-6.8"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/texinfo/fix-glibc-2.34.patch ]; pname = "texinfo"; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "texinfo-6.8.tar.xz"; outputHash = "1i7yb7mrp3inz25zbzv2pllr4y7d58v818f1as7iz8mw53nm7dwf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/texinfo/texinfo-6.8.tar.xz"; urls = [ "https://ftpmirror.gnu.org/texinfo/texinfo-6.8.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "texinfo-6.8.tar.xz"; out = «repeated»; outPath = "/nix/store/ycj1q918l6852kndr75rlwmw43k5ybys-texinfo-6.8.tar.xz"; outputHash = "1i7yb7mrp3inz25zbzv2pllr4y7d58v818f1as7iz8mw53nm7dwf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/texinfo/texinfo-6.8.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.8"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; installTargets = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "texinfo-6.8"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ingbvizfqild3a3wp05lwjqm03sd6vm1-texinfo-6.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "texinfo"; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.8"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "which-2.21"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "which"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "which-2.21.tar.gz"; outputHash = "1bgafvy3ypbhhfznwjv1lxmd6mci3x1byilnnkc7gcr486wlb8pl"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/which/which-2.21.tar.gz"; urls = [ "https://ftpmirror.gnu.org/which/which-2.21.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "which-2.21.tar.gz"; out = «repeated»; outPath = "/nix/store/349f140sh7m12vy9mp1wkp58axyp06c9-which-2.21.tar.gz"; outputHash = "1bgafvy3ypbhhfznwjv1lxmd6mci3x1byilnnkc7gcr486wlb8pl"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/which/which-2.21.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.21"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "which-2.21"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/wpcazp0q9vfpav7qlk8fbdgp2mxcaivg-which-2.21"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "which"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.21"; } { LDFLAGS = ""; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-csharp" "--with-xz" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { LDFLAGS = ""; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = false; gettextNeedsLdflags = false; hardeningDisable = [ "format" ]; mesonFlags = [ ]; name = "gettext-0.21"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" "man" "doc" "info" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gettext/absolute-paths.diff ]; pname = "gettext"; postPatch = "substituteAllInPlace gettext-runtime/src/gettext.sh.in\nsubstituteInPlace gettext-tools/projects/KDE/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/projects/GNOME/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/src/project-id --replace \"/bin/pwd\" pwd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gettext/gettext-setup-hook.sh ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gettext-0.21.tar.gz"; outputHash = "04kbg1sx0ncfrsbr85ggjslqkzzb243fcw9nyh3rrv1a22ihszf7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gettext/gettext-0.21.tar.gz"; urls = [ "https://ftpmirror.gnu.org/gettext/gettext-0.21.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gettext-0.21.tar.gz"; out = «repeated»; outPath = "/nix/store/s1bb06rzbxlvq08sg0ymwdgcgd1a7xh3-gettext-0.21.tar.gz"; outputHash = "04kbg1sx0ncfrsbr85ggjslqkzzb243fcw9nyh3rrv1a22ihszf7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gettext/gettext-0.21.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.21"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = false; gettextNeedsLdflags = false; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gettext-0.21"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/cpqd48in988511a30vm9a709338mrkhm-gettext-0.21"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "gettext"; postPatch = "substituteAllInPlace gettext-runtime/src/gettext.sh.in\nsubstituteInPlace gettext-tools/projects/KDE/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/projects/GNOME/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/src/project-id --replace \"/bin/pwd\" pwd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.21"; } «repeated» ]; noSysDirs = true; outputs = [ "out" "man" "info" "lib" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/gcc/no-sys-dirs.patch ]; pname = "gcc"; postPatch = "configureScripts=$(find . -name configure)\nfor configureScript in $configureScripts; do\n  patchShebangs $configureScript\ndone\necho \"fixing the \\`GLIBC_DYNAMIC_LINKER', \\`UCLIBC_DYNAMIC_LINKER', and \\`MUSL_DYNAMIC_LINKER' macros...\"\n          for header in \"gcc/config/\"*-gnu.h \"gcc/config/\"*\"/\"*.h\n          do\n            grep -q _DYNAMIC_LINKER \"$header\" || continue\n            echo \"  fixing \\`$header'...\"\n            sed -i \"$header\" \\\n                -e 's|define[[:blank:]]*\\([UCG]\\+\\)LIBC_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define \\1LIBC_DYNAMIC_LINKER\\2 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\3\"|g' \\\n                -e 's|define[[:blank:]]*MUSL_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define MUSL_DYNAMIC_LINKER\\1 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\2\"|g'\n          done\n"; preConfigure = "export linkLib64toLib=1\n"; preFixup = "# Populate most delicated lib/ part of stripDebugList{,Target}\nupdateDebugListPaths() {\n  local oldOpts\n  oldOpts=\"$(shopt -p nullglob)\" || true\n  shopt -s nullglob\n\n  pushd $out\n  local -ar outHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/plugin\n  )\n  local -ar outTargetFiles=(\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/*.{a,o,so*}\n  )\n  popd\n\n  pushd $lib\n  local -ar libHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n  )\n  local -ar libTargetFiles=(\n    lib{,32,64}/aarch64-unknown-linux-gnu/*.{a,o,so*}\n  )\n  popd\n\n  eval \"$oldOpts\"\n\n  stripDebugList=\"$stripDebugList \${outHostFiles[*]} \${libHostFiles[*]}\"\n  stripDebugListTarget=\"$stripDebugListTarget \${outTargetFiles[*]} \${libTargetFiles[*]}\"\n}\nupdateDebugListPaths\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gcc-9.5.0.tar.xz"; outputHash = "13ygjmd938m0wmy946pxdhz9i1wq7z4w10l6pvidak0xxxj9yxi7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://bigsearcher.com/mirrors/gcc/releases/gcc-9.5.0/gcc-9.5.0.tar.xz"; urls = [ "https://bigsearcher.com/mirrors/gcc/releases/gcc-9.5.0/gcc-9.5.0.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gcc-9.5.0.tar.xz"; out = «repeated»; outPath = "/nix/store/6z8bwvzw1p5dpik6w1lsk36q26c7k4vq-gcc-9.5.0.tar.xz"; outputHash = "13ygjmd938m0wmy946pxdhz9i1wq7z4w10l6pvidak0xxxj9yxi7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://bigsearcher.com/mirrors/gcc/releases/gcc-9.5.0/gcc-9.5.0.tar.xz"; urls = «repeated»; }; staticCompiler = false; stdenv = «repeated»; strictDeps = false; stripDebugList = [ "bin" "libexec" ]; stripDebugListTarget = [ "aarch64-unknown-linux-gnu" ]; system = "aarch64-linux"; targetConfig = null; userHook = null; version = "9.5.0"; }; drvPath = <CODE>; enableMultilib = false; enableParallelBuilding = true; enableParallelChecking = true; enableShared = true; hardeningDisable = «repeated»; info = { CPATH = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include"; EXTRA_FLAGS_FOR_TARGET = [ ]; EXTRA_LDFLAGS_FOR_TARGET = [ ]; LIBRARY_PATH = "/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib"; NIX_HARDENING_ENABLE = «repeated»; NIX_LDFLAGS = ""; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildFlags = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; crossMingw = false; crossStageStatic = false; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = «repeated»; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; drvAttrs = «repeated»; drvPath = <CODE>; enableMultilib = false; enableParallelBuilding = true; enableParallelChecking = true; enableShared = true; hardeningDisable = «repeated»; info = «repeated»; inputDerivation = <CODE>; isGNU = true; langAda = false; langC = true; langCC = true; langD = false; langFortran = false; langGo = false; langObjC = false; langObjCpp = false; lib = { CPATH = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include"; EXTRA_FLAGS_FOR_TARGET = [ ]; EXTRA_LDFLAGS_FOR_TARGET = [ ]; LIBRARY_PATH = "/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib"; NIX_HARDENING_ENABLE = «repeated»; NIX_LDFLAGS = ""; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildFlags = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; crossMingw = false; crossStageStatic = false; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = «repeated»; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; drvAttrs = «repeated»; drvPath = <CODE>; enableMultilib = false; enableParallelBuilding = true; enableParallelChecking = true; enableShared = true; hardeningDisable = «repeated»; info = «repeated»; inputDerivation = <CODE>; isGNU = true; langAda = false; langC = true; langCC = true; langD = false; langFortran = false; langGo = false; langObjC = false; langObjCpp = false; lib = «repeated»; libcCross = null; libc_dev = «repeated»; man = { CPATH = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include"; EXTRA_FLAGS_FOR_TARGET = [ ]; EXTRA_LDFLAGS_FOR_TARGET = [ ]; LIBRARY_PATH = "/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib"; NIX_HARDENING_ENABLE = «repeated»; NIX_LDFLAGS = ""; NIX_NO_SELF_RPATH = true; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildFlags = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; crossMingw = false; crossStageStatic = false; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = «repeated»; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = true; drvAttrs = «repeated»; drvPath = <CODE>; enableMultilib = false; enableParallelBuilding = true; enableParallelChecking = true; enableShared = true; hardeningDisable = «repeated»; info = «repeated»; inputDerivation = <CODE>; isGNU = true; langAda = false; langC = true; langCC = true; langD = false; langFortran = false; langGo = false; langObjC = false; langObjCpp = false; lib = «repeated»; libcCross = null; libc_dev = «repeated»; man = «repeated»; mesonFlags = [ ]; meta = { available = <CODE>; badPlatforms = [ "aarch64-darwin" ]; broken = false; description = "GNU Compiler Collection, version 9.5.0"; homepage = "https://gcc.gnu.org/"; insecure = <CODE>; license = «repeated»; longDescription = "The GNU Compiler Collection includes compiler front ends for C, C++,\nObjective-C, Fortran, OpenMP for C/C++/Fortran, and Ada, as well as\nlibraries for these languages (libstdc++, libgomp,...).\n\nGCC development is a part of the GNU Project, aiming to improve the\ncompiler used in the GNU system including the GNU/Linux variant.\n"; maintainers = [ <CODE> <CODE> <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = «repeated»; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "gcc-9.5.0"; nativeBuildInputs = «repeated»; noSysDirs = true; out = <CODE>; outPath = "/nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { isGNU = true; langAda = false; langC = true; langCC = true; langD = false; langFortran = false; langGo = false; langObjC = false; langObjCpp = false; version = "9.5.0"; }; patches = «repeated»; pname = "gcc"; postPatch = "configureScripts=$(find . -name configure)\nfor configureScript in $configureScripts; do\n  patchShebangs $configureScript\ndone\necho \"fixing the \\`GLIBC_DYNAMIC_LINKER', \\`UCLIBC_DYNAMIC_LINKER', and \\`MUSL_DYNAMIC_LINKER' macros...\"\n          for header in \"gcc/config/\"*-gnu.h \"gcc/config/\"*\"/\"*.h\n          do\n            grep -q _DYNAMIC_LINKER \"$header\" || continue\n            echo \"  fixing \\`$header'...\"\n            sed -i \"$header\" \\\n                -e 's|define[[:blank:]]*\\([UCG]\\+\\)LIBC_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define \\1LIBC_DYNAMIC_LINKER\\2 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\3\"|g' \\\n                -e 's|define[[:blank:]]*MUSL_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define MUSL_DYNAMIC_LINKER\\1 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\2\"|g'\n          done\n"; preConfigure = "export linkLib64toLib=1\n"; preFixup = "# Populate most delicated lib/ part of stripDebugList{,Target}\nupdateDebugListPaths() {\n  local oldOpts\n  oldOpts=\"$(shopt -p nullglob)\" || true\n  shopt -s nullglob\n\n  pushd $out\n  local -ar outHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/plugin\n  )\n  local -ar outTargetFiles=(\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/*.{a,o,so*}\n  )\n  popd\n\n  pushd $lib\n  local -ar libHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n  )\n  local -ar libTargetFiles=(\n    lib{,32,64}/aarch64-unknown-linux-gnu/*.{a,o,so*}\n  )\n  popd\n\n  eval \"$oldOpts\"\n\n  stripDebugList=\"$stripDebugList \${outHostFiles[*]} \${libHostFiles[*]}\"\n  stripDebugListTarget=\"$stripDebugListTarget \${outTargetFiles[*]} \${libTargetFiles[*]}\"\n}\nupdateDebugListPaths\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; staticCompiler = false; stdenv = «repeated»; strictDeps = false; stripDebugList = «repeated»; stripDebugListTarget = «repeated»; system = "aarch64-linux"; targetConfig = null; type = <CODE>; userHook = null; version = "9.5.0"; }; mesonFlags = [ ]; meta = «repeated»; name = "gcc-9.5.0"; nativeBuildInputs = «repeated»; noSysDirs = true; out = <CODE>; outPath = "/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "gcc"; postPatch = "configureScripts=$(find . -name configure)\nfor configureScript in $configureScripts; do\n  patchShebangs $configureScript\ndone\necho \"fixing the \\`GLIBC_DYNAMIC_LINKER', \\`UCLIBC_DYNAMIC_LINKER', and \\`MUSL_DYNAMIC_LINKER' macros...\"\n          for header in \"gcc/config/\"*-gnu.h \"gcc/config/\"*\"/\"*.h\n          do\n            grep -q _DYNAMIC_LINKER \"$header\" || continue\n            echo \"  fixing \\`$header'...\"\n            sed -i \"$header\" \\\n                -e 's|define[[:blank:]]*\\([UCG]\\+\\)LIBC_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define \\1LIBC_DYNAMIC_LINKER\\2 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\3\"|g' \\\n                -e 's|define[[:blank:]]*MUSL_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define MUSL_DYNAMIC_LINKER\\1 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\2\"|g'\n          done\n"; preConfigure = "export linkLib64toLib=1\n"; preFixup = "# Populate most delicated lib/ part of stripDebugList{,Target}\nupdateDebugListPaths() {\n  local oldOpts\n  oldOpts=\"$(shopt -p nullglob)\" || true\n  shopt -s nullglob\n\n  pushd $out\n  local -ar outHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/plugin\n  )\n  local -ar outTargetFiles=(\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/*.{a,o,so*}\n  )\n  popd\n\n  pushd $lib\n  local -ar libHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n  )\n  local -ar libTargetFiles=(\n    lib{,32,64}/aarch64-unknown-linux-gnu/*.{a,o,so*}\n  )\n  popd\n\n  eval \"$oldOpts\"\n\n  stripDebugList=\"$stripDebugList \${outHostFiles[*]} \${libHostFiles[*]}\"\n  stripDebugListTarget=\"$stripDebugListTarget \${outTargetFiles[*]} \${libTargetFiles[*]}\"\n}\nupdateDebugListPaths\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; staticCompiler = false; stdenv = «repeated»; strictDeps = false; stripDebugList = «repeated»; stripDebugListTarget = «repeated»; system = "aarch64-linux"; targetConfig = null; type = <CODE>; userHook = null; version = "9.5.0"; }; libcCross = null; libc_dev = «repeated»; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "gcc-9.5.0"; nativeBuildInputs = «repeated»; noSysDirs = true; out = <CODE>; outPath = "/nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "gcc"; postPatch = "configureScripts=$(find . -name configure)\nfor configureScript in $configureScripts; do\n  patchShebangs $configureScript\ndone\necho \"fixing the \\`GLIBC_DYNAMIC_LINKER', \\`UCLIBC_DYNAMIC_LINKER', and \\`MUSL_DYNAMIC_LINKER' macros...\"\n          for header in \"gcc/config/\"*-gnu.h \"gcc/config/\"*\"/\"*.h\n          do\n            grep -q _DYNAMIC_LINKER \"$header\" || continue\n            echo \"  fixing \\`$header'...\"\n            sed -i \"$header\" \\\n                -e 's|define[[:blank:]]*\\([UCG]\\+\\)LIBC_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define \\1LIBC_DYNAMIC_LINKER\\2 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\3\"|g' \\\n                -e 's|define[[:blank:]]*MUSL_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define MUSL_DYNAMIC_LINKER\\1 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\2\"|g'\n          done\n"; preConfigure = "export linkLib64toLib=1\n"; preFixup = "# Populate most delicated lib/ part of stripDebugList{,Target}\nupdateDebugListPaths() {\n  local oldOpts\n  oldOpts=\"$(shopt -p nullglob)\" || true\n  shopt -s nullglob\n\n  pushd $out\n  local -ar outHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/plugin\n  )\n  local -ar outTargetFiles=(\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/*.{a,o,so*}\n  )\n  popd\n\n  pushd $lib\n  local -ar libHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n  )\n  local -ar libTargetFiles=(\n    lib{,32,64}/aarch64-unknown-linux-gnu/*.{a,o,so*}\n  )\n  popd\n\n  eval \"$oldOpts\"\n\n  stripDebugList=\"$stripDebugList \${outHostFiles[*]} \${libHostFiles[*]}\"\n  stripDebugListTarget=\"$stripDebugListTarget \${outTargetFiles[*]} \${libTargetFiles[*]}\"\n}\nupdateDebugListPaths\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; staticCompiler = false; stdenv = «repeated»; strictDeps = false; stripDebugList = «repeated»; stripDebugListTarget = «repeated»; system = "aarch64-linux"; targetConfig = null; type = <CODE>; userHook = null; version = "9.5.0"; }; inputDerivation = <CODE>; isGNU = true; langAda = false; langC = true; langCC = true; langD = false; langFortran = false; langGo = false; langObjC = false; langObjCpp = false; lib = «repeated»; libcCross = null; libc_dev = «repeated»; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "gcc-9.5.0"; nativeBuildInputs = «repeated»; noSysDirs = true; out = <CODE>; outPath = "/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "gcc"; postPatch = "configureScripts=$(find . -name configure)\nfor configureScript in $configureScripts; do\n  patchShebangs $configureScript\ndone\necho \"fixing the \\`GLIBC_DYNAMIC_LINKER', \\`UCLIBC_DYNAMIC_LINKER', and \\`MUSL_DYNAMIC_LINKER' macros...\"\n          for header in \"gcc/config/\"*-gnu.h \"gcc/config/\"*\"/\"*.h\n          do\n            grep -q _DYNAMIC_LINKER \"$header\" || continue\n            echo \"  fixing \\`$header'...\"\n            sed -i \"$header\" \\\n                -e 's|define[[:blank:]]*\\([UCG]\\+\\)LIBC_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define \\1LIBC_DYNAMIC_LINKER\\2 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\3\"|g' \\\n                -e 's|define[[:blank:]]*MUSL_DYNAMIC_LINKER\\([0-9]*\\)[[:blank:]]\"\\([^\\\"]\\+\\)\"$|define MUSL_DYNAMIC_LINKER\\1 \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\\2\"|g'\n          done\n"; preConfigure = "export linkLib64toLib=1\n"; preFixup = "# Populate most delicated lib/ part of stripDebugList{,Target}\nupdateDebugListPaths() {\n  local oldOpts\n  oldOpts=\"$(shopt -p nullglob)\" || true\n  shopt -s nullglob\n\n  pushd $out\n  local -ar outHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/plugin\n  )\n  local -ar outTargetFiles=(\n    lib{,32,64}/gcc/aarch64-unknown-linux-gnu/*/*.{a,o,so*}\n  )\n  popd\n\n  pushd $lib\n  local -ar libHostFiles=(\n    lib{,32,64}/*.{a,o,so*}\n  )\n  local -ar libTargetFiles=(\n    lib{,32,64}/aarch64-unknown-linux-gnu/*.{a,o,so*}\n  )\n  popd\n\n  eval \"$oldOpts\"\n\n  stripDebugList=\"$stripDebugList \${outHostFiles[*]} \${libHostFiles[*]}\"\n  stripDebugListTarget=\"$stripDebugListTarget \${outTargetFiles[*]} \${libTargetFiles[*]}\"\n}\nupdateDebugListPaths\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; staticCompiler = false; stdenv = «repeated»; strictDeps = false; stripDebugList = «repeated»; stripDebugListTarget = «repeated»; system = "aarch64-linux"; targetConfig = null; type = "derivation"; userHook = null; version = "9.5.0"; }; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "bootstrap-stage4-gcc-wrapper-9.5.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "info" ]; patches = [ ]; pname = "bootstrap-stage4-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" -a ! -L \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\n  ccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\nccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nln -s /nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man $man\nln -s /nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info $info\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/setup-hook.sh ]; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "9.5.0"; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; name = "expand-response-params"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; meta = <CODE>; name = "expand-response-params"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage4-gcc-wrapper-9.5.0"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = «repeated»; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bootstrap-stage4-gcc-wrapper-9.5.0"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/z6qibx8wczcziaw014272a3im2vw6lzp-bootstrap-stage4-gcc-wrapper-9.5.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; expand-response-params = «repeated»; isClang = false; isGNU = true; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; }; patches = [ ]; pname = "bootstrap-stage4-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" -a ! -L \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\n  ccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\nccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nln -s /nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man $man\nln -s /nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info $info\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "9.5.0"; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; outPath = "/nix/store/z6qibx8wczcziaw014272a3im2vw6lzp-bootstrap-stage4-gcc-wrapper-9.5.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "bootstrap-stage4-gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" -a ! -L \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\n  ccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\nccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nln -s /nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man $man\nln -s /nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info $info\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = "9.5.0"; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/9xqcawka2j7l2b4ddlyspf4f7sa59bc3-xz-5.2.9-bin"; outputName = "bin"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "5.2.9"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; gnu_config = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out\ncp /nix/store/jsr3hk44asgyf51crp7ajgmrq95k1pw2-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.guess\ncp /nix/store/ms3a99q5qhgiryi8xqa3vs26xwrg5vn6-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.sub\n\nchmod +x $out/config.*\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out\ncp /nix/store/jsr3hk44asgyf51crp7ajgmrq95k1pw2-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.guess\ncp /nix/store/ms3a99q5qhgiryi8xqa3vs26xwrg5vn6-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.sub\n\nchmod +x $out/config.*\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnu-config-2021-01-25"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "gnu-config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2021-01-25"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnu-config-2021-01-25"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/4f9r97qfxwnggdx9wrhkd6hwlsrzim85-gnu-config-2021-01-25"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "gnu-config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2021-01-25"; }; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage3-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage3-stdenv-linux"; out = «repeated»; outPath = "/nix/store/cigkf2xkhfnszfil14nfii9g51zf2xyn-bootstrap-stage3-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/cigkf2xkhfnszfil14nfii9g51zf2xyn-bootstrap-stage3-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; gnu_config = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/yjjm9zdrqa6bxf62rsgjj8dl67prwq6y-hook"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = [ «repeated» ]; name = "bootstrap-stage4-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ «repeated» «repeated» «repeated» ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage4-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage4-stdenv-linux"; out = «repeated»; outPath = "/nix/store/bmhnpjkh8lm88npykpwly284ldw5wxc4-bootstrap-stage4-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/bmhnpjkh8lm88npykpwly284ldw5wxc4-bootstrap-stage4-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.2.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "5.2.9"; }; outPath = "/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "5.2.9"; }; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xz-5.2.9"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/8ycmad2yfg9cad0d4bz6bffypw4szb4b-xz-5.2.9-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "xz"; postInstall = "rm -rf $out/share/doc"; preCheck = "# Tests have a /bin/sh dependency...\npatchShebangs tests\n"; preConfigure = "CONFIG_SHELL=/bin/sh"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "5.2.9"; } ]; outputs = [ "out" "man" "info" ]; patches = [ ]; pname = "gzip"; preFixup = "sed -i '1{;/#!\\/bin\\/sh/aPATH=\"'$out'/bin:$PATH\"\n}' $out/bin/*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; executable = false; mesonFlags = [ ]; name = "setup-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" "text" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; buildPlatform = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ ]; drvAttrs = { args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; initialPath = «repeated»; name = "bootstrap-stage4-stdenv-linux"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "bootstrap-stage4-stdenv-linux"; out = { all = <CODE>; args = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = [ ]; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "bootstrap-stage4-stdenv-linux"; out = «repeated»; outPath = "/nix/store/19dckss0zdx23xdnp5jxzwijcvsrxl3w-bootstrap-stage4-stdenv-linux"; outputName = "out"; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/19dckss0zdx23xdnp5jxzwijcvsrxl3w-bootstrap-stage4-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "# Don't patch #!/interpreter because it leads to retained\n# dependencies on the bootstrapTools in the final stdenv.\ndontPatchShebangs=1\nexport NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; shellDryRun = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = false; system = "aarch64-linux"; text = "export GZIP=\"-n\"\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = false; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "setup-hook"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/cn3p8c3jrrcmsc42kf0yqh1z2162byd4-setup-hook"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "export GZIP=\"-n\"\n"; type = "derivation"; userHook = null; }; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gzip-1.12.tar.xz"; outputHash = "sha256-zl4D5Rn2N+H4FAEazjXE+HszwLur7sNbr1+9NHnpGVY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gzip/gzip-1.12.tar.xz"; urls = [ "https://ftpmirror.gnu.org/gzip/gzip-1.12.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gzip-1.12.tar.xz"; out = «repeated»; outPath = "/nix/store/5vr9y3ki4sd6lp4zd4w3dhbhsylpfrw3-gzip-1.12.tar.xz"; outputHash = "sha256-zl4D5Rn2N+H4FAEazjXE+HszwLur7sNbr1+9NHnpGVY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gzip/gzip-1.12.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.12"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gzip-1.12"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/xgm1prhav93k4a8w6hkc0ri7kk5gx5x3-gzip-1.12"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "gzip"; preFixup = "sed -i '1{;/#!\\/bin\\/sh/aPATH=\"'$out'/bin:$PATH\"\n}' $out/bin/*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.12"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "bzip2-1.0.8"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/d2gsafhkg1zy7z3j2gykn8w51xq49yx6-autoconf-2.71 /nix/store/innk5b64vngndqqn6lqf8aap9wz0lg1l-automake-1.16.5 /nix/store/cpqd48in988511a30vm9a709338mrkhm-gettext-0.21 /nix/store/aixnwvsr2304bc7g9chxvxg89d2z3bay-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/d2gsafhkg1zy7z3j2gykn8w51xq49yx6-autoconf-2.71 /nix/store/innk5b64vngndqqn6lqf8aap9wz0lg1l-automake-1.16.5 /nix/store/cpqd48in988511a30vm9a709338mrkhm-gettext-0.21 /nix/store/aixnwvsr2304bc7g9chxvxg89d2z3bay-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/skl57s6yya5vfs12sijwajf1xa36cg6y-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "bin" "dev" "out" "man" ]; patchFlags = [ "-p0" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bzip2-1.0.6.2-autoconfiscated.patch"; outputHash = "sha256-QMufl6ffJVVVVZespvkCbFpB6++R1lnq1687jEsUjr0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftp.suse.com/pub/people/sbrabec/bzip2/for_downstream/bzip2-1.0.6.2-autoconfiscated.patch"; urls = [ "https://ftp.suse.com/pub/people/sbrabec/bzip2/for_downstream/bzip2-1.0.6.2-autoconfiscated.patch" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bzip2-1.0.6.2-autoconfiscated.patch"; out = «repeated»; outPath = "/nix/store/ws73d521m0im6x7nhb0836i51z2yd9dq-bzip2-1.0.6.2-autoconfiscated.patch"; outputHash = "sha256-QMufl6ffJVVVVZespvkCbFpB6++R1lnq1687jEsUjr0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftp.suse.com/pub/people/sbrabec/bzip2/for_downstream/bzip2-1.0.6.2-autoconfiscated.patch"; urls = «repeated»; } ]; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bzip2-1.0.8.tar.gz"; outputHash = "sha256-q1oDF27hBtPw+pDjgdpHjdrkBZGBU8yiSOaCzQxKImk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz"; urls = [ "https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bzip2-1.0.8.tar.gz"; out = «repeated»; outPath = "/nix/store/slpdqm3wlhwbkzyijjz3xpifa219ac0x-bzip2-1.0.8.tar.gz"; outputHash = "sha256-q1oDF27hBtPw+pDjgdpHjdrkBZGBU8yiSOaCzQxKImk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://sourceware.org/pub/bzip2/bzip2-1.0.8.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.0.8"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bzip2-1.0.8"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bzip2-1.0.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0.8"; }; outPath = "/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0.8"; }; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bzip2-1.0.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/bm3dyywkvqq2k086426agvlqs7dhafa6-bzip2-1.0.8-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "bzip2"; postInstall = "ln -s $out/lib/libbz2.so.1.0.* $out/lib/libbz2.so.1.0\n"; postPatch = "patch <<-EOF\n  --- configure.ac\n  +++ configure.ac\n  @@ -3,3 +3,3 @@\n  -AC_INIT([bzip2], [1.0.6], [Julian Seward <jseward@bzip.org>])\n  +AC_INIT([bzip2], [1.0.8], [Julian Seward <jseward@bzip.org>])\n   BZIP2_LT_CURRENT=1\n  -BZIP2_LT_REVISION=6\n  +BZIP2_LT_REVISION=8\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0.8"; } «repeated» «repeated» «repeated» { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-readline" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" ]; makeFlags = [ ]; mesonFlags = [ ]; name = "bash-5.1-p16"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "man" "doc" "info" ]; patchFlags = [ "-p0" ]; patches = [ { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-001"; out = «repeated»; outPath = "/nix/store/5ibv7vnqs9qq75qwp9p276l9r35ldccm-bash51-001"; outputHash = "1ymm8ppss6gyh9ifznjwiabrb4k91npd09c10y7mk66xp8yppc7b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-001"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-002"; out = «repeated»; outPath = "/nix/store/z1wfvm57izp9mdx3svdm8ayvw9f24bsr-bash51-002"; outputHash = "1gjx9zqcm407am3n2sh44b8dxm48kgm15rzfiijqxr01m0hn3shm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-002"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-003"; out = «repeated»; outPath = "/nix/store/db77yl7pra8dk4jkdg82gja84ara63nj-bash51-003"; outputHash = "1cdnpbfc64yhvkjj4d12s9ywp11g195vzfl1cab24sq55wkcrwi2"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-003"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-004"; out = «repeated»; outPath = "/nix/store/h1xsw38qjfclxwji7pa2ysvgdrgwbmaj-bash51-004"; outputHash = "11iwhy6v562bv0kk7lwj7f5jj65ma9bblivy0v02h3ggcibbdbls"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-004"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-005"; out = «repeated»; outPath = "/nix/store/99jb0lrxv2w0iby2pyj69qg5d8gjbpgg-bash51-005"; outputHash = "19bdyigdr81824nxvqr6a7k0cax60wq7376j6b91afbnwvlvbjyc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-005"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-006"; out = «repeated»; outPath = "/nix/store/c13hmsqmwb8ip2bjba4xxzmxjwyqn0qw-bash51-006"; outputHash = "051x8wlwrqk0yr0zg378vh824iklfl5g9pkmcdf62qp8gn9pvqbm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-006"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-007"; out = «repeated»; outPath = "/nix/store/clfxvc0dwwbnrs9n9ingq542yv1mavvd-bash51-007"; outputHash = "0fir80pp1gmlpadmqcgkrv4y119pc7xllchjzg05fd7px73viz5c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-007"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-008"; out = «repeated»; outPath = "/nix/store/8ryxppqg6lay7vj105sd175svh9is18w-bash51-008"; outputHash = "1lfjgshk8i9vch92p5wgc9r90j3phw79aa7gbai89w183b2z6b7j"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-008"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-009"; out = «repeated»; outPath = "/nix/store/46wm974l1ywf7h84bizls4hiv2mc8caj-bash51-009"; outputHash = "1vn36dzd9g4y1h3jiss6418crla0rbcd0d6wwsyv9d5l7aaxlp74"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-009"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-010"; out = «repeated»; outPath = "/nix/store/1zph6k1xylkaajdcx6g10m1himcm1bmh-bash51-010"; outputHash = "0amfmvbzsand7bdypylkjdpcp88fa3cplfshn7vyzv2ff2rdgj52"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-010"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-011"; out = «repeated»; outPath = "/nix/store/dfzijgqay55f61yldz74dlzcj3kc84n9-bash51-011"; outputHash = "0yq24abb4fzfxqnwl20b330sxl9lr9ds0nc4yi30f81l94b1y6aq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-011"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-012"; out = «repeated»; outPath = "/nix/store/rl9348bn6clw01gzy8bdmdzjxync1rsp-bash51-012"; outputHash = "165bff97ffih49vfs4mkr5w3z5gn1w6zfyrf773iajkw6v48kw8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-012"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-013"; out = «repeated»; outPath = "/nix/store/z4amhpapl83iwjxkq9p9lylkh0ffyq1d-bash51-013"; outputHash = "1bfmgv3lagbk3aq9a831d29xv7jz4sjq7jhn9hq89limyinvdb67"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-013"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-014"; out = «repeated»; outPath = "/nix/store/wanyhkgjwxccvyqla6r236423cda6c6v-bash51-014"; outputHash = "1l43dw4kpddn7l41i8wmj406z9abxky1wb3rk8krcys33g4f0kka"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-014"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-015"; out = «repeated»; outPath = "/nix/store/k3hwb5acr6xjycj853fczqby0c9d6mmq-bash51-015"; outputHash = "1w40vzadzx019v0zhs4q6yqycrk04x1k8xs6qb73vk7ny4p6jdqv"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-015"; urls = «repeated»; } { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash51-016"; out = «repeated»; outPath = "/nix/store/526apfg6pqnq86vflaiv4j2hikl8cjyx-bash51-016"; outputHash = "0krqqljz4bkp9wrdnwfx51bxkb8rkwf8ivc93as1znx5fr7i96c8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1-patches/bash51-016"; urls = «repeated»; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/shells/bash/pgrp-pipe-5.1.patch ]; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = [ "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "bash-5.1.tar.gz"; out = «repeated»; outPath = "/nix/store/5sgii519481kdsdg9kk027jlr7z641wd-bash-5.1.tar.gz"; outputHash = "1alv68wplnfdm6mh39hm57060xgssb9vqca4yr1cyva0c342n0fc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/bash/bash-5.1.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bash-5.1-p16"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/rnjk4d5w0pszdi7mr98m8c80knrhm6id-bash-5.1-p16-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { shellPath = "/bin/bash"; }; patchFlags = «repeated»; patches = «repeated»; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shellPath = "/bin/bash"; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.1"; }; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bash-5.1-p16"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patchFlags = «repeated»; patches = «repeated»; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shellPath = "/bin/bash"; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.1"; } «repeated» { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-64-bit-bfd" "--with-system-zlib" "--enable-deterministic-archives" "--disable-werror" "--enable-fix-loongson2f-nop" "--enable-new-dtags" "--program-prefix=" "--disable-gprofng" "--enable-gold" "--enable-plugins" "--enable-shared" "--disable-static" "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" "--target=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" "target" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" "pie" ]; mesonFlags = [ ]; name = "binutils-2.39"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; noSysDirs = true; outputs = [ "out" "info" "man" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/deterministic.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/0001-Revert-libtool.m4-fix-the-NM-nm-over-here-B-option-w.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/0001-Revert-libtool.m4-fix-nm-BSD-flag-detection.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/0001-libtool.m4-update-macos-version-detection-block.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/always-search-rpath.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/binutils/gas-dwarf-zero-PR29451.patch ]; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; userHook = null; version = "2.39"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = true; info = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = true; info = «repeated»; inputDerivation = <CODE>; isGNU = true; man = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = true; info = «repeated»; inputDerivation = <CODE>; isGNU = true; man = «repeated»; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; description = "Tools for manipulating binaries (linker, assembler, etc.)"; homepage = "https://www.gnu.org/software/binutils/"; insecure = <CODE>; license = «repeated»; longDescription = "The GNU Binutils are a collection of binary tools.  The main\nones are `ld' (the GNU linker) and `as' (the GNU assembler).\nThey also include the BFD (Binary File Descriptor) library,\n`gprof', `nm', `strip', etc.\n"; maintainers = [ <CODE> <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = «repeated»; position = <CODE>; priority = 10; unfree = <CODE>; unsupported = <CODE>; }; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/q5z2yjmdlzjygmi8ls2lwn31rm7p00bd-binutils-2.39-man"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { hasGold = true; isGNU = true; targetPrefix = ""; }; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; userHook = null; version = "2.39"; }; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/hvrn6001sjnsg2snpdqbkfn3vhpcpnif-binutils-2.39-info"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; userHook = null; version = "2.39"; }; inputDerivation = <CODE>; isGNU = true; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; userHook = null; version = "2.39"; } «repeated» { FORCE_UNSAFE_CONFIGURE = ""; NIX_CFLAGS_COMPILE = [ ]; NIX_LDFLAGS = ""; PERL = null; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "attr-2.5.1"; nativeBuildInputs = [ «repeated» ]; outputs = [ "bin" "dev" "out" "man" "doc" ]; patches = [ ]; pname = "attr"; postPatch = "for script in install-sh include/install-sh; do\n  patchShebangs $script\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "attr-2.5.1.tar.gz"; outputHash = "1y6sibbkrcjygv8naadnsg6xmsqwfh6cwrqk01l0v2i5kfacdqds"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://mirror.easyname.at/nongnu/attr/attr-2.5.1.tar.gz"; urls = [ "https://mirror.easyname.at/nongnu/attr/attr-2.5.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "attr-2.5.1.tar.gz"; out = «repeated»; outPath = "/nix/store/mz6mc8s7mrvvzjpl9322agmsq00cyrw5-attr-2.5.1.tar.gz"; outputHash = "1y6sibbkrcjygv8naadnsg6xmsqwfh6cwrqk01l0v2i5kfacdqds"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://mirror.easyname.at/nongnu/attr/attr-2.5.1.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.5.1"; }; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "attr-2.5.1"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "attr-2.5.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/51ffk1ly0xyf52b2rv15v189habkrnc4-attr-2.5.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "attr"; postPatch = "for script in install-sh include/install-sh; do\n  patchShebangs $script\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.5.1"; }; outPath = "/nix/store/0wha5918rzw71dh3sy5annd1b5b52wrl-attr-2.5.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "attr"; postPatch = "for script in install-sh include/install-sh; do\n  patchShebangs $script\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.5.1"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "acl-2.3.1"; nativeBuildInputs = [ «repeated» ]; outputs = [ "bin" "dev" "out" "man" "doc" ]; patchPhase = "echo \"Removing C++-style comments from include/acl.h\"\nsed -e '/^\\/\\//d' -i include/acl.h\n\npatchShebangs .\n"; patches = [ ]; pname = "acl"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "acl-2.3.1.tar.gz"; outputHash = "sha256-dgxhxokBs3/dXu/ur0wMeia9/disdHoe3/HODiQ8Ea8="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://mirror.easyname.at/nongnu/acl/acl-2.3.1.tar.gz"; urls = [ "https://mirror.easyname.at/nongnu/acl/acl-2.3.1.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "acl-2.3.1.tar.gz"; out = «repeated»; outPath = "/nix/store/y3yiminrckvhf35fh9q42vjwi0npznji-acl-2.3.1.tar.gz"; outputHash = "sha256-dgxhxokBs3/dXu/ur0wMeia9/disdHoe3/HODiQ8Ea8="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://mirror.easyname.at/nongnu/acl/acl-2.3.1.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.3.1"; }; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "acl-2.3.1"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "acl-2.3.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/677drxixgi3wwklkgabxnvflqxapl1rj-acl-2.3.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchPhase = "echo \"Removing C++-style comments from include/acl.h\"\nsed -e '/^\\/\\//d' -i include/acl.h\n\npatchShebangs .\n"; patches = [ ]; pname = "acl"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.3.1"; }; outPath = "/nix/store/ssmjf0s84ypnrdcv991gklxa59jfwn1l-acl-2.3.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchPhase = "echo \"Removing C++-style comments from include/acl.h\"\nsed -e '/^\\/\\//d' -i include/acl.h\n\npatchShebangs .\n"; patches = [ ]; pname = "acl"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.3.1"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-pic" "--enable-cxx" "--disable-fat" "--build=aarch64-unknown-linux-gnu" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontDisableStatic = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontDisableStatic = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "gmp-with-cxx-stage4-6.2.1"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "info" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gmp/6.2.1-CVE-2021-43618.patch ]; pname = "gmp-with-cxx-stage4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gmp-6.2.1.tar.bz2"; outputHash = "0z2ddfiwgi0xbf65z4fg4hqqzlhv0cc6hdcswf3c6n21xdmk5sga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2"; urls = [ "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gmp-6.2.1.tar.bz2"; out = «repeated»; outPath = "/nix/store/mw1rz69y1gm0504mnziij4n51993zi74-gmp-6.2.1.tar.bz2"; outputHash = "0z2ddfiwgi0xbf65z4fg4hqqzlhv0cc6hdcswf3c6n21xdmk5sga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gmp/gmp-6.2.1.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.2.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gmp-with-cxx-stage4-6.2.1"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontDisableStatic = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gmp-with-cxx-stage4-6.2.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/1q9nfab5w0ifw157j6lb306c5lk8a3k5-gmp-with-cxx-stage4-6.2.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { static = <CODE>; }; patches = «repeated»; pname = "gmp-with-cxx-stage4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.2.1"; }; outPath = "/nix/store/fanvhphddrxc0k41ppirqp2pp10pfpwi-gmp-with-cxx-stage4-6.2.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "gmp-with-cxx-stage4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.2.1"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-packager=https://nixos.org" "--enable-single-binary=symlinks" "gl_cv_have_proc_uptime=yes" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { FORCE_UNSAFE_CONFIGURE = ""; NIX_CFLAGS_COMPILE = [ ]; NIX_LDFLAGS = ""; PERL = null; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "coreutils-9.1"; nativeBuildInputs = [ «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "info" "debug" ]; patches = [ ]; pname = "coreutils"; postInstall = "rm -r \"$out/share\"\n"; postPatch = "# The test tends to fail on btrfs, f2fs and maybe other unusual filesystems.\nsed '2i echo Skipping dd sparse test && exit 77' -i ./tests/dd/sparse.sh\nsed '2i echo Skipping du threshold test && exit 77' -i ./tests/du/threshold.sh\nsed '2i echo Skipping cp reflink-auto test && exit 77' -i ./tests/cp/reflink-auto.sh\nsed '2i echo Skipping cp sparse test && exit 77' -i ./tests/cp/sparse.sh\nsed '2i echo Skipping rm deep-2 test && exit 77' -i ./tests/rm/deep-2.sh\nsed '2i echo Skipping du long-from-unreadable test && exit 77' -i ./tests/du/long-from-unreadable.sh\n\n# Some target platforms, especially when building inside a container have\n# issues with the inotify test.\nsed '2i echo Skipping tail inotify dir recreate test && exit 77' -i ./tests/tail-2/inotify-dir-recreate.sh\n\n# sandbox does not allow setgid\nsed '2i echo Skipping chmod setgid test && exit 77' -i ./tests/chmod/setgid.sh\nsubstituteInPlace ./tests/install/install-C.sh \\\n  --replace 'mode3=2755' 'mode3=1755'\n\n# Fails on systems with a rootfs. Looks like a bug in the test, see\n# https://lists.gnu.org/archive/html/bug-coreutils/2019-12/msg00000.html\nsed '2i print \"Skipping df skip-rootfs test\"; exit 77' -i ./tests/df/skip-rootfs.sh\n\n# these tests fail in the unprivileged nix sandbox (without nix-daemon) as we break posix assumptions\nfor f in ./tests/chgrp/{basic.sh,recurse.sh,default-no-deref.sh,no-x.sh,posix-H.sh}; do\n  sed '2i echo Skipping chgrp && exit 77' -i \"$f\"\ndone\nfor f in gnulib-tests/{test-chown.c,test-fchownat.c,test-lchown.c}; do\n  echo \"int main() { return 77; }\" > \"$f\"\ndone\n\n# intermittent failures on builders, unknown reason\nsed '2i echo Skipping du basic test && exit 77' -i ./tests/du/basic.sh\nsed '2i print \"Skipping tail assert test\"; exit 77' -i ./tests/tail-2/assert.sh\n\n# Sometimes fails: https://github.com/NixOS/nixpkgs/pull/143097#issuecomment-954462584\nsed '2i echo Skipping cut huge range test && exit 77' -i ./tests/misc/cut-huge-range.sh\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "coreutils-9.1.tar.xz"; outputHash = "sha256-YaH0ENeLp+fzelpPUObRMgrKMzdUhKMlXt3xejhYBCM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/coreutils/coreutils-9.1.tar.xz"; urls = [ "https://ftpmirror.gnu.org/coreutils/coreutils-9.1.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "coreutils-9.1.tar.xz"; out = «repeated»; outPath = "/nix/store/f45dpx8vxhfckg2mbbns9dy1l82i74jz-coreutils-9.1.tar.xz"; outputHash = "sha256-YaH0ENeLp+fzelpPUObRMgrKMzdUhKMlXt3xejhYBCM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/coreutils/coreutils-9.1.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "9.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "coreutils-9.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "coreutils"; postInstall = "rm -r \"$out/share\"\n"; postPatch = "# The test tends to fail on btrfs, f2fs and maybe other unusual filesystems.\nsed '2i echo Skipping dd sparse test && exit 77' -i ./tests/dd/sparse.sh\nsed '2i echo Skipping du threshold test && exit 77' -i ./tests/du/threshold.sh\nsed '2i echo Skipping cp reflink-auto test && exit 77' -i ./tests/cp/reflink-auto.sh\nsed '2i echo Skipping cp sparse test && exit 77' -i ./tests/cp/sparse.sh\nsed '2i echo Skipping rm deep-2 test && exit 77' -i ./tests/rm/deep-2.sh\nsed '2i echo Skipping du long-from-unreadable test && exit 77' -i ./tests/du/long-from-unreadable.sh\n\n# Some target platforms, especially when building inside a container have\n# issues with the inotify test.\nsed '2i echo Skipping tail inotify dir recreate test && exit 77' -i ./tests/tail-2/inotify-dir-recreate.sh\n\n# sandbox does not allow setgid\nsed '2i echo Skipping chmod setgid test && exit 77' -i ./tests/chmod/setgid.sh\nsubstituteInPlace ./tests/install/install-C.sh \\\n  --replace 'mode3=2755' 'mode3=1755'\n\n# Fails on systems with a rootfs. Looks like a bug in the test, see\n# https://lists.gnu.org/archive/html/bug-coreutils/2019-12/msg00000.html\nsed '2i print \"Skipping df skip-rootfs test\"; exit 77' -i ./tests/df/skip-rootfs.sh\n\n# these tests fail in the unprivileged nix sandbox (without nix-daemon) as we break posix assumptions\nfor f in ./tests/chgrp/{basic.sh,recurse.sh,default-no-deref.sh,no-x.sh,posix-H.sh}; do\n  sed '2i echo Skipping chgrp && exit 77' -i \"$f\"\ndone\nfor f in gnulib-tests/{test-chown.c,test-fchownat.c,test-lchown.c}; do\n  echo \"int main() { return 77; }\" > \"$f\"\ndone\n\n# intermittent failures on builders, unknown reason\nsed '2i echo Skipping du basic test && exit 77' -i ./tests/du/basic.sh\nsed '2i print \"Skipping tail assert test\"; exit 77' -i ./tests/tail-2/assert.sh\n\n# Sometimes fails: https://github.com/NixOS/nixpkgs/pull/143097#issuecomment-954462584\nsed '2i echo Skipping cut huge range test && exit 77' -i ./tests/misc/cut-huge-range.sh\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "9.1"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "PR_PROGRAM=/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/pr" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "diffutils-3.8"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "info" ]; patches = [ ]; pname = "diffutils"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "diffutils-3.8.tar.xz"; outputHash = "sha256-pr3X0bMSZtEcT03mwbdI1GB6sCMa9RiPwlM9CuJDj+w="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/diffutils/diffutils-3.8.tar.xz"; urls = [ "https://ftpmirror.gnu.org/diffutils/diffutils-3.8.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "diffutils-3.8.tar.xz"; out = «repeated»; outPath = "/nix/store/021kkbvplg4z72pp3hp1vjp74qz7g92l-diffutils-3.8.tar.xz"; outputHash = "sha256-pr3X0bMSZtEcT03mwbdI1GB6sCMa9RiPwlM9CuJDj+w="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/diffutils/diffutils-3.8.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.8"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "diffutils-3.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/iw3lv41w3kzgw9r21y0cfihdhhrax2n9-diffutils-3.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "diffutils"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.8"; } «repeated» { CFLAGS = [ ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "SORT=/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/sort" "--localstatedir=/var/cache" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { CFLAGS = [ ]; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ ]; mesonFlags = [ ]; name = "findutils-4.9.0"; nativeBuildInputs = [ ]; outputs = [ "out" "info" "locate" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/misc/findutils/no-install-statedir.patch ]; pname = "findutils"; postFixup = "moveToOutput share/man/man5 $locate\nmoveToOutput share/man/man1/locate.1.gz $locate\nmoveToOutput share/man/man1/updatedb.1.gz $locate\n"; postInstall = "moveToOutput bin/locate $locate\nmoveToOutput bin/updatedb $locate\n"; postPatch = "substituteInPlace xargs/xargs.c --replace 'char default_cmd[] = \"echo\";' 'char default_cmd[] = \"/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/echo\";'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "findutils-4.9.0.tar.xz"; outputHash = "sha256-or+4wJ1DZ3DtxZ9Q+kg+eFsWGjt7nVR1c8sIBl/UYv4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/findutils/findutils-4.9.0.tar.xz"; urls = [ "https://ftpmirror.gnu.org/findutils/findutils-4.9.0.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "findutils-4.9.0.tar.xz"; out = «repeated»; outPath = "/nix/store/y954pl28vm03qfhvqrgyspwwv28b5lyi-findutils-4.9.0.tar.xz"; outputHash = "sha256-or+4wJ1DZ3DtxZ9Q+kg+eFsWGjt7nVR1c8sIBl/UYv4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/findutils/findutils-4.9.0.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.9.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ ]; info = <CODE>; inputDerivation = <CODE>; locate = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "findutils-4.9.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/25rjgwbcy2xarfwyrx65a5lcx7g6j4mr-findutils-4.9.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "findutils"; postFixup = "moveToOutput share/man/man5 $locate\nmoveToOutput share/man/man1/locate.1.gz $locate\nmoveToOutput share/man/man1/updatedb.1.gz $locate\n"; postInstall = "moveToOutput bin/locate $locate\nmoveToOutput bin/updatedb $locate\n"; postPatch = "substituteInPlace xargs/xargs.c --replace 'char default_cmd[] = \"echo\";' 'char default_cmd[] = \"/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/echo\";'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "4.9.0"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-libsigsegv" "--without-readline" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; makeFlags = [ "AR=ar" ]; mesonFlags = [ ]; name = "gawk-5.1.1"; nativeBuildInputs = [ ]; outputs = [ "out" "info" "man" ]; patches = [ ]; pname = "gawk"; postInstall = "rm \"$out\"/bin/gawk-*\nln -s gawk.1 \"\${!outputMan}\"/share/man/man1/awk.1\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "gawk-5.1.1.tar.xz"; outputHash = "18kybw47fb1sdagav7aj95r9pp09r5gm202y3ahvwjw9dqw2jxnq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gawk/gawk-5.1.1.tar.xz"; urls = [ "https://ftpmirror.gnu.org/gawk/gawk-5.1.1.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "gawk-5.1.1.tar.xz"; out = «repeated»; outPath = "/nix/store/n96s4cryw417jh2y7h01wdvm24pmkw2p-gawk-5.1.1.tar.xz"; outputHash = "18kybw47fb1sdagav7aj95r9pp09r5gm202y3ahvwjw9dqw2jxnq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gawk/gawk-5.1.1.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "5.1.1"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; libsigsegv = null; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gawk-5.1.1"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/b9i4h55fq5vrlb7b6an990c57njgpiar-gawk-5.1.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { libsigsegv = null; }; patches = [ ]; pname = "gawk"; postInstall = "rm \"$out\"/bin/gawk-*\nln -s gawk.1 \"\${!outputMan}\"/share/man/man1/awk.1\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.1.1"; } «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnumake-4.4"; nativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "man" "info" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/gnumake/0001-No-impure-bin-sh.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/gnumake/0002-remove-impure-dirs.patch ]; pname = "gnumake"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "make-4.4.tar.gz"; outputHash = "sha256-WB9NToctp0s5Qch0IViYp9NYAvA3Mr3M7h1KeXkQXRg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/make/make-4.4.tar.gz"; urls = [ "https://ftpmirror.gnu.org/make/make-4.4.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "make-4.4.tar.gz"; out = «repeated»; outPath = "/nix/store/rnkgw5gx37927i5d63a0hmbqavfhyczw-make-4.4.tar.gz"; outputHash = "sha256-WB9NToctp0s5Qch0IViYp9NYAvA3Mr3M7h1KeXkQXRg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/make/make-4.4.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.4"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnumake-4.4"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/6sl0rn606afqrvvf2cd37dl5m5hmnk2n-gnumake-4.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = «repeated»; pname = "gnumake"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "4.4"; } «repeated» { PERL = null; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { PERL = null; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnused-4.8"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "info" ]; patches = [ ]; pname = "gnused"; preConfigure = "patchShebangs ./build-aux/help2man"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "sed-4.8.tar.xz"; outputHash = "0cznxw73fzv1n3nj2zsq6nf73rvsbxndp444xkpahdqvlzz0r6zp"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/sed/sed-4.8.tar.xz"; urls = [ "https://ftpmirror.gnu.org/sed/sed-4.8.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "sed-4.8.tar.xz"; out = «repeated»; outPath = "/nix/store/yvmxwjqla2q9xrk3m9fhx7xfbci44cfz-sed-4.8.tar.xz"; outputHash = "0cznxw73fzv1n3nj2zsq6nf73rvsbxndp444xkpahdqvlzz0r6zp"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/sed/sed-4.8.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.8"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnused-4.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/kr6p5jwckmfyqk6pay22b8palxpil81l-gnused-4.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "gnused"; preConfigure = "patchShebangs ./build-aux/help2man"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "4.8"; } «repeated» { FORCE_UNSAFE_CONFIGURE = ""; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { FORCE_UNSAFE_CONFIGURE = ""; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnutar-1.34"; nativeBuildInputs = [ ]; outputs = [ "out" "info" ]; patches = [ ]; pname = "gnutar"; postPatch = ""; preConfigure = null; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "tar-1.34.tar.xz"; outputHash = "sha256-Y769JoecXh7qQ1Lw0DyZH5Zq6z3es8dEXJAlaNVBHSg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/tar/tar-1.34.tar.xz"; urls = [ "https://ftpmirror.gnu.org/tar/tar-1.34.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "tar-1.34.tar.xz"; out = «repeated»; outPath = "/nix/store/g4z2hh2kkxgs9vbfbixp5zwp20qh2w6k-tar-1.34.tar.xz"; outputHash = "sha256-Y769JoecXh7qQ1Lw0DyZH5Zq6z3es8dEXJAlaNVBHSg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/tar/tar-1.34.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.34"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnutar-1.34"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/1b851qrzgb9l1sf8w35l452p75yhl1rm-gnutar-1.34"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "gnutar"; postPatch = ""; preConfigure = null; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.34"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-jit=auto" "--enable-unicode-properties" "--disable-cpp" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; mesonFlags = [ ]; name = "pcre-8.45"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "doc" "man" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/pcre/stacksize-detection.patch ]; pname = "pcre"; postFixup = "moveToOutput bin/pcre-config \"$dev\"\n"; preCheck = "patchShebangs RunGrepTest\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "pcre-8.45.tar.bz2"; outputHash = "sha256-Ta5v3NK7C7bDe1+Xwzwr6VTadDmFNpzdrDVG4yGL/7g="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://downloads.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.bz2"; urls = [ "https://downloads.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "pcre-8.45.tar.bz2"; out = «repeated»; outPath = "/nix/store/4v6scm293mfbc0lvf58jz2xzcpqh62gp-pcre-8.45.tar.bz2"; outputHash = "sha256-Ta5v3NK7C7bDe1+Xwzwr6VTadDmFNpzdrDVG4yGL/7g="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://downloads.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "8.45"; }; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pcre-8.45"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pcre-8.45"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/zkvjwbsin9smc533cg16pfp5r64iiff4-pcre-8.45"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pcre"; postFixup = "moveToOutput bin/pcre-config \"$dev\"\n"; preCheck = "patchShebangs RunGrepTest\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "8.45"; }; outPath = "/nix/store/gsdajsj2gx527lyhp4qlq8khdh4yx3zc-pcre-8.45-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pcre"; postFixup = "moveToOutput bin/pcre-config \"$dev\"\n"; preCheck = "patchShebangs RunGrepTest\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "8.45"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/include\nln -sv /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include/iconv.h $out/include\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/include\nln -sv /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include/iconv.h $out/include\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "glibc-iconv-2.35"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "glibc-iconv-2.35"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/qkiyc0msmirm0jjzdm1vvv5ax77g29nf-glibc-iconv-2.35"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnugrep-3.7"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "info" ]; patches = [ ]; pname = "gnugrep"; postInstall = "rm $out/bin/egrep $out/bin/fgrep\necho \"#! /bin/sh\" > $out/bin/egrep\necho \"exec $out/bin/grep -E \\\"\\$@\\\"\" >> $out/bin/egrep\necho \"#! /bin/sh\" > $out/bin/fgrep\necho \"exec $out/bin/grep -F \\\"\\$@\\\"\" >> $out/bin/fgrep\nchmod +x $out/bin/egrep $out/bin/fgrep\n"; preConfigure = "export MKDIR_P=\"mkdir -p\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "grep-3.7.tar.xz"; outputHash = "0g42svbc1nq5bamxfj6x7320wli4dlj86padk0hwgbk04hqxl42w"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/grep/grep-3.7.tar.xz"; urls = [ "https://ftpmirror.gnu.org/grep/grep-3.7.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "grep-3.7.tar.xz"; out = «repeated»; outPath = "/nix/store/g13116b7w29kavi52p9mk6p02xq9k1lx-grep-3.7.tar.xz"; outputHash = "0g42svbc1nq5bamxfj6x7320wli4dlj86padk0hwgbk04hqxl42w"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/grep/grep-3.7.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.7"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnugrep-3.7"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pcre = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pcre-8.45"; nativeBuildInputs = [ ]; out = «repeated»; outPath = <CODE>; outputName = "bin"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "pcre"; postFixup = "moveToOutput bin/pcre-config \"$dev\"\n"; preCheck = "patchShebangs RunGrepTest\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "8.45"; }; }; patches = [ ]; pcre = «repeated»; pname = "gnugrep"; postInstall = "rm $out/bin/egrep $out/bin/fgrep\necho \"#! /bin/sh\" > $out/bin/egrep\necho \"exec $out/bin/grep -E \\\"\\$@\\\"\" >> $out/bin/egrep\necho \"#! /bin/sh\" > $out/bin/fgrep\necho \"exec $out/bin/grep -F \\\"\\$@\\\"\" >> $out/bin/fgrep\nchmod +x $out/bin/egrep $out/bin/fgrep\n"; preConfigure = "export MKDIR_P=\"mkdir -p\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.7"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; mesonFlags = [ ]; name = "patch-2.7.6"; nativeBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; mesonFlags = [ ]; name = "ed-1.18"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "CPPFLAGS=-DNDEBUG" "CFLAGS=-O3" "CXXFLAGS=-O3" "CXX=c++" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "lzip-1.23"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "man" "info" ]; patches = [ ]; pname = "lzip"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/compression/lzip/lzip-setup-hook.sh; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "lzip-1.23.tar.gz"; outputHash = "sha256-R5LAR93xXvKdVbqOaKGiHgy3aS2H7N9yBEGYZFgvKA0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://mirror.easyname.at/nongnu/lzip/lzip-1.23.tar.gz"; urls = [ "https://mirror.easyname.at/nongnu/lzip/lzip-1.23.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "lzip-1.23.tar.gz"; out = «repeated»; outPath = "/nix/store/fim96i2pigbmdkkc2rf34f71g9v50i5x-lzip-1.23.tar.gz"; outputHash = "sha256-R5LAR93xXvKdVbqOaKGiHgy3aS2H7N9yBEGYZFgvKA0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://mirror.easyname.at/nongnu/lzip/lzip-1.23.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.23"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "lzip-1.23"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/zankh4mf18mifc48lja0qwslsl4am1yq-lzip-1.23"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "lzip"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/compression/lzip/lzip-setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.23"; } ]; outputs = [ "out" ]; patches = [ ]; pname = "ed"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "ed-1.18.tar.lz"; outputHash = "sha256-rKjvrZgAxYdySiC5eqj8R+a1pH34Fgb+q6gxsHRGK08="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/ed/ed-1.18.tar.lz"; urls = [ "https://ftpmirror.gnu.org/ed/ed-1.18.tar.lz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "ed-1.18.tar.lz"; out = «repeated»; outPath = "/nix/store/qjp5wz88la5dkrqm6dylqv6dnip8sxss-ed-1.18.tar.lz"; outputHash = "sha256-rKjvrZgAxYdySiC5eqj8R+a1pH34Fgb+q6gxsHRGK08="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/ed/ed-1.18.tar.lz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.18"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "ed-1.18"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/sj8gr8hcq9k77lkmjdz1hdra8iwf7kpg-ed-1.18"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "ed"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.18"; } ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/gnupatch/CVE-2018-6951.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/gnupatch/Allow_input_files_to_be_missing_for_ed-style_patches.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/gnupatch/CVE-2018-1000156.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/gnupatch/CVE-2018-6952.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/gnupatch/CVE-2019-13636.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/gnupatch/CVE-2019-13638-and-CVE-2018-20969.patch ]; pname = "patch"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "patch-2.7.6.tar.xz"; outputHash = "1zfqy4rdcy279vwn2z1kbv19dcfw25d2aqy9nzvdkq5bjzd0nqdc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/patch/patch-2.7.6.tar.xz"; urls = [ "https://ftpmirror.gnu.org/patch/patch-2.7.6.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "patch-2.7.6.tar.xz"; out = «repeated»; outPath = "/nix/store/hl7wxzav5znk5wxfqncdrzpcb3hqy0y0-patch-2.7.6.tar.xz"; outputHash = "1zfqy4rdcy279vwn2z1kbv19dcfw25d2aqy9nzvdkq5bjzd0nqdc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/patch/patch-2.7.6.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.7.6"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "patch-2.7.6"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/225ykw6smvqdv2z9skkafq0sjab70y1w-patch-2.7.6"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "patch"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.7.6"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "patchelf-0.15.0"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "patchelf"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/patchelf/setup-hook.sh ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "patchelf-0.15.0.tar.bz2"; outputHash = "sha256-9ANtPuTY4ijewb7/8PbkbYpA6eVw4AaOOdd+YuLIvcI="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/NixOS/patchelf/releases/download/0.15.0/patchelf-0.15.0.tar.bz2"; urls = [ "https://github.com/NixOS/patchelf/releases/download/0.15.0/patchelf-0.15.0.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "patchelf-0.15.0.tar.bz2"; out = «repeated»; outPath = "/nix/store/447hvnlzzi9myri1iq3bijxgx6v6b592-patchelf-0.15.0.tar.bz2"; outputHash = "sha256-9ANtPuTY4ijewb7/8PbkbYpA6eVw4AaOOdd+YuLIvcI="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/NixOS/patchelf/releases/download/0.15.0/patchelf-0.15.0.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.15.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "patchelf-0.15.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/f07wx5pf7hrfcpcwji907bpzvh0sb7fi-patchelf-0.15.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "patchelf"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.15.0"; } «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ ]; mesonFlags = [ ]; name = "file-5.43"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "file"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "file-5.43.tar.gz"; outputHash = "sha256-jIAV6Rrg6NAyHZTHgjmJLvnbxwxK3gAIwOlYlKv7GZE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://astron.com/pub/file/file-5.43.tar.gz"; urls = [ "https://astron.com/pub/file/file-5.43.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "file-5.43.tar.gz"; out = «repeated»; outPath = "/nix/store/6w2pciy3jgirmdg7cgv4mrd4j8xv4907-file-5.43.tar.gz"; outputHash = "sha256-jIAV6Rrg6NAyHZTHgjmJLvnbxwxK3gAIwOlYlKv7GZE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://astron.com/pub/file/file-5.43.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.43"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = [ ]; mesonFlags = [ ]; meta = <CODE>; name = "file-5.43"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/9n8bmnam2ywysy3krkn6736d8dywznzz-file-5.43"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "file"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.43"; } «repeated» «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ { __ignoreNulls = true; all = <CODE>; am_cv_func_iconv_works = "yes"; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-libiconv-prefix=/nix/store/w5q0fc175jrg4sj9swix10a5a7g9hnzb-bootstrap-stage0-glibc-iconv-bootstrap" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; am_cv_func_iconv_works = "yes"; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = false; mesonFlags = [ ]; name = "libunistring-1.0"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "info" "doc" ]; patches = [ ]; pname = "libunistring"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "libunistring-1.0.tar.gz"; outputHash = "sha256-PAGEwOSS18IIzjHSXdHSxY8MPtbLvgMsWySM3a0xhUQ="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/libunistring/libunistring-1.0.tar.gz"; urls = [ "https://ftpmirror.gnu.org/libunistring/libunistring-1.0.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "libunistring-1.0.tar.gz"; out = «repeated»; outPath = "/nix/store/wp9v6jcv4vdxp8vwrfsb3q6qfalf2n5l-libunistring-1.0.tar.gz"; outputHash = "sha256-PAGEwOSS18IIzjHSXdHSxY8MPtbLvgMsWySM3a0xhUQ="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/libunistring/libunistring-1.0.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.0"; }; drvPath = <CODE>; enableParallelBuilding = false; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libunistring-1.0"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; am_cv_func_iconv_works = "yes"; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libunistring-1.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libunistring"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0"; }; outPath = "/nix/store/rvbsin472pj8xhhjyxwi516x3j743lhr-libunistring-1.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libunistring"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0"; } ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libidn2-2.3.2"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "info" "devdoc" ]; patches = [ ]; pname = "libidn2"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs -e '/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0' \\\n  \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "libidn2-2.3.2.tar.gz"; outputHash = "sha256-dpQM1Od46Ak1eanRlbJf/16Tbp3GJCBoUotDenZ2T5E="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://ftpmirror.gnu.org/gnu/libidn/libidn2-2.3.2.tar.gz"; urls = [ "https://ftpmirror.gnu.org/gnu/libidn/libidn2-2.3.2.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "libidn2-2.3.2.tar.gz"; out = «repeated»; outPath = "/nix/store/7abps0dar1gd6ljcmlic31q0517hfapp-libidn2-2.3.2.tar.gz"; outputHash = "sha256-dpQM1Od46Ak1eanRlbJf/16Tbp3GJCBoUotDenZ2T5E="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://ftpmirror.gnu.org/gnu/libidn/libidn2-2.3.2.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.3.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libidn2-2.3.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/r6v0jq0fms61lcmkpl2y5584ivh7m4z8-libidn2-2.3.2-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libidn2"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs -e '/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0' \\\n  \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.3.2"; }; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libidn2-2.3.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/psl9w5nkzbymzw6y36gh4mfiji0i1kp7-libidn2-2.3.2-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libidn2"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs -e '/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0' \\\n  \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.3.2"; }; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libidn2-2.3.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libidn2"; postFixup = "/nix/store/i1kg5n7j6pxjb9f5lraicgw76pz603q7-nuke-references/bin/nuke-refs -e '/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0' \\\n  \"$out\"/lib/lib*.so.*.*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.3.2"; } «repeated» «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = { NIX_CFLAGS_COMPILE = "-static-libgcc"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; hasGold = true; info = «repeated»; inputDerivation = <CODE>; isGNU = true; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "binutils-2.39"; nativeBuildInputs = «repeated»; noSysDirs = true; out = «repeated»; outPath = "/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "binutils"; preConfigure = "# Clear the default library search path.\nif test \"$noSysDirs\" = \"1\"; then\n    echo 'NATIVE_LIB_DIRS=' >> ld/configure.tgt\nfi\n\n# Use symlinks instead of hard links to save space (\"strip\" in the\n# fixup phase strips each hard link separately).\nfor i in binutils/Makefile.in gas/Makefile.in ld/Makefile.in gold/Makefile.in; do\n    sed -i \"$i\" -e 's|ln |ln -s |'\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; stripDebugList = null; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; userHook = null; version = "2.39"; }; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dynamicLinker = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1"; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnugrep-3.7"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pcre = «repeated»; pname = "gnugrep"; postInstall = "rm $out/bin/egrep $out/bin/fgrep\necho \"#! /bin/sh\" > $out/bin/egrep\necho \"exec $out/bin/grep -E \\\"\\$@\\\"\" >> $out/bin/egrep\necho \"#! /bin/sh\" > $out/bin/fgrep\necho \"exec $out/bin/grep -F \\\"\\$@\\\"\" >> $out/bin/fgrep\nchmod +x $out/bin/egrep $out/bin/fgrep\n"; preConfigure = "export MKDIR_P=\"mkdir -p\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.7"; }; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "info" ]; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39 /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/q5z2yjmdlzjygmi8ls2lwn31rm7p00bd-binutils-2.39-man $man\nln -s /nix/store/hvrn6001sjnsg2snpdqbkfn3vhpcpnif-binutils-2.39-info $info\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/bintools-wrapper/setup-hook.sh ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; drvPath = <CODE>; dynamicLinker = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; bintools_bin = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; dynamicLinker = "/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1"; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $bintools_bin > $out/nix-support/orig-bintools\n\nldPath=\"/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin\"\nfor binary in objdump objcopy size strings as ar nm gprof dwp c++filt addr2line \\\n    ranlib readelf elfedit dlltool dllwrap windmc windres; do\n  if [ -e $ldPath/\${binary} ]; then\n    ln -s $ldPath/\${binary} $out/bin/\${binary}\n  fi\ndone\n\nwrap ld /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh \${ld:-$ldPath/ld}\n\nfor variant in ld.gold ld.bfd ld.lld; do\n  local underlying=$ldPath/$variant\n  [[ -e \"$underlying\" ]] || continue\n  wrap $variant /nix/store/vicx6qnvvxb96y0iwnya977viira2apc-ld-wrapper.sh $underlying\ndone\n"; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "binutils-wrapper-2.39"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; out = «repeated»; outPath = "/nix/store/zkmzlvmlizm1jqjygc69469pfai2jpfp-binutils-wrapper-2.39"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; }; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39 /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/q5z2yjmdlzjygmi8ls2lwn31rm7p00bd-binutils-2.39-man $man\nln -s /nix/store/hvrn6001sjnsg2snpdqbkfn3vhpcpnif-binutils-2.39-info $info\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; }; outPath = "/nix/store/zkmzlvmlizm1jqjygc69469pfai2jpfp-binutils-wrapper-2.39"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "binutils-wrapper"; postFixup = "touch \"$out/nix-support/libc-ldflags\"\necho \"-L/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib\" >> $out/nix-support/libc-ldflags\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\nif [[ -z \${dynamicLinker+x} ]]; then\n  echo \"Don't know the name of the dynamic linker for platform 'aarch64-unknown-linux-gnu', so guessing instead.\" >&2\n  local dynamicLinker=\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld*.so.?\"\nfi\ndynamicLinker=($dynamicLinker)\n\ncase \${#dynamicLinker[@]} in\n  0) echo \"No dynamic linker found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\n  1) echo \"Using dynamic linker: '$dynamicLinker'\" >&2;;\n  *) echo \"Multiple dynamic linkers found for platform 'aarch64-unknown-linux-gnu'.\" >&2;;\nesac\n\nif [ -n \"\${dynamicLinker-}\" ]; then\n  echo $dynamicLinker > $out/nix-support/dynamic-linker\n\n  if [ -e /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 ]; then\n  echo /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/32/ld-linux.so.2 > $out/nix-support/dynamic-linker-m32\nfi\ntouch $out/nix-support/ld-set-dynamic-linker\n\nfi\nprintWords /nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39 /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/q5z2yjmdlzjygmi8ls2lwn31rm7p00bd-binutils-2.39-man $man\nln -s /nix/store/hvrn6001sjnsg2snpdqbkfn3vhpcpnif-binutils-2.39-info $info\nexport hardening_unsupported_flags=\"\"\nif [[ \"$($ldPath/ld -z now 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" bindnow\"\nfi\nif [[ \"$($ldPath/ld -z relro 2>&1 || true)\" =~ un(recognized|known)\\ option ]]; then\n  hardening_unsupported_flags+=\" relro\"\nfi\nwrap strip /nix/store/m9qvr6m0bylrjqb5ind6hfzsax14xys9-gnu-binutils-strip-wrapper.sh \\\n  \"/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/strip\"\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/mrzpfh0ml9k07sw019ydagbb2z1q4sxz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/c1vmxz359mfljs3cdimhd2fr6fw0n99s-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = "2.39"; wrapperName = "BINTOOLS_WRAPPER"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; mesonFlags = [ ]; name = "gcc-wrapper-9.5.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "info" ]; patches = [ ]; pname = "gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" -a ! -L \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\n  ccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\nccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nln -s /nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man $man\nln -s /nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info $info\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/setup-hook.sh ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "9.5.0"; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "NIX_CC_USE_RESPONSE_FILE=0 \"$CC\" -std=c99 -O3 -o \"expand-response-params\" expand-response-params.c\n"; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; name = "expand-response-params"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $prefix/bin\nmv expand-response-params $prefix/bin/\n"; mesonFlags = [ ]; meta = <CODE>; name = "expand-response-params"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/expand-response-params/expand-response-params.c; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; unpackPhase = "cp \"$src\" expand-response-params.c\nsrc=$PWD\n"; userHook = null; }; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gcc-wrapper-9.5.0"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bintools = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cc = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; coreutils_bin = «repeated»; darwinMinVersion = ""; darwinMinVersionVariable = ""; darwinPlatformForCC = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; drvAttrs = «repeated»; drvPath = <CODE>; emacsBufferSetup = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; expand-response-params = «repeated»; expandResponseParams = "/nix/store/3v1z3a2q231ap60xin3wylyxkk1ipyj6-expand-response-params/bin/expand-response-params"; gnugrep_bin = «repeated»; info = <CODE>; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  export use_response_file_by_default=0\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\necho $cc > $out/nix-support/orig-cc\n\nccPath=\"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0/bin\"\nfor bbin in $bintools/bin/*; do\n  mkdir -p \"$out/bin\"\n  ln -s \"$bbin\" \"$out/bin/$(basename $bbin)\"\ndone\nexport named_cc=cc\nexport named_cxx=c++\n\nif [ -e $ccPath/gcc ]; then\n  wrap gcc $wrapper $ccPath/gcc\n  ln -s gcc $out/bin/cc\n  export named_cc=gcc\n  export named_cxx=g++\nelif [ -e $ccPath/clang ]; then\n  wrap clang $wrapper $ccPath/clang\n  ln -s clang $out/bin/cc\n  export named_cc=clang\n  export named_cxx=clang++\nfi\n\nif [ -e $ccPath/g++ ]; then\n  wrap g++ $wrapper $ccPath/g++\n  ln -s g++ $out/bin/c++\nelif [ -e $ccPath/clang++ ]; then\n  wrap clang++ $wrapper $ccPath/clang++\n  ln -s clang++ $out/bin/c++\nfi\n\nif [ -e $ccPath/cpp ]; then\n  wrap cpp $wrapper $ccPath/cpp\nfi\n"; isClang = false; isGNU = true; libc = «repeated»; libc_bin = «repeated»; libc_dev = «repeated»; libc_lib = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gcc-wrapper-9.5.0"; nativeBuildInputs = [ ]; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; out = «repeated»; outPath = "/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { bintools = «repeated»; emacsBufferSetup = <CODE>; expand-response-params = «repeated»; isClang = false; isGNU = true; libc = «repeated»; nativeLibc = false; nativePrefix = ""; nativeTools = false; nixSupport = { }; }; patches = [ ]; pname = "gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" -a ! -L \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\n  ccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\nccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nln -s /nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man $man\nln -s /nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info $info\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "9.5.0"; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; }; outPath = "/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "gcc-wrapper"; postFixup = "touch \"$out/nix-support/cc-cflags\"\ntouch \"$out/nix-support/cc-ldflags\"\nif [[ -f \"$bintools/nix-support/dynamic-linker\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker\" \"$out/nix-support\"\nfi\nif [[ -f \"$bintools/nix-support/dynamic-linker-m32\" ]]; then\n  ln -s \"$bintools/nix-support/dynamic-linker-m32\" \"$out/nix-support\"\nfi\ntouch \"$out/nix-support/libc-cflags\"\ntouch \"$out/nix-support/libc-ldflags\"\necho \"-B/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/\" >> $out/nix-support/libc-crt1-cflags\necho \"-idirafter /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include\" >> $out/nix-support/libc-cflags\nfor dir in \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\"/lib/gcc/*/*/include-fixed; do\n  echo '-idirafter' \${dir} >> $out/nix-support/libc-cflags\ndone\n\necho \"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\" > $out/nix-support/orig-libc\necho \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" > $out/nix-support/orig-libc-dev\ntouch \"$out/nix-support/libcxx-cxxflags\"\ntouch \"$out/nix-support/libcxx-ldflags\"\nif [ -e \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" -a ! -L \"/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\" ]; then\n  ccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\n  ccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib64\"\nfi\nccLDFlags+=\" -L/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\nccCFlags+=\" -B/nix/store/kyrb20x8ldfhih953ffd8yba42qfb5xy-gcc-9.5.0-lib/lib\"\n\necho \"$ccLDFlags\" >> $out/nix-support/cc-ldflags\necho \"$ccCFlags\" >> $out/nix-support/cc-cflags\nln -s /nix/store/q5am3jy1c09q07hbslj76f0yjf5ksswr-gcc-9.5.0-man $man\nln -s /nix/store/8r1jshlnqjfw6a4723qkg29bixpjildw-gcc-9.5.0-info $info\nexport hardening_unsupported_flags=\"\"\necho \"-march=armv8-a\" >> $out/nix-support/cc-cflags-before\nfor flags in \"$out/nix-support\"/*flags*; do\n  substituteInPlace \"$flags\" --replace $'\\n' ' '\ndone\n\nsubstituteAll /nix/store/ji2yrl1na00bwav65hh1vr0nc0s1xzvz-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/29mcnqag3ii7dihfwy0bzq7hbhf73190-add-hardening.sh $out/nix-support/add-hardening.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = "derivation"; unpackPhase = "src=$PWD\n"; userHook = null; version = "9.5.0"; wrapper = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/cc-wrapper/cc-wrapper.sh; wrapperName = "CC_WRAPPER"; } «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/00qr10y7z2fcvrp9b2m46710nkjvj55z-update-autotools-gnu-config-scripts.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; gnu_config = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out\ncp /nix/store/jsr3hk44asgyf51crp7ajgmrq95k1pw2-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.guess\ncp /nix/store/ms3a99q5qhgiryi8xqa3vs26xwrg5vn6-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.sub\n\nchmod +x $out/config.*\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out\ncp /nix/store/jsr3hk44asgyf51crp7ajgmrq95k1pw2-config.guess?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.guess\ncp /nix/store/ms3a99q5qhgiryi8xqa3vs26xwrg5vn6-config.sub?id=6faca61810d335c7837f320733fe8e15a1431fc2 $out/config.sub\n\nchmod +x $out/config.*\n"; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "gnu-config-2021-01-25"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "gnu-config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2021-01-25"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnu-config-2021-01-25"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/s58fnl7rywp1fb0x5hml0zxzhir1skqm-gnu-config-2021-01-25"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "gnu-config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2021-01-25"; }; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; gnu_config = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/q5xwvaxh17dxg0giggm8b7y0s7lfx2gc-hook"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; } «repeated» { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "patchelf-0.15.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/f07wx5pf7hrfcpcwji907bpzvh0sb7fi-patchelf-0.15.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "patchelf"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.15.0"; } «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; bootstrapTools = «repeated»; buildPlatform = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cc = null; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh null ]; disallowedRequisites = [ «repeated» ]; drvAttrs = { allowedRequisites = «repeated»; args = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = «repeated»; initialPath = [ { FORCE_UNSAFE_CONFIGURE = ""; NIX_CFLAGS_COMPILE = [ ]; NIX_LDFLAGS = ""; PERL = null; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "coreutils-9.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1"; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "coreutils"; postInstall = "rm -r \"$out/share\"\n"; postPatch = "# The test tends to fail on btrfs, f2fs and maybe other unusual filesystems.\nsed '2i echo Skipping dd sparse test && exit 77' -i ./tests/dd/sparse.sh\nsed '2i echo Skipping du threshold test && exit 77' -i ./tests/du/threshold.sh\nsed '2i echo Skipping cp reflink-auto test && exit 77' -i ./tests/cp/reflink-auto.sh\nsed '2i echo Skipping cp sparse test && exit 77' -i ./tests/cp/sparse.sh\nsed '2i echo Skipping rm deep-2 test && exit 77' -i ./tests/rm/deep-2.sh\nsed '2i echo Skipping du long-from-unreadable test && exit 77' -i ./tests/du/long-from-unreadable.sh\n\n# Some target platforms, especially when building inside a container have\n# issues with the inotify test.\nsed '2i echo Skipping tail inotify dir recreate test && exit 77' -i ./tests/tail-2/inotify-dir-recreate.sh\n\n# sandbox does not allow setgid\nsed '2i echo Skipping chmod setgid test && exit 77' -i ./tests/chmod/setgid.sh\nsubstituteInPlace ./tests/install/install-C.sh \\\n  --replace 'mode3=2755' 'mode3=1755'\n\n# Fails on systems with a rootfs. Looks like a bug in the test, see\n# https://lists.gnu.org/archive/html/bug-coreutils/2019-12/msg00000.html\nsed '2i print \"Skipping df skip-rootfs test\"; exit 77' -i ./tests/df/skip-rootfs.sh\n\n# these tests fail in the unprivileged nix sandbox (without nix-daemon) as we break posix assumptions\nfor f in ./tests/chgrp/{basic.sh,recurse.sh,default-no-deref.sh,no-x.sh,posix-H.sh}; do\n  sed '2i echo Skipping chgrp && exit 77' -i \"$f\"\ndone\nfor f in gnulib-tests/{test-chown.c,test-fchownat.c,test-lchown.c}; do\n  echo \"int main() { return 77; }\" > \"$f\"\ndone\n\n# intermittent failures on builders, unknown reason\nsed '2i echo Skipping du basic test && exit 77' -i ./tests/du/basic.sh\nsed '2i print \"Skipping tail assert test\"; exit 77' -i ./tests/tail-2/assert.sh\n\n# Sometimes fails: https://github.com/NixOS/nixpkgs/pull/143097#issuecomment-954462584\nsed '2i echo Skipping cut huge range test && exit 77' -i ./tests/misc/cut-huge-range.sh\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "9.1"; } { CFLAGS = [ ]; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ ]; info = <CODE>; inputDerivation = <CODE>; locate = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "findutils-4.9.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/25rjgwbcy2xarfwyrx65a5lcx7g6j4mr-findutils-4.9.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "findutils"; postFixup = "moveToOutput share/man/man5 $locate\nmoveToOutput share/man/man1/locate.1.gz $locate\nmoveToOutput share/man/man1/updatedb.1.gz $locate\n"; postInstall = "moveToOutput bin/locate $locate\nmoveToOutput bin/updatedb $locate\n"; postPatch = "substituteInPlace xargs/xargs.c --replace 'char default_cmd[] = \"echo\";' 'char default_cmd[] = \"/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/echo\";'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "4.9.0"; } { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "diffutils-3.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/iw3lv41w3kzgw9r21y0cfihdhhrax2n9-diffutils-3.8"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "diffutils"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.8"; } { PERL = null; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnused-4.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/kr6p5jwckmfyqk6pay22b8palxpil81l-gnused-4.8"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "gnused"; preConfigure = "patchShebangs ./build-aux/help2man"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "4.8"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; libsigsegv = null; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gawk-5.1.1"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/b9i4h55fq5vrlb7b6an990c57njgpiar-gawk-5.1.1"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = [ ]; pname = "gawk"; postInstall = "rm \"$out\"/bin/gawk-*\nln -s gawk.1 \"\${!outputMan}\"/share/man/man1/awk.1\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "5.1.1"; } { FORCE_UNSAFE_CONFIGURE = ""; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnutar-1.34"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/1b851qrzgb9l1sf8w35l452p75yhl1rm-gnutar-1.34"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "gnutar"; postPatch = ""; preConfigure = null; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.34"; } { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gzip-1.12"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/xgm1prhav93k4a8w6hkc0ri7kk5gx5x3-gzip-1.12"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "gzip"; preFixup = "sed -i '1{;/#!\\/bin\\/sh/aPATH=\"'$out'/bin:$PATH\"\n}' $out/bin/*\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.12"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnumake-4.4"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/6sl0rn606afqrvvf2cd37dl5m5hmnk2n-gnumake-4.4"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "gnumake"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "4.4"; } { NIX_CFLAGS_COMPILE = "-DSYS_BASHRC=\"/etc/bashrc\"\n-DSYS_BASH_LOGOUT=\"/etc/bash_logout\"\n-DDEFAULT_PATH_VALUE=\"/no-such-path\"\n-DSTANDARD_UTILS_PATH=\"/no-such-path\"\n-DNON_INTERACTIVE_LOGIN_SHELLS\n-DSSH_SOURCE_BASHRC\n"; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bash-5.1-p16"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patchFlags = «repeated»; patches = «repeated»; postFixup = "rm -rf \"$out/share\" \"$out/bin/bashbug\"\n"; postInstall = "ln -s bash \"$out/bin/sh\"\nrm -f $out/lib/bash/Makefile.inc\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shellPath = "/bin/bash"; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "5.1"; } { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "patch-2.7.6"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/225ykw6smvqdv2z9skkafq0sjab70y1w-patch-2.7.6"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "patch"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.7.6"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = [ ]; mesonFlags = [ ]; meta = <CODE>; name = "file-5.43"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/9n8bmnam2ywysy3krkn6736d8dywznzz-file-5.43"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "file"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "5.43"; } ]; name = "stdenv-linux"; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = [ «repeated» «repeated» ]; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = false; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "stdenv-linux"; out = { all = <CODE>; allowedRequisites = «repeated»; args = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "stdenv-linux"; out = «repeated»; outPath = "/nix/store/5gk4206hladqq2agifr9n09yyvwnhaxa-stdenv-linux"; outputName = "out"; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/5gk4206hladqq2agifr9n09yyvwnhaxa-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; shellDryRun = <CODE>; shellPackage = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "auto-patchelf-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/y5s2fmp7l3rhlia67f2y6sclh1n4c22a-auto-patchelf-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/sfpfsrqbqymf8rw7hb1hbj96c2y3s8gl-python3-3.10.9-env/bin/python"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "out" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" "NIX_CURL_FLAGS" "NIX_HASHED_MIRRORS" "NIX_CONNECT_TIMEOUT" "NIX_MIRRORS_alsa" "NIX_MIRRORS_apache" "NIX_MIRRORS_bioc" "NIX_MIRRORS_bitlbee" "NIX_MIRRORS_centos" "NIX_MIRRORS_cpan" "NIX_MIRRORS_debian" "NIX_MIRRORS_fedora" "NIX_MIRRORS_gcc" "NIX_MIRRORS_gentoo" "NIX_MIRRORS_gnome" "NIX_MIRRORS_gnu" "NIX_MIRRORS_gnupg" "NIX_MIRRORS_hackage" "NIX_MIRRORS_hashedMirrors" "NIX_MIRRORS_ibiblioPubLinux" "NIX_MIRRORS_imagemagick" "NIX_MIRRORS_kde" "NIX_MIRRORS_kernel" "NIX_MIRRORS_luarocks" "NIX_MIRRORS_maven" "NIX_MIRRORS_mozilla" "NIX_MIRRORS_mysql" "NIX_MIRRORS_openbsd" "NIX_MIRRORS_opensuse" "NIX_MIRRORS_osdn" "NIX_MIRRORS_postgresql" "NIX_MIRRORS_pypi" "NIX_MIRRORS_qt" "NIX_MIRRORS_roy" "NIX_MIRRORS_sageupstream" "NIX_MIRRORS_samba" "NIX_MIRRORS_savannah" "NIX_MIRRORS_sourceforge" "NIX_MIRRORS_steamrt" "NIX_MIRRORS_tcsh" "NIX_MIRRORS_testpypi" "NIX_MIRRORS_ubuntu" "NIX_MIRRORS_xfce" "NIX_MIRRORS_xorg" ]; mesonFlags = [ ]; mirrorsFile = { __ignoreNulls = true; all = <CODE>; alsa = [ "https://www.alsa-project.org/files/pub/" "ftp://ftp.alsa-project.org/pub/" "http://alsa.cybermirror.org/" "http://www.mirrorservice.org/sites/ftp.alsa-project.org/pub/" ]; apache = [ "https://dlcdn.apache.org/" "https://www-eu.apache.org/dist/" "https://ftp.wayne.edu/apache/" "https://www.apache.org/dist/" "https://archive.apache.org/dist/" "https://apache.cs.uu.nl/" "https://apache.cs.utah.edu/" "http://ftp.tudelft.nl/apache/" "ftp://ftp.funet.fi/pub/mirrors/apache.org/" ]; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/write-mirror-list.sh ]; bioc = [ "https://bioconductor.statistik.tu-dortmund.de/packages/" "https://mirrors.ustc.edu.cn/bioc/" "http://bioconductor.jp/packages/" ]; bitlbee = [ "https://get.bitlbee.org/" "https://ftp.snt.utwente.nl/pub/software/bitlbee/" "http://bitlbee.intergenia.de/" ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; centos = [ "https://vault.centos.org/" "https://archive.kernel.org/centos-vault/" "https://ftp.jaist.ac.jp/pub/Linux/CentOS-vault/" "https://mirrors.aliyun.com/centos-vault/" "https://mirror.chpc.utah.edu/pub/vault.centos.org/" "https://mirror.math.princeton.edu/pub/centos-vault/" "https://mirrors.tripadvisor.com/centos-vault/" "http://mirror.centos.org/centos/" ]; cmakeFlags = [ ]; configureFlags = [ ]; cpan = [ "https://cpan.metacpan.org/" "https://cpan.perl.org/" "https://mirrors.kernel.org/CPAN/" "https://backpan.perl.org/" ]; debian = [ "https://httpredir.debian.org/debian/" "https://ftp.debian.org/debian/" "https://mirrors.edge.kernel.org/debian/" "ftp://ftp.de.debian.org/debian/" "ftp://ftp.fr.debian.org/debian/" "ftp://ftp.nl.debian.org/debian/" "ftp://ftp.ru.debian.org/debian/" "http://archive.debian.org/debian-archive/debian/" "ftp://ftp.funet.fi/pub/mirrors/ftp.debian.org/debian/" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; alsa = «repeated»; apache = «repeated»; args = «repeated»; bioc = «repeated»; bitlbee = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; centos = «repeated»; cmakeFlags = [ ]; configureFlags = [ ]; cpan = «repeated»; debian = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; fedora = [ "https://archives.fedoraproject.org/pub/fedora/" "https://fedora.osuosl.org/" "https://ftp.funet.fi/pub/mirrors/ftp.redhat.com/pub/fedora/" "https://ftp.linux.cz/pub/linux/fedora/" "https://archives.fedoraproject.org/pub/archive/fedora/" "http://ftp.nluug.nl/pub/os/Linux/distr/fedora/" "http://mirror.csclub.uwaterloo.ca/fedora/" "http://mirror.1000mbps.com/fedora/" ]; gcc = [ "https://bigsearcher.com/mirrors/gcc/" "https://mirror.koddos.net/gcc/" "ftp://ftp.nluug.nl/mirror/languages/gcc/" "ftp://ftp.fu-berlin.de/unix/languages/gcc/" "ftp://ftp.irisa.fr/pub/mirrors/gcc.gnu.org/gcc/" "ftp://gcc.gnu.org/pub/gcc/" ]; gentoo = [ "https://ftp.snt.utwente.nl/pub/os/linux/gentoo/" "https://distfiles.gentoo.org/" "https://mirrors.kernel.org/gentoo/" ]; gnome = [ "https://download.gnome.org/" "https://fr2.rpmfind.net/linux/gnome.org/" "https://ftp.acc.umu.se/pub/GNOME/" "https://ftp.belnet.be/mirror/ftp.gnome.org/" "ftp://ftp.cse.buffalo.edu/pub/Gnome/" "ftp://ftp.nara.wide.ad.jp/pub/X11/GNOME/" ]; gnu = [ "https://ftpmirror.gnu.org/" "https://ftp.nluug.nl/pub/gnu/" "https://mirrors.kernel.org/gnu/" "https://mirror.ibcp.fr/pub/gnu/" "https://mirror.dogado.de/gnu/" "https://mirror.tochlab.net/pub/gnu/" "https://ftp.gnu.org/pub/gnu/" "ftp://ftp.funet.fi/pub/mirrors/ftp.gnu.org/gnu/" ]; gnupg = [ "https://gnupg.org/ftp/gcrypt/" "https://mirrors.dotsrc.org/gcrypt/" "https://ftp.heanet.ie/mirrors/ftp.gnupg.org/gcrypt/" "https://www.mirrorservice.org/sites/ftp.gnupg.org/gcrypt/" "http://www.ring.gr.jp/pub/net/" ]; hackage = [ "https://hackage.haskell.org/package/" ]; hashedMirrors = [ "https://tarballs.nixos.org" ]; ibiblioPubLinux = [ "https://www.ibiblio.org/pub/Linux/" "ftp://ftp.ibiblio.org/pub/linux/" "ftp://ftp.gwdg.de/pub/linux/metalab/" "ftp://ftp.metalab.unc.edu/pub/linux/" ]; imagemagick = [ "https://www.imagemagick.org/download/" "https://mirror.checkdomain.de/imagemagick/" "https://ftp.nluug.nl/ImageMagick/" "https://ftp.sunet.se/mirror/imagemagick.org/ftp/" "ftp://ftp.sunet.se/mirror/imagemagick.org/ftp/" ]; kde = [ "https://download.kde.org/download.php?url=" "https://ftp.gwdg.de/pub/linux/kde/" "https://mirrors.ocf.berkeley.edu/kde/" "https://mirrors.mit.edu/kde/" "https://mirrors.ustc.edu.cn/kde/" "https://ftp.funet.fi/pub/mirrors/ftp.kde.org/pub/kde/" ]; kernel = [ "https://cdn.kernel.org/pub/" "http://linux-kernel.uio.no/pub/" "ftp://ftp.funet.fi/pub/mirrors/ftp.kernel.org/pub/" ]; luarocks = [ "https://luarocks.org/" "https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/" "https://luafr.org/moonrocks/" ]; maven = [ "https://repo1.maven.org/maven2/" ]; mesonFlags = [ ]; mozilla = [ "https://download.cdn.mozilla.net/pub/mozilla.org/" "https://archive.mozilla.org/pub/" ]; mysql = [ "https://cdn.mysql.com/Downloads/" ]; name = "mirrors-list"; nativeBuildInputs = [ ]; openbsd = [ "https://ftp.openbsd.org/pub/OpenBSD/" "ftp://ftp.nluug.nl/pub/OpenBSD/" "ftp://ftp-stud.fht-esslingen.de/pub/OpenBSD/" ]; opensuse = [ "https://opensuse.hro.nl/opensuse/distribution/" "https://ftp.funet.fi/pub/linux/mirrors/opensuse/distribution/" "https://ftp.opensuse.org/pub/opensuse/distribution/" "https://ftp5.gwdg.de/pub/opensuse/discontinued/distribution/" "https://mirrors.edge.kernel.org/opensuse/distribution/" "http://ftp.hosteurope.de/mirror/ftp.opensuse.org/discontinued/" ]; osdn = [ "https://osdn.dl.osdn.jp/" "https://osdn.mirror.constant.com/" "https://mirrors.gigenet.com/OSDN/" "https://osdn.dl.sourceforge.jp/" "https://jaist.dl.sourceforge.jp/" ]; outputs = [ "out" ]; patches = [ ]; postgresql = [ "https://ftp.postgresql.org/pub/" ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pypi = [ "https://files.pythonhosted.org/packages/source/" "https://pypi.io/packages/source/" ]; qt = [ "https://download.qt.io/" ]; roy = [ "https://roy.marples.name/downloads/" "https://cflags.cc/roy/" ]; sageupstream = [ "https://sagemath.mirror.ac.za/spkg/upstream/" "https://mirror.ufs.ac.za/sagemath/spkg/upstream/" "https://mirrors.mit.edu/sage/spkg/upstream/" "https://mirrors.xmission.com/sage/spkg/upstream/" "https://mirrors.tuna.tsinghua.edu.cn/sagemath/spkg/upstream/" "https://mirrors.ustc.edu.cn/sagemath/spkg/upstream/" "http://ftp.tsukuba.wide.ad.jp/software/sage/spkg/upstream/" "https://ftp.yz.yamagata-u.ac.jp/pub/math/sage/spkg/upstream/" "https://mirror.yandex.ru/mirrors/sage.math.washington.edu/spkg/upstream/" "https://mirror.aarnet.edu.au/pub/sage/spkg/upstream/" "https://sage.mirror.garr.it/mirrors/sage/spkg/upstream/" "https://www-ftp.lip6.fr/pub/math/sagemath/spkg/upstream/" "ftp://ftp.sun.ac.za/pub/mirrors/www.sagemath.org/spkg/upstream/" "http://www.cecm.sfu.ca/sage/spkg/upstream/" "http://sagemath.c3sl.ufpr.br/spkg/upstream/" "http://linorg.usp.br/sage/spkg/upstream" "http://ftp.kaist.ac.kr/sage/spkg/upstream/" "http://ftp.riken.jp/sagemath/spkg/upstream/" "http://mirrors.fe.up.pt/pub/sage/spkg/upstream/" "http://ftp.ntua.gr/pub/sagemath/spkg/upstream/" ]; samba = [ "https://www.samba.org/ftp/" "http://www.samba.org/ftp/" ]; savannah = [ "https://mirror.easyname.at/nongnu/" "https://savannah.c3sl.ufpr.br/" "https://mirror.csclub.uwaterloo.ca/nongnu/" "https://mirror.cedia.org.ec/nongnu/" "https://ftp.igh.cnrs.fr/pub/nongnu/" "https://mirror6.layerjet.com/nongnu" "https://mirror.netcologne.de/savannah/" "https://ftp.cc.uoc.gr/mirrors/nongnu.org/" "https://nongnu.uib.no/" "https://ftp.acc.umu.se/mirror/gnu.org/savannah/" "http://mirror2.klaus-uwe.me/nongnu/" "http://mirrors.fe.up.pt/pub/nongnu/" "http://ftp.twaren.net/Unix/NonGNU/" "http://savannah-nongnu-org.ip-connect.vn.ua/" "http://www.mirrorservice.org/sites/download.savannah.gnu.org/releases/" "http://gnu.mirrors.pair.com/savannah/savannah/" "ftp://mirror.easyname.at/nongnu/" "ftp://mirror2.klaus-uwe.me/nongnu/" "ftp://mirror.csclub.uwaterloo.ca/nongnu/" "ftp://ftp.igh.cnrs.fr/pub/nongnu/" "ftp://mirror.netcologne.de/savannah/" "ftp://nongnu.uib.no/pub/nongnu/" "ftp://mirrors.fe.up.pt/pub/nongnu/" "ftp://ftp.twaren.net/Unix/NonGNU/" "ftp://savannah-nongnu-org.ip-connect.vn.ua/mirror/savannah.nongnu.org/" "ftp://ftp.mirrorservice.org/sites/download.savannah.gnu.org/releases/" ]; sourceforge = [ "https://downloads.sourceforge.net/" "https://prdownloads.sourceforge.net/" "https://netcologne.dl.sourceforge.net/sourceforge/" "https://versaweb.dl.sourceforge.net/sourceforge/" "https://freefr.dl.sourceforge.net/sourceforge/" "https://osdn.dl.sourceforge.net/sourceforge/" "https://kent.dl.sourceforge.net/sourceforge/" ]; stdenv = «repeated»; steamrt = [ "https://repo.steampowered.com/steamrt/" "https://public.abbradar.moe/steamrt/" ]; strictDeps = true; system = "aarch64-linux"; tcsh = [ "https://astron.com/pub/tcsh/" "https://astron.com/pub/tcsh/old/" "http://ftp.funet.fi/pub/mirrors/ftp.astron.com/pub/tcsh/" "http://ftp.funet.fi/pub/mirrors/ftp.astron.com/pub/tcsh/old/" "ftp://ftp.astron.com/pub/tcsh/" "ftp://ftp.astron.com/pub/tcsh/old/" "ftp://ftp.funet.fi/pub/unix/shells/tcsh/" "ftp://ftp.funet.fi/pub/unix/shells/tcsh/old/" ]; testpypi = [ "https://test.pypi.io/packages/source/" ]; ubuntu = [ "https://nl.archive.ubuntu.com/ubuntu/" "https://old-releases.ubuntu.com/ubuntu/" "https://mirrors.edge.kernel.org/ubuntu/" "http://de.archive.ubuntu.com/ubuntu/" "http://archive.ubuntu.com/ubuntu/" ]; userHook = null; xfce = [ "https://archive.xfce.org/" "https://mirror.netcologne.de/xfce/" "https://archive.be.xfce.org/xfce/" "https://archive.al-us.xfce.org/" "http://archive.se.xfce.org/xfce/" "http://mirror.perldude.de/archive.xfce.org/" "http://archive.be2.xfce.org/" "http://ftp.udc.es/xfce/" ]; xorg = [ "https://xorg.freedesktop.org/releases/" "https://ftp.x.org/archive/" ]; }; drvPath = <CODE>; fedora = «repeated»; gcc = «repeated»; gentoo = «repeated»; gnome = «repeated»; gnu = «repeated»; gnupg = «repeated»; hackage = «repeated»; hashedMirrors = «repeated»; ibiblioPubLinux = «repeated»; imagemagick = «repeated»; inputDerivation = <CODE>; kde = «repeated»; kernel = «repeated»; luarocks = «repeated»; maven = «repeated»; mesonFlags = [ ]; meta = <CODE>; mozilla = «repeated»; mysql = «repeated»; name = "mirrors-list"; nativeBuildInputs = [ ]; openbsd = «repeated»; opensuse = «repeated»; osdn = «repeated»; out = <CODE>; outPath = "/nix/store/s8x9hkx7pi84aybqlcrf82wjp703j036-mirrors-list"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; postgresql = «repeated»; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pypi = «repeated»; qt = «repeated»; roy = «repeated»; sageupstream = «repeated»; samba = «repeated»; savannah = «repeated»; sourceforge = «repeated»; stdenv = «repeated»; steamrt = «repeated»; strictDeps = true; system = "aarch64-linux"; tcsh = «repeated»; testpypi = «repeated»; type = "derivation"; ubuntu = «repeated»; userHook = null; xfce = «repeated»; xorg = «repeated»; }; name = "go1.16.linux-arm64.tar.gz"; nativeBuildInputs = [ { CXX = "c++"; CXXCPP = "c++ -E"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-manual" "--disable-ares" "--disable-ldap" "--disable-ldaps" "--with-ca-fallback" "--without-nghttp3" "--without-ngtcp2" "--without-librtmp" "--without-zstd" "--without-brotli" "--without-gnutls" "--without-libidn2" "--with-openssl=/nix/store/sn96fkzsnbnw6n0x5h1yli8pnphnajg7-openssl-3.0.7-dev" "--with-libssh2=/nix/store/lk2d3is1zi4drcf8abg91ywzz18z6g1n-libssh2-1.10.0-dev" "--without-wolfssl" "--with-gssapi=/nix/store/zyhxdfjjdvbqyidkparlp22gxx6brm49-libkrb5-1.20-dev" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { CXX = "c++"; CXXCPP = "c++ -E"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "curl-7.86.0"; nativeBuildInputs = [ { __ignoreNulls = true; addFlags = [ ]; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; baseBinName = "pkg-config"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; addFlags = [ ]; args = «repeated»; baseBinName = "pkg-config"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\n\necho $pkg-config > $out/nix-support/orig-pkg-config\n\nwrap pkg-config /nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh \"/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/bin/pkg-config\"\nln -s /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/share $out/share\n"; mesonFlags = [ ]; name = "pkg-config-wrapper-0.29.2"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "doc" ]; patches = [ ]; pname = "pkg-config-wrapper"; postFixup = "printWords /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2 > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/5zish7mvd9g4fkhaq01gq0c2db5z245w-pkg-config-0.29.2-man $man\nln -s /nix/store/d9ppm31x2skak2scm768yhcs8sawj8by-pkg-config-0.29.2-doc $doc\nsubstituteAll /nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/pkg-config-wrapper/setup-hook.sh ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "0.29.2"; wrapperName = "PKG_CONFIG_WRAPPER"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\n\necho $pkg-config > $out/nix-support/orig-pkg-config\n\nwrap pkg-config /nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh \"/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/bin/pkg-config\"\nln -s /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/share $out/share\n"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pkg-config-wrapper-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/xjpkpbs2mb4nqyqadbi44bwxa8gap8h9-pkg-config-wrapper-0.29.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pkg-config = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-internal-glib" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "doc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/pkg-config/requires-private.patch ]; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "pkg-config-0.29.2.tar.gz"; outputHash = "14fmwzki1rlz8bs2p810lk6jqdxsk966d8drgsjmi54cd00rrikg"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"; urls = [ "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "pkg-config-0.29.2.tar.gz"; out = «repeated»; outPath = "/nix/store/83haczzqmdmjjaf73y4fnk1zkcfai9zf-pkg-config-0.29.2.tar.gz"; outputHash = "14fmwzki1rlz8bs2p810lk6jqdxsk966d8drgsjmi54cd00rrikg"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"; urls = «repeated»; }; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; allowedRequisites = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; bootstrapTools = «repeated»; buildPlatform = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cc = «repeated»; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = «repeated»; drvAttrs = { allowedRequisites = «repeated»; args = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = «repeated»; initialPath = «repeated»; name = "stdenv-linux"; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = false; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <LAMBDA>; name = "stdenv-linux"; out = { all = <CODE>; allowedRequisites = «repeated»; args = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "stdenv-linux"; out = «repeated»; outPath = "/nix/store/arlb82anz496qkfxks2m9p9i86wr1p12-stdenv-linux"; outputName = "out"; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/arlb82anz496qkfxks2m9p9i86wr1p12-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; shellDryRun = <CODE>; shellPackage = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.29.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; description = "A tool that allows packages to find out information about other packages"; homepage = "http://pkg-config.freedesktop.org/wiki/"; insecure = <CODE>; license = «repeated»; name = <CODE>; outputsToInstall = <CODE>; platforms = «repeated»; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; outPath = "/nix/store/5zish7mvd9g4fkhaq01gq0c2db5z245w-pkg-config-0.29.2-man"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/d9ppm31x2skak2scm768yhcs8sawj8by-pkg-config-0.29.2-doc"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.29.2"; }; }; patches = [ ]; pkg-config = «repeated»; pname = "pkg-config-wrapper"; postFixup = "printWords /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2 > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/5zish7mvd9g4fkhaq01gq0c2db5z245w-pkg-config-0.29.2-man $man\nln -s /nix/store/d9ppm31x2skak2scm768yhcs8sawj8by-pkg-config-0.29.2-doc $doc\nsubstituteAll /nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "0.29.2"; wrapperName = "PKG_CONFIG_WRAPPER"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-de" "-Dcc=cc" "-Uinstallusrbinperl" "-Dinstallstyle=lib/perl5" "-Duseshrplib" "-Dlocincpth=/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include" "-Dloclibpth=/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib" "-Dusethreads" "-Dprefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" "-Dman1dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man1" "-Dman3dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man3" ]; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "perl-5.36.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/no-sys-dirs-5.31.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/http-tiny-verify-ssl-by-default.patch ]; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-hashes=all" "--enable-obsolete-api=glibc" "--disable-failure-tokens" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libxcrypt-4.4.33"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-de" "-Dcc=cc" "-Uinstallusrbinperl" "-Dinstallstyle=lib/perl5" "-Duseshrplib" "-Dlocincpth=/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include" "-Dloclibpth=/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib" "-Dusethreads" "-A clear:d_crypt_r" "-Dprefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" "-Dman1dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man1" "-Dman3dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man3" ]; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "perl-5.36.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/no-sys-dirs-5.31.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/http-tiny-verify-ssl-by-default.patch ]; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = [ "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "perl-5.36.0.tar.gz"; out = «repeated»; outPath = "/nix/store/jrq5yrwn0km82vnbs41xha3a41mszdka-perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.36.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/nlvxdian01vrfbwnzscmv39h6jdb3b3d-perl-5.36.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; pkgs = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.36.0"; withPackages = <CODE>; } ]; outputs = [ "out" "man" ]; patches = [ ]; pname = "libxcrypt"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "libxcrypt-4.4.33.tar.xz"; outputHash = "sha256-6HrPnGUsVzpHE9VYIVn5jzBdVu1fdUzmT1fUGU1rOm8="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/besser82/libxcrypt/releases/download/v4.4.33/libxcrypt-4.4.33.tar.xz"; urls = [ "https://github.com/besser82/libxcrypt/releases/download/v4.4.33/libxcrypt-4.4.33.tar.xz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "libxcrypt-4.4.33.tar.xz"; out = «repeated»; outPath = "/nix/store/13242jfkz71av0n4skwn0hzj209c0rwz-libxcrypt-4.4.33.tar.xz"; outputHash = "sha256-6HrPnGUsVzpHE9VYIVn5jzBdVu1fdUzmT1fUGU1rOm8="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/besser82/libxcrypt/releases/download/v4.4.33/libxcrypt-4.4.33.tar.xz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.4.33"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libxcrypt-4.4.33"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "libxcrypt"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "4.4.33"; } ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = [ "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "perl-5.36.0.tar.gz"; out = «repeated»; outPath = "/nix/store/jrq5yrwn0km82vnbs41xha3a41mszdka-perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://cpan.metacpan.org/src/5.0/perl-5.36.0.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.36.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; pkgs = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.36.0"; withPackages = <CODE>; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "man" "devdoc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/networking/curl/7.79.1-darwin-no-systemconfiguration.patch ]; pname = "curl"; postInstall = "moveToOutput bin/curl-config \"$dev\"\n\n# Install completions\nmake -C scripts install\nsed '/^dependency_libs/s|/nix/store/lk2d3is1zi4drcf8abg91ywzz18z6g1n-libssh2-1.10.0-dev|/nix/store/zwlhbg1qi8bmw40c9rdkb1x42l8h1i7l-libssh2-1.10.0|' -i \"$out\"/lib/*.la\n"; preCheck = "patchShebangs tests/\n"; preConfigure = "sed -e 's|/usr/bin|/no-such-path|g' -i.bak configure\nrm src/tool_hugehelp.c\n"; propagatedBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "shared" "--libdir=lib" "--openssldir=etc/ssl" "enable-ktls" "no-afalgeng" ]; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ "MANDIR=$(man)/share/man" "MANSUFFIX=ssl" ]; mesonFlags = [ ]; name = "openssl-3.0.7"; nativeBuildInputs = [ «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "man" "doc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/3.0/nix-ssl-cert-file.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/3.0/openssl-disable-kernel-detection.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/use-etc-ssl-certs.patch ]; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/sd1md45c0z7jsn1k22wms458yaxzr6qp-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "openssl-3.0.7.tar.gz"; outputHash = "sha256-gwSdBComDmlvYkBqxcCL9wb9hDg/lFzyG9YentlcOW4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.openssl.org/source/openssl-3.0.7.tar.gz"; urls = [ "https://www.openssl.org/source/openssl-3.0.7.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "openssl-3.0.7.tar.gz"; out = «repeated»; outPath = "/nix/store/y8svc7bs4ah28j9zg2z3lwyk12v8zkc8-openssl-3.0.7.tar.gz"; outputHash = "sha256-gwSdBComDmlvYkBqxcCL9wb9hDg/lFzyG9YentlcOW4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.openssl.org/source/openssl-3.0.7.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.0.7"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/sn96fkzsnbnw6n0x5h1yli8pnphnajg7-openssl-3.0.7-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/sd1md45c0z7jsn1k22wms458yaxzr6qp-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.0.7"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "ETCDIR=$(out)/etc" "BINDIR=$(out)/bin" "SBINDIR=$(out)/sbin" "SHAREDIR=$(out)/share/keyutils" "MANDIR=$(out)/share/man" "INCLUDEDIR=$(dev)/include" "LIBDIR=$(lib)/lib" "USRLIBDIR=$(lib)/lib" ]; makeFlags = [ ]; mesonFlags = [ ]; name = "keyutils-1.6.3"; nativeBuildInputs = [ ]; outputs = [ "out" "lib" "dev" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/keyutils/conf-symlink.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/keyutils/0001-Remove-unused-function-after_eq.patch ]; pname = "keyutils"; postPatch = "# https://github.com/archlinux/svntogit-packages/blob/packages/keyutils/trunk/reproducible.patch\nsubstituteInPlace Makefile \\\n  --replace \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(shell date -u +%F)\\\"\"' \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(date -ud \"@$SOURCE_DATE_EPOCH\" +%F)\\\"\"'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "keyutils-1.6.3.tar.gz"; outputHash = "sha256-ph1XBhNq5MBb1I+GGGvP29iN2L1RB+Phlckkz8Gzm7Q="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/keyutils.git/snapshot/keyutils-1.6.3.tar.gz"; urls = [ "https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/keyutils.git/snapshot/keyutils-1.6.3.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "keyutils-1.6.3.tar.gz"; out = «repeated»; outPath = "/nix/store/9n3d2g1pplp7bacghxkqb73z0fipgn2h-keyutils-1.6.3.tar.gz"; outputHash = "sha256-ph1XBhNq5MBb1I+GGGvP29iN2L1RB+Phlckkz8Gzm7Q="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/keyutils.git/snapshot/keyutils-1.6.3.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.6.3"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; lib = <CODE>; makeFlags = [ ]; mesonFlags = [ ]; meta = <CODE>; name = "keyutils-1.6.3"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/01929jba5b4w4k5y3y0zialfgzsjbg92-keyutils-1.6.3-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "keyutils"; postPatch = "# https://github.com/archlinux/svntogit-packages/blob/packages/keyutils/trunk/reproducible.patch\nsubstituteInPlace Makefile \\\n  --replace \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(shell date -u +%F)\\\"\"' \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(date -ud \"@$SOURCE_DATE_EPOCH\" +%F)\\\"\"'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.6.3"; } ]; buildPhase = "runHook preBuild\n\nMAKE=\"make -j $NIX_BUILD_CORES\"\nfor folder in $libFolders; do\n  $MAKE -C $folder\ndone\n\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--localstatedir=/var/lib" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\n\nMAKE=\"make -j $NIX_BUILD_CORES\"\nfor folder in $libFolders; do\n  $MAKE -C $folder\ndone\n\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p \"$out\"/{bin,sbin,lib/pkgconfig,share/{et,man/man1}} \\\n  \"$dev\"/include/{gssapi,gssrpc,kadm5,krb5}\nfor folder in $libFolders; do\n  $MAKE -C $folder install\ndone\n\nrunHook postInstall\n"; libFolders = [ "util" "include" "lib" "build-tools" ]; mesonFlags = [ ]; name = "libkrb5-1.20"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" "dev" ]; patches = [ ]; pname = "libkrb5"; postInstall = "moveToOutput bin/krb5-config \"$dev\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = "krb5-1.20/src"; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "krb5-1.20.tar.gz"; outputHash = "sha256-fgIr3TyFGDAXP5+qoAaiMKDg/a1MlT6Fv/S/DaA24S8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://kerberos.org/dist/krb5/1.20/krb5-1.20.tar.gz"; urls = [ "https://kerberos.org/dist/krb5/1.20/krb5-1.20.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "krb5-1.20.tar.gz"; out = «repeated»; outPath = "/nix/store/2w1l3yy5gv5pqji2vw5glbj4vrhfz9cg-krb5-1.20.tar.gz"; outputHash = "sha256-fgIr3TyFGDAXP5+qoAaiMKDg/a1MlT6Fv/S/DaA24S8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://kerberos.org/dist/krb5/1.20/krb5-1.20.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.20"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; implementation = "krb5"; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p \"$out\"/{bin,sbin,lib/pkgconfig,share/{et,man/man1}} \\\n  \"$dev\"/include/{gssapi,gssrpc,kadm5,krb5}\nfor folder in $libFolders; do\n  $MAKE -C $folder install\ndone\n\nrunHook postInstall\n"; libFolders = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "libkrb5-1.20"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/zyhxdfjjdvbqyidkparlp22gxx6brm49-libkrb5-1.20-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { implementation = "krb5"; tests = <CODE>; }; patches = [ ]; pname = "libkrb5"; postInstall = "moveToOutput bin/krb5-config \"$dev\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = "krb5-1.20/src"; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.20"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-examples" "--disable-app" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "nghttp2-1.49.0"; nativeBuildInputs = [ «repeated» ]; outputs = [ "bin" "out" "dev" "lib" ]; patches = [ ]; pname = "nghttp2"; postInstall = ""; preCheck = ""; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "nghttp2-1.49.0.tar.bz2"; outputHash = "sha256-LNTbfXX3FJQVMknL6UoJLaTG7NdCQPirGM9kTZ1l9u4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/nghttp2/nghttp2/releases/download/v1.49.0/nghttp2-1.49.0.tar.bz2"; urls = [ "https://github.com/nghttp2/nghttp2/releases/download/v1.49.0/nghttp2-1.49.0.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "nghttp2-1.49.0.tar.bz2"; out = «repeated»; outPath = "/nix/store/32n4a1wxizkmcy3sdblk5n4i6474swd9-nghttp2-1.49.0.tar.bz2"; outputHash = "sha256-LNTbfXX3FJQVMknL6UoJLaTG7NdCQPirGM9kTZ1l9u4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/nghttp2/nghttp2/releases/download/v1.49.0/nghttp2-1.49.0.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.49.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; lib = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "nghttp2-1.49.0"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/n4wka5jbyr0s2gak8x1mw419kn3iyghw-nghttp2-1.49.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "nghttp2"; postInstall = ""; preCheck = ""; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.49.0"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--static" "--shared" ]; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; drvAttrs = { NIX_CFLAGS_COMPILE = "-static-libgcc"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/h0r631awi89fg5qpwn1nilpn36chqbkx-bootstrap-tools/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; dontConfigure = false; dontDisableStatic = true; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ ]; makeFlags = [ "PREFIX=" "SHARED_MODE=1" ]; mesonFlags = [ ]; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; outputDoc = "dev"; outputs = [ "out" "dev" "static" ]; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = [ "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "zlib-1.2.13.tar.gz"; out = «repeated»; outPath = "/nix/store/3yhi12pgsmv2dz0x2ialvjw51lnv4jw8-zlib-1.2.13.tar.gz"; outputHash = "sha256-s6JN6XqP28g1uYMxaVAQMLiXcDG8tUs7OsE3QPhGqzA="; outputHashAlgo = ""; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://github.com/madler/zlib/releases/download/v1.2.13/zlib-1.2.13.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.2.13"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "zlib-1.2.13"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev"; outputDoc = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "zlib"; postInstall = "moveToOutput lib/libz.a \"$static\"\n"; postPatch = ""; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; static = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.2.13"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "libssh2-1.10.0"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/libssh2/openssl_add_support_for_libressl_3_5.patch ]; pname = "libssh2"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "libssh2-1.10.0.tar.gz"; outputHash = "sha256-LWTpDz3tOUuR06LndMogOkF59prr7gMAPlpvpiHkHVE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://www.libssh2.org/download/libssh2-1.10.0.tar.gz"; urls = [ "https://www.libssh2.org/download/libssh2-1.10.0.tar.gz" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "libssh2-1.10.0.tar.gz"; out = «repeated»; outPath = "/nix/store/7ifrkfd7m64v1c6lcg346hs2vkkdvi1x-libssh2-1.10.0.tar.gz"; outputHash = "sha256-LWTpDz3tOUuR06LndMogOkF59prr7gMAPlpvpiHkHVE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://www.libssh2.org/download/libssh2-1.10.0.tar.gz"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.10.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libssh2-1.10.0"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libssh2-1.10.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/zwlhbg1qi8bmw40c9rdkb1x42l8h1i7l-libssh2-1.10.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "libssh2"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.10.0"; }; outPath = "/nix/store/lk2d3is1zi4drcf8abg91ywzz18z6g1n-libssh2-1.10.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "libssh2"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.10.0"; } «repeated» ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { all = <CODE>; builder = "builtin:fetchurl"; drvAttrs = { builder = "builtin:fetchurl"; executable = false; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" ]; name = "curl-7.86.0.tar.bz2"; outputHash = "sha256-9cpp2wPuoX+ocFvfsan1jXakbJAQUYEJuzjzExN+Cig="; outputHashAlgo = "sha256"; outputHashMode = "flat"; preferLocalBuild = true; system = "builtin"; unpack = false; url = "https://curl.haxx.se/download/curl-7.86.0.tar.bz2"; urls = [ "https://curl.haxx.se/download/curl-7.86.0.tar.bz2" ]; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; name = "curl-7.86.0.tar.bz2"; out = «repeated»; outPath = "/nix/store/6ash7mk958rrc6h08rncj14rbsqr5arp-curl-7.86.0.tar.bz2"; outputHash = "sha256-9cpp2wPuoX+ocFvfsan1jXakbJAQUYEJuzjzExN+Cig="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; preferLocalBuild = true; system = "builtin"; type = "derivation"; unpack = false; url = "https://curl.haxx.se/download/curl-7.86.0.tar.bz2"; urls = «repeated»; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "7.86.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "curl-7.86.0"; nativeBuildInputs = «repeated»; openssl = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = <CODE>; outputName = "bin"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/sd1md45c0z7jsn1k22wms458yaxzr6qp-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.0.7"; }; opensslSupport = true; out = <CODE>; outPath = "/nix/store/mfnyd2c9sdvpkdjvw42f11fcd3l4nhx6-curl-7.86.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { openssl = «repeated»; opensslSupport = true; tests = <CODE>; }; patches = «repeated»; pname = "curl"; postInstall = "moveToOutput bin/curl-config \"$dev\"\n\n# Install completions\nmake -C scripts install\nsed '/^dependency_libs/s|/nix/store/lk2d3is1zi4drcf8abg91ywzz18z6g1n-libssh2-1.10.0-dev|/nix/store/zwlhbg1qi8bmw40c9rdkb1x42l8h1i7l-libssh2-1.10.0|' -i \"$out\"/lib/*.la\n"; preCheck = "patchShebangs tests/\n"; preConfigure = "sed -e 's|/usr/bin|/no-such-path|g' -i.bak configure\nrm src/tool_hugehelp.c\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "7.86.0"; } ]; nixpkgsVersion = "23.05"; outputHash = "3770f7eb22d05e25fbee8fb53c2a4e897da043eb83c69b9a14f8d98562cd8098"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://go.dev/dl/go1.16.linux-arm64.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "go1.16.linux-arm64.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/kl2bxphnph5862w9sh9x25nb7k301h0y-go1.16.linux-arm64.tar.gz"; outputHash = "3770f7eb22d05e25fbee8fb53c2a4e897da043eb83c69b9a14f8d98562cd8098"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://go.dev/dl/go1.16.linux-arm64.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://go.dev/dl/go1.16.linux-arm64.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "runHook preInstall\nmkdir -p $out/share/go $out/bin\ncp -r . $out/share/go\nln -s $out/share/go/bin/go $out/bin/go\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "go-1.16-linux-arm64-bootstrap"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/d11b7kr0i5vfjlhfscskpz4xn0ikggba-go-1.16-linux-arm64-bootstrap"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; } ]; doCheck = false; doInstallCheck = false; drvAttrs = { CC_FOR_TARGET = null; CGO_ENABLED = 1; CXX_FOR_TARGET = null; GO386 = "softfloat"; GOARCH = "arm64"; GOARM = ""; GOHOSTARCH = "arm64"; GOHOSTOS = "linux"; GOOS = "linux"; GOROOT_BOOTSTRAP = "/nix/store/d11b7kr0i5vfjlhfscskpz4xn0ikggba-go-1.16-linux-arm64-bootstrap/share/go"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\nexport GOCACHE=$TMPDIR/go-cache\n# this is compiled into the binary\nexport GOROOT_FINAL=$out/share/go\n\nexport PATH=$(pwd)/bin:$PATH\n\n\nulimit -a\n\npushd src\n./make.bash\npopd\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; installPhase = "runHook preInstall\nmkdir -p $GOROOT_FINAL\ncp -a bin pkg src lib misc api doc $GOROOT_FINAL\nln -s $GOROOT_FINAL/bin $out/bin\nrunHook postInstall\n"; mesonFlags = [ ]; name = "go-1.19.4"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/substitute/substitute-all.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; iana = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installPhase = "install -D -m0644 -t $out/etc services protocols\n"; mesonFlags = [ ]; name = "iana-etc-20221107"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "iana-etc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; executable = false; mesonFlags = [ ]; name = "setup-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" "text" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "export NIX_ETC_PROTOCOLS=@out@/etc/protocols\nexport NIX_ETC_SERVICES=@out@/etc/services\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = false; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "setup-hook"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/l69vd6l6zv3cq2fxxzali92n9ngkdrnq-setup-hook"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "export NIX_ETC_PROTOCOLS=@out@/etc/protocols\nexport NIX_ETC_SERVICES=@out@/etc/services\n"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» { NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; NIX_LDFLAGS = "-lbz2"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildFlags = [ "generic" "D_USE_BZ2=-DUSE_BZIP2" "L_BZ2=-lbz2" "LOCAL_UNZIP=-DNO_LCHMOD" ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { NIX_HARDENING_ENABLE = «repeated»; NIX_LDFLAGS = "-lbz2"; __ignoreNulls = true; args = «repeated»; buildFlags = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; hardeningDisable = [ "format" ]; installFlags = [ "prefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" ]; makefile = "unix/Makefile"; mesonFlags = [ ]; name = "unzip-6.0"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patchFlags = [ "-p1" "-F3" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2014-8139.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2014-8140.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2014-8141.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2014-9636.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2015-7696.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2015-7697.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2014-9913.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2016-9844.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/CVE-2018-18384.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/dont-hardcode-cc.patch { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2019-13232-1.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "04jzd6chg9fw4l5zadkfsrfm5llrd7vhd1dgdjjd29nrvkrjyn14"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/madler/unzip/commit/41beb477c5744bc396fa1162ee0c14218ec12213.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2019-13232-1.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/gql5b9d941nvdbwb4mb4k07bcn0wc78j-CVE-2019-13232-1.patch"; outputHash = "04jzd6chg9fw4l5zadkfsrfm5llrd7vhd1dgdjjd29nrvkrjyn14"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/madler/unzip/commit/41beb477c5744bc396fa1162ee0c14218ec12213.patch"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/madler/unzip/commit/41beb477c5744bc396fa1162ee0c14218ec12213.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2019-13232-2.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0iy2wcjyvzwrjk02iszwcpg85fkjxs1bvb9isvdiywszav4yjs32"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/madler/unzip/commit/47b3ceae397d21bf822bc2ac73052a4b1daf8e1c.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2019-13232-2.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/38wrqz2wpn530z87bvy7z3jjgap2pgp7-CVE-2019-13232-2.patch"; outputHash = "0iy2wcjyvzwrjk02iszwcpg85fkjxs1bvb9isvdiywszav4yjs32"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/madler/unzip/commit/47b3ceae397d21bf822bc2ac73052a4b1daf8e1c.patch"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/madler/unzip/commit/47b3ceae397d21bf822bc2ac73052a4b1daf8e1c.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2019-13232-3.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1jvs7dkdqs97qnsqc6hk088alhv8j4c638k65dbib9chh40jd7pf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/madler/unzip/commit/6d351831be705cc26d897db44f878a978f4138fc.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2019-13232-3.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/manbj76kwc2a86siqhkd7q43hnf3ky85-CVE-2019-13232-3.patch"; outputHash = "1jvs7dkdqs97qnsqc6hk088alhv8j4c638k65dbib9chh40jd7pf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/madler/unzip/commit/6d351831be705cc26d897db44f878a978f4138fc.patch"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/madler/unzip/commit/6d351831be705cc26d897db44f878a978f4138fc.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "06-initialize-the-symlink-flag.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1h00djdvgjhwfb60wl4qrxbyfsbbnn1qw6l2hkldnif4m8f8r1zj"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://sources.debian.org/data/main/u/unzip/6.0-26%2Bdeb11u1/debian/patches/06-initialize-the-symlink-flag.patch" "https://gist.github.com/veprbl/41261bb781571e2246ea42d3f37795f5/raw/d8533d8c6223150f76b0f31aec03e185fcde3579/06-initialize-the-symlink-flag.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "06-initialize-the-symlink-flag.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/kmi9k6axz96lmm2sn922w9shys0z0cz5-06-initialize-the-symlink-flag.patch"; outputHash = "1h00djdvgjhwfb60wl4qrxbyfsbbnn1qw6l2hkldnif4m8f8r1zj"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = ""; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = ""; urls = «repeated»; userHook = null; } ]; pname = "unzip"; preConfigure = "sed -i -e 's@CF=\"-O3 -Wall -I. -DASM_CRC $(LOC)\"@CF=\"-O3 -Wall -I. -DASM_CRC -DLARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 $(LOC)\"@' unix/Makefile\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/setup-hook.sh; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "unzip60.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0dxx11knh3nk95p2gg2ak777dd11pr7jx5das2g49l262scrcv83"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/infozip/unzip60.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "unzip60.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/0mr3jzmbc6ldg9bzmb0pm1iszwk19grx-unzip60.tar.gz"; outputHash = "0dxx11knh3nk95p2gg2ak777dd11pr7jx5das2g49l262scrcv83"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/infozip/unzip60.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/infozip/unzip60.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.0"; }; drvPath = <CODE>; hardeningDisable = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; makefile = "unix/Makefile"; mesonFlags = [ ]; meta = <CODE>; name = "unzip-6.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/mfh3dq4rsp60m1kh17ryxd5y27nkqwd8-unzip-6.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "unzip"; preConfigure = "sed -i -e 's@CF=\"-O3 -Wall -I. -DASM_CRC $(LOC)\"@CF=\"-O3 -Wall -I. -DASM_CRC -DLARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 $(LOC)\"@' unix/Makefile\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/archivers/unzip/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.0"; } { BASH_SHELL = "/bin/sh"; LOCALEDEF_FLAGS = [ "--little-endian" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/locales-builder.sh ]; buildInputs = [ { ARCH = "arm64"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "make mrproper $makeFlags\nmake headers $makeFlags\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "make headers_check $makeFlags\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { ARCH = "arm64"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "make mrproper $makeFlags\nmake headers $makeFlags\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "make headers_check $makeFlags\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; extraIncludeDirs = [ ]; hardeningDisable = [ ]; installPhase = "mkdir -p $out\ncp -r usr/include $out\nfind $out -type f ! -name '*.h' -delete\nmkdir -p $out/include/config\necho \"6.0-default\" > $out/include/config/kernel.release\n"; makeFlags = [ "SHELL=bash" "cc-version:=9999" "cc-fullversion:=999999" "HOSTCC:=$(CC_FOR_BUILD)" "HOSTCXX:=$(CXX_FOR_BUILD)" ]; mesonFlags = [ ]; name = "linux-headers-6.0"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-de" "-Dcc=cc" "-Uinstallusrbinperl" "-Dinstallstyle=lib/perl5" "-Duseshrplib" "-Dlocincpth=/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include" "-Dloclibpth=/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib" "-Dusethreads" "-Dprefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" "-Dman1dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man1" "-Dman3dir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man/man3" ]; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "perl-5.36.0"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/no-sys-dirs-5.31.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/http-tiny-verify-ssl-by-default.patch ]; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "perl-5.36.0.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/src/5.0/perl-5.36.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "perl-5.36.0.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/jrq5yrwn0km82vnbs41xha3a41mszdka-perl-5.36.0.tar.gz"; outputHash = "sha256-4mCFr4rDlvYq3YpTPDoOqMhJfYNvBok0esWr17ek4Ao="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/src/5.0/perl-5.36.0.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/src/5.0/perl-5.36.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.36.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = { available = <CODE>; broken = <CODE>; description = "The standard implementation of the Perl 5 programmming language"; homepage = "https://www.perl.org/"; insecure = <CODE>; license = { deprecated = false; free = true; fullName = "Artistic License 1.0"; redistributable = <CODE>; shortName = "artistic1"; spdxId = "Artistic-1.0"; url = <CODE>; }; maintainers = [ <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = «repeated»; position = <CODE>; priority = 6; unfree = <CODE>; unsupported = <CODE>; }; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; pkgs = { AWSSignature4 = <CODE>; ActionCircuitBreaker = <CODE>; ActionRetry = <CODE>; AlgorithmAnnotate = <CODE>; AlgorithmC3 = <CODE>; AlgorithmCheckDigits = <CODE>; AlgorithmDiff = <CODE>; AlgorithmLCSS = <CODE>; AlgorithmMerge = <CODE>; AlienBaseModuleBuild = <CODE>; AlienBuild = <CODE>; AlienGMP = <CODE>; AlienLibGumbo = <CODE>; AlienLibxml2 = <CODE>; AlienSDL = <CODE>; AlienTidyp = <CODE>; AlienWxWidgets = <CODE>; Alienm4 = <CODE>; Alienpatch = <CODE>; AltCryptRSABigInt = <CODE>; AnyEvent = <CODE>; AnyEventAIO = <CODE>; AnyEventBDB = <CODE>; AnyEventCacheDNS = <CODE>; AnyEventFastPing = <CODE>; AnyEventHTTP = <CODE>; AnyEventI3 = <CODE>; AnyEventIRC = <CODE>; AnyEventRabbitMQ = <CODE>; AnyMoose = <CODE>; AnyURIEscape = <CODE>; ApacheAuthCookie = <CODE>; ApacheDB = <CODE>; ApacheLogFormatCompiler = <CODE>; ApacheSession = <CODE>; ApacheTest = <CODE>; AppCLI = <CODE>; AppClusterSSH = <CODE>; AppCmd = <CODE>; AppConfig = <CODE>; AppFatPacker = <CODE>; AppMusicChordPro = <CODE>; AppPackager = <CODE>; AppSqitch = <CODE>; AppSt = <CODE>; Appcpanminus = <CODE>; Appcpm = <CODE>; Applify = <CODE>; Appperlbrew = <CODE>; Apprainbarf = <CODE>; ArchiveAnyLite = <CODE>; ArchiveCpio = <CODE>; ArchiveExtract = <CODE>; ArchiveTar = <CODE>; ArchiveTarWrapper = <CODE>; ArchiveZip = <CODE>; ArchiveZip_1_53 = <CODE>; ArrayCompare = <CODE>; ArrayDiff = <CODE>; ArrayFIFO = <CODE>; ArrayRefElem = <CODE>; AstroFITSHeader = <CODE>; AsyncPing = <CODE>; AttributeHandlers = null; AttributeParamsValidate = <CODE>; AudioFLACHeader = <CODE>; AudioScan = <CODE>; AuthenDecHpwd = <CODE>; AuthenHtpasswd = <CODE>; AuthenKrb5 = <CODE>; AuthenKrb5Admin = <CODE>; AuthenModAuthPubTkt = <CODE>; AuthenOATH = <CODE>; AuthenPassphrase = <CODE>; AuthenRadius = <CODE>; AuthenSASL = <CODE>; AuthenSASLSASLprep = <CODE>; AuthenSCRAM = <CODE>; AuthenSimple = <CODE>; AuthenSimplePasswd = <CODE>; AutoLoader = null; Autobox = <CODE>; Autodia = <CODE>; BC = <CODE>; BCOW = <CODE>; BDB = <CODE>; BFlags = <CODE>; BHooksEndOfScope = <CODE>; BHooksOPAnnotation = <CODE>; BHooksOPCheck = <CODE>; BKeywords = <CODE>; BSDResource = <CODE>; BSON = <CODE>; BSONXS = <CODE>; BUtils = <CODE>; BarcodeZBar = <CODE>; BeanstalkClient = <CODE>; BerkeleyDB = <CODE>; BioExtAlign = <CODE>; BioPerl = <CODE>; BitVector = <CODE>; BoostGeometryUtils = <CODE>; BotTraining = <CODE>; BotTrainingMegaHAL = <CODE>; BotTrainingStarCraft = <CODE>; BusinessHours = <CODE>; BusinessISBN = <CODE>; BusinessISBNData = <CODE>; BusinessISMN = <CODE>; BusinessISSN = <CODE>; BytesRandomSecure = <CODE>; BytesRandomSecureTiny = <CODE>; CDB_File = <CODE>; CDDBFile = <CODE>; CDDB_get = <CODE>; CGI = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildEnv = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash ./Configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; dontAddPrefix = true; dontAddStaticConfigureFlags = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; interpreter = <CODE>; libPrefix = "lib/perl5/site_perl"; man = <CODE>; mesonFlags = [ ]; meta = «repeated»; name = "perl-5.36.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0"; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pkgs = «repeated»; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "5.36.0"; withPackages = <CODE>; }; mesonFlags = [ ]; name = "perl5.36.0-Test-Deep-1.130"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Test-Deep"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Test-Deep-1.130.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-QGT0lPX2JYfQrlAcpDkQWCHuWEbGh9xlAyM/VTAKfFY="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/R/RJ/RJBS/Test-Deep-1.130.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Test-Deep-1.130.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/y4pipx0fny1m5n9vikpai92chhwsrngc-Test-Deep-1.130.tar.gz"; outputHash = "sha256-QGT0lPX2JYfQrlAcpDkQWCHuWEbGh9xlAyM/VTAKfFY="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/R/RJ/RJBS/Test-Deep-1.130.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/R/RJ/RJBS/Test-Deep-1.130.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.130"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Deep-1.130"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/92qdf8zbsqp1587zg2mljpabqv2yi9xv-perl5.36.0-Test-Deep-1.130"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Test-Deep"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.130"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Test-NoWarnings-1.04"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Test-NoWarnings"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Test-NoWarnings-1.04.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Y4pXZYyxGa8f5bFec9R8JUTc/vhK8Maxsul/CCAraGw="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/A/AD/ADAMK/Test-NoWarnings-1.04.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Test-NoWarnings-1.04.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/bgcz7bvwhnds797c8j57ncr8hkq9a8hh-Test-NoWarnings-1.04.tar.gz"; outputHash = "sha256-Y4pXZYyxGa8f5bFec9R8JUTc/vhK8Maxsul/CCAraGw="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/A/AD/ADAMK/Test-NoWarnings-1.04.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/A/AD/ADAMK/Test-NoWarnings-1.04.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.04"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-NoWarnings-1.04"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/v2gdqxcnsbv1alqxnf56ah6b3sdhsxw7-perl5.36.0-Test-NoWarnings-1.04"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Test-NoWarnings"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.04"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Test-Warn-0.36"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Test-Warn"; propagatedBuildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Sub-Uplevel-0.2800"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Sub-Uplevel"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Sub-Uplevel-0.2800.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-tPP2O4D2gKQhMy2IUd2+Wo5y/Kp01dHZjzyMxKPs4pM="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/D/DA/DAGOLDEN/Sub-Uplevel-0.2800.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Sub-Uplevel-0.2800.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pb3rva3nlvy30jc9gnlp5k8n41rrsf40-Sub-Uplevel-0.2800.tar.gz"; outputHash = "sha256-tPP2O4D2gKQhMy2IUd2+Wo5y/Kp01dHZjzyMxKPs4pM="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/D/DA/DAGOLDEN/Sub-Uplevel-0.2800.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/D/DA/DAGOLDEN/Sub-Uplevel-0.2800.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.2800"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Sub-Uplevel-0.2800"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/3nmk1960ydsg9149s9ph7mv5w2fx9pir-perl5.36.0-Sub-Uplevel-0.2800"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Sub-Uplevel"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.2800"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Test-Warn-0.36.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-7LyjRtN5zvjTwOSsDI6zsmE9c3/6rq5SJxw41788bNo="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/B/BI/BIGJ/Test-Warn-0.36.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Test-Warn-0.36.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/zkl1qyppiyx4d3j2n41jalpws7fqd2bw-Test-Warn-0.36.tar.gz"; outputHash = "sha256-7LyjRtN5zvjTwOSsDI6zsmE9c3/6rq5SJxw41788bNo="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/B/BI/BIGJ/Test-Warn-0.36.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/B/BI/BIGJ/Test-Warn-0.36.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.36"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Warn-0.36"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/igwydq0mh0g2zrafzfya3d4lfvv3gyhq-perl5.36.0-Test-Warn-0.36"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Test-Warn"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.36"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-CGI-4.51"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "CGI"; propagatedBuildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTML-Parser-3.75"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTML-Parser"; propagatedBuildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTML-Tagset-3.20"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTML-Tagset"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTML-Tagset-3.20.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-rbF9rJ42zQEfUkOIHJc5QX/RAvznYPjeTpvkxxMRCOI="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/P/PE/PETDANCE/HTML-Tagset-3.20.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTML-Tagset-3.20.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/gcn2flkan61yl99hzh7ds4jf25jdxdlh-HTML-Tagset-3.20.tar.gz"; outputHash = "sha256-rbF9rJ42zQEfUkOIHJc5QX/RAvznYPjeTpvkxxMRCOI="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/P/PE/PETDANCE/HTML-Tagset-3.20.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/P/PE/PETDANCE/HTML-Tagset-3.20.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.20"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTML-Tagset-3.20"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/xbjgi4lcq5ayq9xbajxyh0dzsbavbp90-perl5.36.0-HTML-Tagset-3.20"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTML-Tagset"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.20"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-CPAN-Meta-Check-0.014"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "CPAN-Meta-Check"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CPAN-Meta-Check-0.014.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-KKBXK/wcBnjZzn2kjPUhCXraIw+W6z0GP8uuHP5qNR8="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEONT/CPAN-Meta-Check-0.014.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CPAN-Meta-Check-0.014.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/2n4mggkqv4jhc5bp5mis1mzss4q1z8bw-CPAN-Meta-Check-0.014.tar.gz"; outputHash = "sha256-KKBXK/wcBnjZzn2kjPUhCXraIw+W6z0GP8uuHP5qNR8="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEONT/CPAN-Meta-Check-0.014.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEONT/CPAN-Meta-Check-0.014.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.014"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-CPAN-Meta-Check-0.014"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/dkp0fs8clrfsvv36q78vvirh1c9i79n3-perl5.36.0-CPAN-Meta-Check-0.014"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "CPAN-Meta-Check"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.014"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Capture-Tiny-0.48"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Capture-Tiny"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Capture-Tiny-0.48.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-bCMRPoe605MwjJCiBwE+UF9lknRzZjjYx5usnGfMPhk="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/D/DA/DAGOLDEN/Capture-Tiny-0.48.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Capture-Tiny-0.48.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/z3jdxfwink3jaigp5ygpa628y57gk8xf-Capture-Tiny-0.48.tar.gz"; outputHash = "sha256-bCMRPoe605MwjJCiBwE+UF9lknRzZjjYx5usnGfMPhk="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/D/DA/DAGOLDEN/Capture-Tiny-0.48.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/D/DA/DAGOLDEN/Capture-Tiny-0.48.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.48"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Capture-Tiny-0.48"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/09gylkyq18css05aq8yh4bl2lpldxsl7-perl5.36.0-Capture-Tiny-0.48"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Capture-Tiny"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.48"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Try-Tiny-0.30"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Try-Tiny"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Try-Tiny-0.30.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-2lvQ1ckDUZu/ELuboMt7ysBWOIK8/kUDruP7FD7d72s="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/E/ET/ETHER/Try-Tiny-0.30.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Try-Tiny-0.30.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/1i0mn5cj69ajnykvzn558jmii56n09i1-Try-Tiny-0.30.tar.gz"; outputHash = "sha256-2lvQ1ckDUZu/ELuboMt7ysBWOIK8/kUDruP7FD7d72s="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/E/ET/ETHER/Try-Tiny-0.30.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/E/ET/ETHER/Try-Tiny-0.30.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.30"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Try-Tiny-0.30"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/q4hnkp3aqsxscl58vlsmbrzn8yzbn5hp-perl5.36.0-Try-Tiny-0.30"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Try-Tiny"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.30"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTTP-Message-6.26"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTTP-Message"; propagatedBuildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Encode-Locale-1.05"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Encode-Locale"; preCheck = null; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Encode-Locale-1.05.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-F2+gJ3H1QqTvsdvCpMko6PQ5G/QHhHO9YEDY8RrbDsE="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/G/GA/GAAS/Encode-Locale-1.05.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Encode-Locale-1.05.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/8bmm056gz61ksirlp1r8n4644k0psng3-Encode-Locale-1.05.tar.gz"; outputHash = "sha256-F2+gJ3H1QqTvsdvCpMko6PQ5G/QHhHO9YEDY8RrbDsE="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/G/GA/GAAS/Encode-Locale-1.05.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/G/GA/GAAS/Encode-Locale-1.05.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.05"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Encode-Locale-1.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/1jsw9q5w62hckaijkgbnxs7xamzqy33n-perl5.36.0-Encode-Locale-1.05"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Encode-Locale"; preCheck = null; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.05"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTTP-Date-6.05"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTTP-Date"; propagatedBuildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-TimeDate-2.33"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "TimeDate"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "TimeDate-2.33.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-wLacSwOd5vUBsNnxPsWMhrBAwffpsn7ySWUcFD1gXrI="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/A/AT/ATOOMIC/TimeDate-2.33.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "TimeDate-2.33.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/2ja1bnisniy7q0nkf49myfc48bvgi092-TimeDate-2.33.tar.gz"; outputHash = "sha256-wLacSwOd5vUBsNnxPsWMhrBAwffpsn7ySWUcFD1gXrI="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/A/AT/ATOOMIC/TimeDate-2.33.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/A/AT/ATOOMIC/TimeDate-2.33.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.33"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-TimeDate-2.33"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/9jr38rmgh7q9lscxa96ivlry5c57pwm3-perl5.36.0-TimeDate-2.33"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "TimeDate"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.33"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Date-6.05.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Nl1ilN+9N+vFHe+LZbget5s5NOy8laLsLU2Cfv5qkis="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Date-6.05.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Date-6.05.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/yz4rvpjpjhlnnxaznbfxbwhv5ykr69sk-HTTP-Date-6.05.tar.gz"; outputHash = "sha256-Nl1ilN+9N+vFHe+LZbget5s5NOy8laLsLU2Cfv5qkis="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Date-6.05.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Date-6.05.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.05"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Date-6.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/zmsybk62xaw5zfwp11v156mjhg3x8zmm-perl5.36.0-HTTP-Date-6.05"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Date"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.05"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-IO-HTML-1.004"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "IO-HTML"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "IO-HTML-1.004.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-yHst9ZRju/LDlZZ3PftcA73g9+EFGvM5+WP1jBy9i/U="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/C/CJ/CJM/IO-HTML-1.004.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "IO-HTML-1.004.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/qphvg34d2jjw6q9r7nxb52yfr5qz5rg9-IO-HTML-1.004.tar.gz"; outputHash = "sha256-yHst9ZRju/LDlZZ3PftcA73g9+EFGvM5+WP1jBy9i/U="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/C/CJ/CJM/IO-HTML-1.004.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/C/CJ/CJM/IO-HTML-1.004.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.004"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-IO-HTML-1.004"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/g489z1i3gxda135xh2fh2i4jkaqq55vi-perl5.36.0-IO-HTML-1.004"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "IO-HTML"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.004"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Test-Fatal-0.016"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Test-Fatal"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Test-Fatal-0.016.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-coPUMPK6IDC4zZea4wOdPxsuw93hoRymrgn5kqZveI8="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/R/RJ/RJBS/Test-Fatal-0.016.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Test-Fatal-0.016.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/gm38zqsr129l5mis94chiyd5w9k3ax1s-Test-Fatal-0.016.tar.gz"; outputHash = "sha256-coPUMPK6IDC4zZea4wOdPxsuw93hoRymrgn5kqZveI8="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/R/RJ/RJBS/Test-Fatal-0.016.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/R/RJ/RJBS/Test-Fatal-0.016.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.016"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Fatal-0.016"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/g828l6ks4amp2vd35ncv50qiynb1fjyy-perl5.36.0-Test-Fatal-0.016"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Test-Fatal"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.016"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-LWP-MediaTypes-6.04"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "LWP-MediaTypes"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "LWP-MediaTypes-6.04.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-jxvKEtqxahwqfAOknF5YzOQab+yVGfCq37qNrZl5Gdk="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/LWP-MediaTypes-6.04.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "LWP-MediaTypes-6.04.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/vscb0ah7mbshlsgcdwp5h502xf533dyb-LWP-MediaTypes-6.04.tar.gz"; outputHash = "sha256-jxvKEtqxahwqfAOknF5YzOQab+yVGfCq37qNrZl5Gdk="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/LWP-MediaTypes-6.04.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/LWP-MediaTypes-6.04.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.04"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-LWP-MediaTypes-6.04"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/wr63gjkgwn9bv3y06v44lcb1krknr4ni-perl5.36.0-LWP-MediaTypes-6.04"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "LWP-MediaTypes"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.04"; } { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Test-Needs-0.002006"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Test-Needs"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Test-Needs-0.002006.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-d/n/8MlsXgnzTQQWs1M8Mxn3zQux9/6PgHKtWfQz8OU="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/H/HA/HAARG/Test-Needs-0.002006.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Test-Needs-0.002006.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/75r5yqv2vknqq3ij5q44ihixaygagaqc-Test-Needs-0.002006.tar.gz"; outputHash = "sha256-d/n/8MlsXgnzTQQWs1M8Mxn3zQux9/6PgHKtWfQz8OU="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/H/HA/HAARG/Test-Needs-0.002006.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/H/HA/HAARG/Test-Needs-0.002006.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.002006"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Needs-0.002006"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/fw3lly7h8dlzw6ywfsd6cas351wjlrf7-perl5.36.0-Test-Needs-0.002006"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Test-Needs"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.002006"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-URI-5.05"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "URI"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "URI-5.05.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-pcET0tAnBtn73KaobykMWwWy+Gg21Of+FEfwYyYbeew="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/URI-5.05.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "URI-5.05.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/14qp8mxvd64smibrs0pnplpi81m7q1hr-URI-5.05.tar.gz"; outputHash = "sha256-pcET0tAnBtn73KaobykMWwWy+Gg21Of+FEfwYyYbeew="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/URI-5.05.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/URI-5.05.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "5.05"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-URI-5.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "URI"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.05"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Message-6.26.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-bObDWd51w7uGaWo5AYm0heyT4//FUya20ET6kA8XJeE="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Message-6.26.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Message-6.26.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/iif3p3lr25vqc091b8ib88s5gmx6vib2-HTTP-Message-6.26.tar.gz"; outputHash = "sha256-bObDWd51w7uGaWo5AYm0heyT4//FUya20ET6kA8XJeE="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Message-6.26.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Message-6.26.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.26"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Message-6.26"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/l33yyd86m2anyjp4142jmkbqk8jjl7nr-perl5.36.0-HTTP-Message-6.26"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Message"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.26"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTML-Parser-3.75.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-rGteJajfevVIhSAekcRfuatnRMCM7cGjj8x9ldIRk6k="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/C/CA/CAPOEIRAB/HTML-Parser-3.75.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTML-Parser-3.75.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/b6dnpaj9rmgzrpc5mh69iw1y7wy7s1ww-HTML-Parser-3.75.tar.gz"; outputHash = "sha256-rGteJajfevVIhSAekcRfuatnRMCM7cGjj8x9ldIRk6k="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/C/CA/CAPOEIRAB/HTML-Parser-3.75.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/C/CA/CAPOEIRAB/HTML-Parser-3.75.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.75"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTML-Parser-3.75"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/z93672507ghc7r95q0n7dvib1cw65ncy-perl5.36.0-HTML-Parser-3.75"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTML-Parser"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.75"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CGI-4.51.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-C9IV5wEvn1Lmp9P+aV7jDvlZ15bo5TRy+g7YxT+6YAo="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEEJO/CGI-4.51.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CGI-4.51.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4x8lji5g56majd8adnf3cd4s1rnkfn9y-CGI-4.51.tar.gz"; outputHash = "sha256-C9IV5wEvn1Lmp9P+aV7jDvlZ15bo5TRy+g7YxT+6YAo="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEEJO/CGI-4.51.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEEJO/CGI-4.51.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.51"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-CGI-4.51"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-CGI-4.51"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/kqcwzb42b2wphynd92f37ifj5h5nigrq-perl5.36.0-CGI-4.51"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "CGI"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "4.51"; }; outPath = "/nix/store/kqcwzb42b2wphynd92f37ifj5h5nigrq-perl5.36.0-CGI-4.51"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "CGI"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "4.51"; }; CGICompile = <CODE>; CGICookieXS = <CODE>; CGIEmulatePSGI = <CODE>; CGIExpand = <CODE>; CGIFast = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-CGI-Fast-2.15"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "CGI-Fast"; propagatedBuildInputs = [ «repeated» { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-FCGI-0.79"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "FCGI"; postPatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "FCGI-0.79.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-jPpOGxT7jVrKoiztZyxq9owKjiXcKpaXoO1/Sk77NOQ="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/E/ET/ETHER/FCGI-0.79.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "FCGI-0.79.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5w00my9xpw3rxdrxfk76mcjznp7dxf76-FCGI-0.79.tar.gz"; outputHash = "sha256-jPpOGxT7jVrKoiztZyxq9owKjiXcKpaXoO1/Sk77NOQ="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/E/ET/ETHER/FCGI-0.79.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/E/ET/ETHER/FCGI-0.79.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.79"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-FCGI-0.79"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/c8wqn51f7biw78hz1jh0brhq7hpg45n5-perl5.36.0-FCGI-0.79"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "FCGI"; postPatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.79"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CGI-Fast-2.15.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-5TQt89xZPt+3JMev6FCxoO51P01zP1GT4DewRjPf7s4="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEEJO/CGI-Fast-2.15.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CGI-Fast-2.15.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/a7wvnrcdbj7v8ma1jqv61ck3ycz4aycb-CGI-Fast-2.15.tar.gz"; outputHash = "sha256-5TQt89xZPt+3JMev6FCxoO51P01zP1GT4DewRjPf7s4="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEEJO/CGI-Fast-2.15.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEEJO/CGI-Fast-2.15.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.15"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-CGI-Fast-2.15"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/74ca4ky8imig3p370w80h12hm2fw59c6-perl5.36.0-CGI-Fast-2.15"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "CGI-Fast"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.15"; }; CGIFormBuilder = <CODE>; CGIMinimal = <CODE>; CGIPSGI = <CODE>; CGISession = <CODE>; CGISimple = <CODE>; CGIStruct = <CODE>; CHI = <CODE>; CLASS = <CODE>; CLDRNumber = <CODE>; CLIHelpers = <CODE>; CPAN = <CODE>; CPAN02PackagesSearch = <CODE>; CPANChanges = <CODE>; CPANChecksums = <CODE>; CPANCommonIndex = <CODE>; CPANDistnameInfo = <CODE>; CPANMeta = null; CPANMetaCheck = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-CPAN-Meta-Check-0.014"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "CPAN-Meta-Check"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.014"; }; CPANMetaRequirements = null; CPANMetaYAML = null; CPANMini = <CODE>; CPANPLUS = <CODE>; CPANPerlReleases = <CODE>; CPANUploader = <CODE>; CSSDOM = <CODE>; CSSMinifier = <CODE>; CSSMinifierXS = <CODE>; CSSSquish = <CODE>; CacheCache = <CODE>; CacheFastMmap = <CODE>; CacheKyotoTycoon = <CODE>; CacheMemcached = <CODE>; CacheMemcachedFast = <CODE>; CacheMemory = <CODE>; CacheSimpleTimedExpiry = <CODE>; Cairo = <CODE>; CairoGObject = <CODE>; CallContext = <CODE>; CanaryStability = <CODE>; CaptchaReCAPTCHA = <CODE>; CaptureTiny = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Capture-Tiny-0.48"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Capture-Tiny"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.48"; }; Carp = null; CarpAlways = <CODE>; CarpAssert = <CODE>; CarpAssertMore = <CODE>; CarpClan = <CODE>; Carton = <CODE>; CatalystActionREST = <CODE>; CatalystActionRenderView = <CODE>; CatalystAuthenticationCredentialHTTP = <CODE>; CatalystAuthenticationStoreDBIxClass = <CODE>; CatalystAuthenticationStoreHtpasswd = <CODE>; CatalystAuthenticationStoreLDAP = <CODE>; CatalystComponentInstancePerContext = <CODE>; CatalystControllerHTMLFormFu = <CODE>; CatalystControllerPOD = <CODE>; CatalystDevel = <CODE>; CatalystDispatchTypeRegex = <CODE>; CatalystManual = <CODE>; CatalystModelDBICSchema = <CODE>; CatalystPluginAccessLog = <CODE>; CatalystPluginAuthentication = <CODE>; CatalystPluginAuthorizationACL = <CODE>; CatalystPluginAuthorizationRoles = <CODE>; CatalystPluginCache = <CODE>; CatalystPluginCacheHTTP = <CODE>; CatalystPluginCaptcha = <CODE>; CatalystPluginConfigLoader = <CODE>; CatalystPluginFormValidator = <CODE>; CatalystPluginFormValidatorSimple = <CODE>; CatalystPluginLogHandler = <CODE>; CatalystPluginPrometheusTiny = <CODE>; CatalystPluginSession = <CODE>; CatalystPluginSessionDynamicExpiry = <CODE>; CatalystPluginSessionStateCookie = <CODE>; CatalystPluginSessionStoreFastMmap = <CODE>; CatalystPluginSessionStoreFile = <CODE>; CatalystPluginSmartURI = <CODE>; CatalystPluginStackTrace = <CODE>; CatalystPluginStaticSimple = <CODE>; CatalystPluginStatusMessage = <CODE>; CatalystPluginUnicodeEncoding = <CODE>; CatalystRuntime = <CODE>; CatalystTraitForRequestProxyBase = <CODE>; CatalystViewCSV = <CODE>; CatalystViewDownload = <CODE>; CatalystViewJSON = <CODE>; CatalystViewTT = <CODE>; CatalystXComponentTraits = <CODE>; CatalystXRoleApplicator = <CODE>; CatalystXScriptServerStarman = <CODE>; Catmandu = <CODE>; Chart = <CODE>; CiscoIPPhone = <CODE>; ClassAccessor = <CODE>; ClassAccessorChained = <CODE>; ClassAccessorFast = <CODE>; ClassAccessorGrouped = <CODE>; ClassAccessorLite = <CODE>; ClassAutouse = <CODE>; ClassBase = <CODE>; ClassC3 = <CODE>; ClassC3AdoptNEXT = <CODE>; ClassC3Componentised = <CODE>; ClassClassgenclassgen = <CODE>; ClassContainer = <CODE>; ClassDataAccessor = <CODE>; ClassDataInheritable = <CODE>; ClassEHierarchy = <CODE>; ClassFactory = <CODE>; ClassFactoryUtil = <CODE>; ClassGomor = <CODE>; ClassISA = <CODE>; ClassInspector = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Class-Inspector-1.36"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Class-Inspector"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Class-Inspector-1.36.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-zCldI6RyaHwkSJ1YIm6tI7n9wliOUi8LXwdHdBcAaU4="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/P/PL/PLICEASE/Class-Inspector-1.36.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Class-Inspector-1.36.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9ddis9ghpvlbw4sf6dhnfk14a9j15psc-Class-Inspector-1.36.tar.gz"; outputHash = "sha256-zCldI6RyaHwkSJ1YIm6tI7n9wliOUi8LXwdHdBcAaU4="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/P/PL/PLICEASE/Class-Inspector-1.36.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/P/PL/PLICEASE/Class-Inspector-1.36.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.36"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Class-Inspector-1.36"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Class-Inspector-1.36"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/vrkrhp09w7hcb1m1fwlrxwhfrv5v6frn-perl5.36.0-Class-Inspector-1.36"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Class-Inspector"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.36"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Class-Inspector"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.36"; }; ClassIterator = <CODE>; ClassLoad = <CODE>; ClassLoadXS = <CODE>; ClassLoader = <CODE>; ClassMOP = <CODE>; ClassMakeMethods = <CODE>; ClassMethodMaker = <CODE>; ClassMethodModifiers = <CODE>; ClassMix = <CODE>; ClassObservable = <CODE>; ClassReturnValue = <CODE>; ClassSingleton = <CODE>; ClassStd = <CODE>; ClassStdFast = <CODE>; ClassThrowable = <CODE>; ClassTiny = <CODE>; ClassUnload = <CODE>; ClassVirtual = <CODE>; ClassXSAccessor = <CODE>; Clipboard = <CODE>; Clone = <CODE>; CloneChoose = <CODE>; ClonePP = <CODE>; CodeTidyAll = <CODE>; CodeTidyAllPluginPerlAlignMooseAttributes = <CODE>; ColorLibrary = <CODE>; CommandRunner = <CODE>; CommonSense = <CODE>; CompressBzip2 = <CODE>; CompressLZF = <CODE>; CompressRawBzip2 = <CODE>; CompressRawLzma = <CODE>; CompressRawZlib = <CODE>; CompressUnLZMA = <CODE>; CompressZlib = <CODE>; ConfigAny = <CODE>; ConfigAutoConf = <CODE>; ConfigGeneral = <CODE>; ConfigGitLike = <CODE>; ConfigGrammar = <CODE>; ConfigINI = <CODE>; ConfigIdentity = <CODE>; ConfigIniFiles = <CODE>; ConfigMVP = <CODE>; ConfigMVPReaderINI = <CODE>; ConfigMerge = <CODE>; ConfigOnion = <CODE>; ConfigProperties = <CODE>; ConfigSimple = <CODE>; ConfigStd = <CODE>; ConfigTiny = <CODE>; ConfigVersioned = <CODE>; Connector = <CODE>; ConstFast = <CODE>; ContextPreserve = <CODE>; ConvertASCIIArmour = <CODE>; ConvertASN1 = <CODE>; ConvertBase32 = <CODE>; ConvertBencode = <CODE>; ConvertColor = <CODE>; ConvertUU = <CODE>; CookieBaker = <CODE>; CookieXS = <CODE>; Coro = <CODE>; CoroEV = <CODE>; Corona = <CODE>; CpanelJSONXS = <CODE>; CryptArgon2 = <CODE>; CryptBlowfish = <CODE>; CryptCAST5_PP = <CODE>; CryptCBC = <CODE>; CryptCurve25519 = <CODE>; CryptDES = <CODE>; CryptDES_EDE3 = <CODE>; CryptDH = <CODE>; CryptDHGMP = <CODE>; CryptDSA = <CODE>; CryptECB = <CODE>; CryptEd25519 = <CODE>; CryptEksblowfish = <CODE>; CryptFormat = <CODE>; CryptIDEA = <CODE>; CryptJWT = <CODE>; CryptMySQL = <CODE>; CryptOpenPGP = <CODE>; CryptOpenSSLAES = <CODE>; CryptOpenSSLBignum = <CODE>; CryptOpenSSLGuess = <CODE>; CryptOpenSSLRSA = <CODE>; CryptOpenSSLRandom = <CODE>; CryptOpenSSLX509 = <CODE>; CryptPBKDF2 = <CODE>; CryptPKCS10 = <CODE>; CryptPassphrase = <CODE>; CryptPassphraseArgon2 = <CODE>; CryptPassphraseBcrypt = <CODE>; CryptPasswdMD5 = <CODE>; CryptPerl = <CODE>; CryptRC4 = <CODE>; CryptRIPEMD160 = <CODE>; CryptRandPasswd = <CODE>; CryptRandom = <CODE>; CryptRandomSeed = <CODE>; CryptRandomSource = <CODE>; CryptRandomTESHA2 = <CODE>; CryptRijndael = <CODE>; CryptSSLeay = <CODE>; CryptScryptKDF = <CODE>; CryptSmbHash = <CODE>; CryptSodium = <CODE>; CryptTwofish = <CODE>; CryptURandom = <CODE>; CryptUnixCryptXS = <CODE>; CryptX = <CODE>; CryptX509 = <CODE>; Curses = <CODE>; CursesUI = <CODE>; CursesUIGrid = <CODE>; CwdGuard = <CODE>; DBDCSV = <CODE>; DBDMariaDB = <CODE>; DBDMock = <CODE>; DBDOracle = <CODE>; DBDPg = <CODE>; DBDSQLite = <CODE>; DBDmysql = <CODE>; DBDsybase = <CODE>; DBFile = <CODE>; DBI = <CODE>; DBICxTestDatabase = <CODE>; DBIxClass = <CODE>; DBIxClassCandy = <CODE>; DBIxClassCursorCached = <CODE>; DBIxClassDynamicDefault = <CODE>; DBIxClassHTMLWidget = <CODE>; DBIxClassHelpers = <CODE>; DBIxClassInflateColumnSerializer = <CODE>; DBIxClassIntrospectableM2M = <CODE>; DBIxClassSchemaLoader = <CODE>; DBIxConnector = <CODE>; DBIxDBSchema = <CODE>; DBIxIntrospector = <CODE>; DBIxSearchBuilder = <CODE>; DBIxSimple = <CODE>; DBMDeep = <CODE>; DataBinary = <CODE>; DataBuffer = <CODE>; DataClone = <CODE>; DataCompare = <CODE>; DataDump = <CODE>; DataDumper = null; DataDumperAutoEncode = <CODE>; DataDumperConcise = <CODE>; DataEntropy = <CODE>; DataFloat = <CODE>; DataFormValidator = <CODE>; DataGUID = <CODE>; DataHexDump = <CODE>; DataHexdumper = <CODE>; DataHierarchy = <CODE>; DataICal = <CODE>; DataIEEE754 = <CODE>; DataInteger = <CODE>; DataMessagePack = <CODE>; DataOptList = <CODE>; DataPage = <CODE>; DataPagePageset = <CODE>; DataPassword = <CODE>; DataPerl = <CODE>; DataPrinter = <CODE>; DataRandom = <CODE>; DataSExpression = <CODE>; DataSection = <CODE>; DataSectionSimple = <CODE>; DataSerializer = <CODE>; DataSpreadPagination = <CODE>; DataStag = <CODE>; DataStreamBulk = <CODE>; DataStructureUtil = <CODE>; DataTaxi = <CODE>; DataULID = <CODE>; DataURIEncode = <CODE>; DataUUID = <CODE>; DataUUIDMT = <CODE>; DataUniqid = <CODE>; DataUtil = <CODE>; DataValidateDomain = <CODE>; DataValidateIP = <CODE>; DataValidateURI = <CODE>; DataVisitor = <CODE>; DateCalc = <CODE>; DateExtract = <CODE>; DateManip = <CODE>; DateSimple = <CODE>; DateTime = <CODE>; DateTimeCalendarJulian = <CODE>; DateTimeEventICal = <CODE>; DateTimeEventRecurrence = <CODE>; DateTimeFormatBuilder = <CODE>; DateTimeFormatDateParse = <CODE>; DateTimeFormatFlexible = <CODE>; DateTimeFormatHTTP = <CODE>; DateTimeFormatICal = <CODE>; DateTimeFormatISO8601 = <CODE>; DateTimeFormatMail = <CODE>; DateTimeFormatMySQL = <CODE>; DateTimeFormatNatural = <CODE>; DateTimeFormatPg = <CODE>; DateTimeFormatRFC3339 = <CODE>; DateTimeFormatSQLite = <CODE>; DateTimeFormatStrptime = <CODE>; DateTimeFormatW3CDTF = <CODE>; DateTimeLocale = <CODE>; DateTimeSet = <CODE>; DateTimeTimeZone = <CODE>; DateTimeXEasy = <CODE>; DebugShowStuff = <CODE>; Deliantra = <CODE>; DevelCaller = <CODE>; DevelCamelcadedb = <CODE>; DevelCheckBin = <CODE>; DevelCheckCompiler = <CODE>; DevelCheckOS = <CODE>; DevelChecklib = <CODE>; DevelCycle = <CODE>; DevelDeclare = <CODE>; DevelFindPerl = <CODE>; DevelGlobalDestruction = <CODE>; DevelGlobalPhase = <CODE>; DevelHide = <CODE>; DevelLeak = <CODE>; DevelNYTProf = <CODE>; DevelOverloadInfo = <CODE>; DevelPPPort = <CODE>; DevelPartialDump = <CODE>; DevelPatchPerl = <CODE>; DevelRefcount = <CODE>; DevelSelfStubber = null; DevelSize = <CODE>; DevelStackTrace = <CODE>; DevelStackTraceAsHTML = <CODE>; DevelSymdump = <CODE>; DevelTrace = <CODE>; DeviceMAC = <CODE>; DeviceOUI = <CODE>; DeviceSerialPort = <CODE>; Digest = null; DigestCRC = <CODE>; DigestHMAC = <CODE>; DigestHMAC_SHA1 = <CODE>; DigestJHash = <CODE>; DigestMD2 = <CODE>; DigestMD4 = <CODE>; DigestMD5 = null; DigestMD5File = <CODE>; DigestPerlMD5 = <CODE>; DigestSHA = null; DigestSHA1 = <CODE>; DigestSHA3 = <CODE>; DigestSRI = <CODE>; DirManifest = <CODE>; DirSelf = <CODE>; DispatchClass = <CODE>; DistCheckConflicts = <CODE>; DistZilla = <CODE>; DistZillaPluginBundleTestingMania = <CODE>; DistZillaPluginCheckChangeLog = <CODE>; DistZillaPluginMojibakeTests = <CODE>; DistZillaPluginNoTabsTests = <CODE>; DistZillaPluginPodWeaver = <CODE>; DistZillaPluginReadmeAnyFromPod = <CODE>; DistZillaPluginReadmeMarkdownFromPod = <CODE>; DistZillaPluginTestCPANChanges = <CODE>; DistZillaPluginTestCPANMetaJSON = <CODE>; DistZillaPluginTestCompile = <CODE>; DistZillaPluginTestDistManifest = <CODE>; DistZillaPluginTestEOL = <CODE>; DistZillaPluginTestKwalitee = <CODE>; DistZillaPluginTestMinimumVersion = <CODE>; DistZillaPluginTestNoTabs = <CODE>; DistZillaPluginTestPerlCritic = <CODE>; DistZillaPluginTestPodLinkCheck = <CODE>; DistZillaPluginTestPortability = <CODE>; DistZillaPluginTestSynopsis = <CODE>; DistZillaPluginTestUnusedVars = <CODE>; DistZillaPluginTestVersion = <CODE>; DistZillaRoleFileWatcher = <CODE>; Dotenv = <CODE>; Dumbbench = <CODE>; EV = <CODE>; EmailAbstract = <CODE>; EmailAddress = <CODE>; EmailAddressList = <CODE>; EmailAddressXS = <CODE>; EmailDateFormat = <CODE>; EmailMIME = <CODE>; EmailMIMEAttachmentStripper = <CODE>; EmailMIMEContentType = <CODE>; EmailMIMEEncodings = <CODE>; EmailMIMEModifier = <CODE>; EmailMessageID = <CODE>; EmailOutlookMessage = <CODE>; EmailReply = <CODE>; EmailSend = <CODE>; EmailSender = <CODE>; EmailSimple = <CODE>; EmailStuffer = <CODE>; EmailValid = <CODE>; EmailValidLoose = <CODE>; Encode = <CODE>; EncodeBase32GMP = <CODE>; EncodeDetect = <CODE>; EncodeEUCJPASCII = <CODE>; EncodeHanExtra = <CODE>; EncodeIMAPUTF7 = <CODE>; EncodeJIS2K = <CODE>; EncodeLocale = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Encode-Locale-1.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Encode-Locale"; preCheck = null; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.05"; }; EncodeNewlines = <CODE>; EncodePunycode = <CODE>; Env = <CODE>; EnvPath = <CODE>; EnvSanctify = <CODE>; Error = <CODE>; EvalClosure = <CODE>; ExcelWriterXLSX = <CODE>; ExceptionBase = <CODE>; ExceptionClass = <CODE>; ExceptionDied = <CODE>; ExceptionWarning = <CODE>; Expect = <CODE>; ExpectSimple = <CODE>; Exporter = null; ExporterDeclare = <CODE>; ExporterLite = <CODE>; ExporterTiny = <CODE>; ExtUtilsCBuilder = null; ExtUtilsCChecker = <CODE>; ExtUtilsCommand = <CODE>; ExtUtilsConfig = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-ExtUtils-Config-0.008"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "ExtUtils-Config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "ExtUtils-Config-0.008.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-rlEE9jRlDc6KebftE/tZ1no5whOmd2z9qj7nSeYvGow="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-Config-0.008.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "ExtUtils-Config-0.008.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/jwfp9lqcvfnci65gyh6yv0cg2r232zfv-ExtUtils-Config-0.008.tar.gz"; outputHash = "sha256-rlEE9jRlDc6KebftE/tZ1no5whOmd2z9qj7nSeYvGow="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-Config-0.008.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-Config-0.008.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.008"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-ExtUtils-Config-0.008"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-ExtUtils-Config-0.008"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/pc0wx8ab7yy5ijfb303rhm2kb9x8ghgw-perl5.36.0-ExtUtils-Config-0.008"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "ExtUtils-Config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.008"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "ExtUtils-Config"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.008"; }; ExtUtilsConstant = <CODE>; ExtUtilsCppGuess = <CODE>; ExtUtilsDepends = <CODE>; ExtUtilsF77 = <CODE>; ExtUtilsHelpers = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-ExtUtils-Helpers-0.026"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "ExtUtils-Helpers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "ExtUtils-Helpers-0.026.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-3pAbZ5CkVXz07JCBSeA1eDsSW/EV65ZA/rG8HCTDNBY="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-Helpers-0.026.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "ExtUtils-Helpers-0.026.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/q8zzs2b6yy9rl3j2mcqglsjxqpmxf3jm-ExtUtils-Helpers-0.026.tar.gz"; outputHash = "sha256-3pAbZ5CkVXz07JCBSeA1eDsSW/EV65ZA/rG8HCTDNBY="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-Helpers-0.026.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-Helpers-0.026.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.026"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-ExtUtils-Helpers-0.026"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-ExtUtils-Helpers-0.026"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/9lsmhx5ygmzgq2ivk8i4fgcvhrhn4rw5-perl5.36.0-ExtUtils-Helpers-0.026"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "ExtUtils-Helpers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.026"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "ExtUtils-Helpers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.026"; }; ExtUtilsInstall = <CODE>; ExtUtilsInstallPaths = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-ExtUtils-InstallPaths-0.012"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "ExtUtils-InstallPaths"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "ExtUtils-InstallPaths-0.012.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-hHNeMDe6sf3/o8JQhWetQSp4XJFZnbPBJZOlCh3UNO0="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-InstallPaths-0.012.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "ExtUtils-InstallPaths-0.012.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mh6hznysj45k5rz84fqpryyiwi9vczm-ExtUtils-InstallPaths-0.012.tar.gz"; outputHash = "sha256-hHNeMDe6sf3/o8JQhWetQSp4XJFZnbPBJZOlCh3UNO0="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-InstallPaths-0.012.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEONT/ExtUtils-InstallPaths-0.012.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.012"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-ExtUtils-InstallPaths-0.012"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-ExtUtils-InstallPaths-0.012"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/b28jvlr6yfymhvhhp26553s3sxs4ki70-perl5.36.0-ExtUtils-InstallPaths-0.012"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "ExtUtils-InstallPaths"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.012"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "ExtUtils-InstallPaths"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.012"; }; ExtUtilsLibBuilder = <CODE>; ExtUtilsMakeMaker = <CODE>; ExtUtilsMakeMakerCPANfile = <CODE>; ExtUtilsManifest = null; ExtUtilsParseXS = null; ExtUtilsPkgConfig = <CODE>; ExtUtilsTypemap = <CODE>; ExtUtilsTypemapsDefault = <CODE>; ExtUtilsXSBuilder = <CODE>; ExtUtilsXSpp = <CODE>; FCGI = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-FCGI-0.79"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/c8wqn51f7biw78hz1jh0brhq7hpg45n5-perl5.36.0-FCGI-0.79"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "FCGI"; postPatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.79"; }; FCGIClient = <CODE>; FCGIProcManager = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-FCGI-ProcManager-0.28"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "FCGI-ProcManager"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "FCGI-ProcManager-0.28.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-4clYwEJCehdeBR4ACPICXo7IBhPTx3UFl7+OUpsEQg4="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/A/AR/ARODLAND/FCGI-ProcManager-0.28.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "FCGI-ProcManager-0.28.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/8rvpq5xw8hqmw0zw30qdchdpwjayh4zc-FCGI-ProcManager-0.28.tar.gz"; outputHash = "sha256-4clYwEJCehdeBR4ACPICXo7IBhPTx3UFl7+OUpsEQg4="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/A/AR/ARODLAND/FCGI-ProcManager-0.28.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/A/AR/ARODLAND/FCGI-ProcManager-0.28.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.28"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-FCGI-ProcManager-0.28"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/1yqv88dypkw87pgwlr76q3vkxwp170vy-perl5.36.0-FCGI-ProcManager-0.28"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "FCGI-ProcManager"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.28"; }; FFICheckLib = <CODE>; FatalException = <CODE>; FennecLite = <CODE>; FileBOM = <CODE>; FileBaseDir = <CODE>; FileChangeNotify = <CODE>; FileCheckTree = <CODE>; FileCopyRecursive = <CODE>; FileCopyRecursiveReduced = <CODE>; FileCountLines = <CODE>; FileDesktopEntry = <CODE>; FileFindIterator = <CODE>; FileFindObject = <CODE>; FileFindObjectRule = <CODE>; FileFindRule = <CODE>; FileFindRulePerl = <CODE>; FileFinder = <CODE>; FileFnMatch = <CODE>; FileGrep = <CODE>; FileHandleUnget = <CODE>; FileHomeDir = <CODE>; FileKeePass = <CODE>; FileLibMagic = <CODE>; FileListing = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-File-Listing-6.14"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "File-Listing"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "File-Listing-6.14.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-FbOkhx4jFko28iY4G3TUUK9B8SzJSYX1kqZp/Kx7SP8="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/P/PL/PLICEASE/File-Listing-6.14.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "File-Listing-6.14.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pplzcw61l7sp7szxmfbh3jc6vk7mg5ca-File-Listing-6.14.tar.gz"; outputHash = "sha256-FbOkhx4jFko28iY4G3TUUK9B8SzJSYX1kqZp/Kx7SP8="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/P/PL/PLICEASE/File-Listing-6.14.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/P/PL/PLICEASE/File-Listing-6.14.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.14"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-File-Listing-6.14"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-File-Listing-6.14"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/5hcqibb0if2r9hk30ncv1grilv1rr1z1-perl5.36.0-File-Listing-6.14"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "File-Listing"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.14"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "File-Listing"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.14"; }; FileLoadLines = <CODE>; FileMMagic = <CODE>; FileMap = <CODE>; FileMimeInfo = <CODE>; FileModified = <CODE>; FileNFSLock = <CODE>; FileNext = <CODE>; FilePath = <CODE>; FilePid = <CODE>; FileReadBackwards = <CODE>; FileRemove = <CODE>; FileShare = <CODE>; FileShareDir = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-File-ShareDir-Install-0.13"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "File-ShareDir-Install"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "File-ShareDir-Install-0.13.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Rb798Nlcvv58JaHa8pPYX3gNbSV2FGVG5oKKrSblgPk="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/E/ET/ETHER/File-ShareDir-Install-0.13.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "File-ShareDir-Install-0.13.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/jb9i197jh68w5kr23sp7c84pa6xcg6x7-File-ShareDir-Install-0.13.tar.gz"; outputHash = "sha256-Rb798Nlcvv58JaHa8pPYX3gNbSV2FGVG5oKKrSblgPk="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/E/ET/ETHER/File-ShareDir-Install-0.13.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/E/ET/ETHER/File-ShareDir-Install-0.13.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.13"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-File-ShareDir-Install-0.13"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/v25al9pzw8850y7cnv1pjan3z4w70r56-perl5.36.0-File-ShareDir-Install-0.13"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "File-ShareDir-Install"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.13"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-File-ShareDir-1.118"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "File-ShareDir"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "File-ShareDir-1.118.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-O7KiC6Nd+VjcCk8jBvwF2QPYuMTePIvu/OF3OdKByVg="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/R/RE/REHSACK/File-ShareDir-1.118.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "File-ShareDir-1.118.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/dbrympqgvc8lyjs3572apxxngdh6jy4j-File-ShareDir-1.118.tar.gz"; outputHash = "sha256-O7KiC6Nd+VjcCk8jBvwF2QPYuMTePIvu/OF3OdKByVg="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/R/RE/REHSACK/File-ShareDir-1.118.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/R/RE/REHSACK/File-ShareDir-1.118.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.118"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-File-ShareDir-1.118"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-File-ShareDir-1.118"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/j4p7rbw0jl318w98z7z280m722gjg5q0-perl5.36.0-File-ShareDir-1.118"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "File-ShareDir"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.118"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "File-ShareDir"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.118"; }; FileShareDirInstall = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-File-ShareDir-Install-0.13"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "File-ShareDir-Install"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.13"; }; FileSlurp = <CODE>; FileSlurpTiny = <CODE>; FileSlurper = <CODE>; FileTail = <CODE>; FileTemp = null; FileTouch = <CODE>; FileType = <CODE>; FileUtil = <CODE>; FileUtilTempdir = <CODE>; FileWhich = <CODE>; FileZglob = <CODE>; Filechdir = <CODE>; Filechmod = <CODE>; FilechmodRecursive = <CODE>; Filelchown = <CODE>; Filepushd = <CODE>; FilesysDf = <CODE>; FilesysDiskUsage = <CODE>; FilesysNotifySimple = <CODE>; Filter = <CODE>; FilterSimple = null; FinanceQuote = <CODE>; FindLib = <CODE>; FontAFM = <CODE>; FontTTF = <CODE>; ForksSuper = <CODE>; FormValidatorSimple = <CODE>; FreezeThaw = <CODE>; FunctionParameters = <CODE>; Furl = <CODE>; Future = <CODE>; FutureAsyncAwait = <CODE>; FutureIO = <CODE>; GD = <CODE>; GDGraph = <CODE>; GDSecurityImage = <CODE>; GDText = <CODE>; GSSAPI = <CODE>; GamesSolitaireVerify = <CODE>; GeoIP = <CODE>; GeoIP2 = <CODE>; GeographyCountries = <CODE>; GetoptArgvFile = <CODE>; GetoptLong = <CODE>; GetoptLongDescriptive = <CODE>; GetoptTabular = <CODE>; Git = <CODE>; GitAutofixup = <CODE>; GitPurePerl = <CODE>; GitRepository = <CODE>; GitVersionCompare = <CODE>; Glib = <CODE>; GlibObjectIntrospection = <CODE>; Gnome2 = <CODE>; Gnome2Canvas = <CODE>; Gnome2VFS = <CODE>; Gnome2Wnck = <CODE>; GnuPG = <CODE>; GnuPGInterface = <CODE>; GoferTransporthttp = <CODE>; GooCanvas = <CODE>; GooCanvas2 = <CODE>; GooCanvas2CairoTypes = <CODE>; GoogleProtocolBuffers = <CODE>; Graph = <CODE>; GraphViz = <CODE>; GraphicsColor = <CODE>; GraphicsTIFF = <CODE>; GrowlGNTP = <CODE>; Gtk2 = <CODE>; Gtk2AppIndicator = <CODE>; Gtk2GladeXML = <CODE>; Gtk2ImageView = <CODE>; Gtk2TrayIcon = <CODE>; Gtk2Unique = <CODE>; Gtk3 = <CODE>; Gtk3ImageView = <CODE>; Gtk3SimpleList = <CODE>; Guard = <CODE>; HTMLClean = <CODE>; HTMLElementExtended = <CODE>; HTMLEscape = <CODE>; HTMLForm = <CODE>; HTMLFormFu = <CODE>; HTMLFormFuMultiForm = <CODE>; HTMLFormHandler = <CODE>; HTMLFormatExternal = <CODE>; HTMLFormatTextWithLinks = <CODE>; HTMLFormatTextWithLinksAndTables = <CODE>; HTMLFormatter = <CODE>; HTMLFromANSI = <CODE>; HTMLGumbo = <CODE>; HTMLMason = <CODE>; HTMLMasonPSGIHandler = <CODE>; HTMLParser = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTML-Parser-3.75"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/z93672507ghc7r95q0n7dvib1cw65ncy-perl5.36.0-HTML-Parser-3.75"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "HTML-Parser"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.75"; }; HTMLQuoted = <CODE>; HTMLRewriteAttributes = <CODE>; HTMLScrubber = <CODE>; HTMLSelectorXPath = <CODE>; HTMLStripScripts = <CODE>; HTMLStripScriptsParser = <CODE>; HTMLTableExtract = <CODE>; HTMLTagCloud = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Module-Build-0.4231"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Module-Build"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Module-Build-0.4231.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-fg9MaSwXQMGshOoU1+o9i8eYsvsmwJh3Ip4E9DCytxc="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEONT/Module-Build-0.4231.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Module-Build-0.4231.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pm54fbqaak7i30i6axai653vs487rfal-Module-Build-0.4231.tar.gz"; outputHash = "sha256-fg9MaSwXQMGshOoU1+o9i8eYsvsmwJh3Ip4E9DCytxc="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEONT/Module-Build-0.4231.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEONT/Module-Build-0.4231.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.4231"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Module-Build-0.4231"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ma9k5jd9jz8ymbmggh88rsza9rqhrn38-perl5.36.0-Module-Build-0.4231"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Module-Build"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.4231"; } «repeated» ]; buildPhase = "runHook preBuild\nperl Build.PL --prefix=$out; ./Build build\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n./Build test\nrunHook postCheck\n"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\nperl Build.PL --prefix=$out; ./Build build\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n./Build test\nrunHook postCheck\n"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; installPhase = "runHook preInstall\n./Build install\nrunHook postInstall\n"; mesonFlags = [ ]; name = "perl5.36.0-HTML-TagCloud-0.38"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTML-TagCloud"; preConfigure = "touch Makefile.PL\n\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTML-TagCloud-0.38.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-SYCZRy3vhmtEi/YvQYLfrfWUcuE/JMuGZKZxynm2cBU="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/R/RO/ROBERTSD/HTML-TagCloud-0.38.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTML-TagCloud-0.38.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/lm8yhkca3aq2fx4009a1scx3aagh2kaq-HTML-TagCloud-0.38.tar.gz"; outputHash = "sha256-SYCZRy3vhmtEi/YvQYLfrfWUcuE/JMuGZKZxynm2cBU="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/R/RO/ROBERTSD/HTML-TagCloud-0.38.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/R/RO/ROBERTSD/HTML-TagCloud-0.38.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.38"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; installPhase = "runHook preInstall\n./Build install\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTML-TagCloud-0.38"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/myy0kkxfs624ffy48v87zmjcacy1s4wq-perl5.36.0-HTML-TagCloud-0.38"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTML-TagCloud"; preConfigure = "touch Makefile.PL\n\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.38"; }; HTMLTagset = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTML-Tagset-3.20"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "HTML-Tagset"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.20"; }; HTMLTemplate = <CODE>; HTMLTidy = <CODE>; HTMLTiny = <CODE>; HTMLTokeParserSimple = <CODE>; HTMLTree = <CODE>; HTMLTreeBuilderXPath = <CODE>; HTMLWidget = <CODE>; HTTPAcceptLanguage = <CODE>; HTTPBody = <CODE>; HTTPCookieJar = <CODE>; HTTPCookies = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTTP-Cookies-6.09"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTTP-Cookies"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Cookies-6.09.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-kD8Bevqlt4WZzJDvwU7MzIzC6/tjbrjAL48WuoYdH+A="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Cookies-6.09.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Cookies-6.09.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/52f44v74dahg23biv6y5xa26zsy1zxaw-HTTP-Cookies-6.09.tar.gz"; outputHash = "sha256-kD8Bevqlt4WZzJDvwU7MzIzC6/tjbrjAL48WuoYdH+A="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Cookies-6.09.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Cookies-6.09.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.09"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Cookies-6.09"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Cookies-6.09"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/46mhdq269qpwvayvr9wdid8byakp4pyf-perl5.36.0-HTTP-Cookies-6.09"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Cookies"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.09"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Cookies"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.09"; }; HTTPDAV = <CODE>; HTTPDaemon = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» «repeated» «repeated» ]; buildPhase = "runHook preBuild\nperl Build.PL --prefix=$out; ./Build build\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n./Build test\nrunHook postCheck\n"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\nperl Build.PL --prefix=$out; ./Build build\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n./Build test\nrunHook postCheck\n"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; installPhase = "runHook preInstall\n./Build install\nrunHook postInstall\n"; mesonFlags = [ ]; name = "perl5.36.0-Module-Build-Tiny-0.039"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Module-Build-Tiny"; preConfigure = "touch Makefile.PL\n\n"; propagatedBuildInputs = [ «repeated» «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Module-Build-Tiny-0.039.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-fVgP9qzgy+VVvza4bcjqIyWBUwy+quoJvMtXtVeX8Rw="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/L/LE/LEONT/Module-Build-Tiny-0.039.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Module-Build-Tiny-0.039.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/33p1sg3v920crqzkqv86br93infx046v-Module-Build-Tiny-0.039.tar.gz"; outputHash = "sha256-fVgP9qzgy+VVvza4bcjqIyWBUwy+quoJvMtXtVeX8Rw="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/L/LE/LEONT/Module-Build-Tiny-0.039.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/L/LE/LEONT/Module-Build-Tiny-0.039.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.039"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; installPhase = "runHook preInstall\n./Build install\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Module-Build-Tiny-0.039"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/cfrxm6rmnpahd84ynpng4j79ss76i40j-perl5.36.0-Module-Build-Tiny-0.039"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Module-Build-Tiny"; preConfigure = "touch Makefile.PL\n\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.039"; } «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTTP-Daemon-6.14"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Daemon-CVE-2022-3108-pre.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-vRSyiO38jnsSeKeGbCnKi+VLaTqQSB349eybl1Wa8SQ="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libwww-perl/HTTP-Daemon/commit/331d5c1d1f0e48e6b57ef738c2a8509b1eb53376.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Daemon-CVE-2022-3108-pre.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/ghfwrxbi1crfaczipg43sx4r58r5ccq7-HTTP-Daemon-CVE-2022-3108-pre.patch"; outputHash = "sha256-vRSyiO38jnsSeKeGbCnKi+VLaTqQSB349eybl1Wa8SQ="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libwww-perl/HTTP-Daemon/commit/331d5c1d1f0e48e6b57ef738c2a8509b1eb53376.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libwww-perl/HTTP-Daemon/commit/331d5c1d1f0e48e6b57ef738c2a8509b1eb53376.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Daemon-CVE-2022-3108-1.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-z8RXcbVEpjSZcm8dUZcDWYeQHtVZODOGCdcDTfXQpfA="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libwww-perl/HTTP-Daemon/commit/e84475de51d6fd7b29354a997413472a99db70b2.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Daemon-CVE-2022-3108-1.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/d5b3w63wa8jcy0536w8wdnxvmc1dmhka-HTTP-Daemon-CVE-2022-3108-1.patch"; outputHash = "sha256-z8RXcbVEpjSZcm8dUZcDWYeQHtVZODOGCdcDTfXQpfA="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libwww-perl/HTTP-Daemon/commit/e84475de51d6fd7b29354a997413472a99db70b2.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libwww-perl/HTTP-Daemon/commit/e84475de51d6fd7b29354a997413472a99db70b2.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Daemon-CVE-2022-3108-2.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-e1lxt+AJGfbjNOZoKj696H2Ftkx9wlTF557WkZCLE5Q="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libwww-perl/HTTP-Daemon/commit/8dc5269d59e2d5d9eb1647d82c449ccd880f7fd0.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Daemon-CVE-2022-3108-2.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/lz6q4iyvkpa4q2k5j4fdmhs5h4gswism-HTTP-Daemon-CVE-2022-3108-2.patch"; outputHash = "sha256-e1lxt+AJGfbjNOZoKj696H2Ftkx9wlTF557WkZCLE5Q="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libwww-perl/HTTP-Daemon/commit/8dc5269d59e2d5d9eb1647d82c449ccd880f7fd0.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libwww-perl/HTTP-Daemon/commit/8dc5269d59e2d5d9eb1647d82c449ccd880f7fd0.patch"; urls = «repeated»; userHook = null; } ]; pname = "HTTP-Daemon"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Daemon-6.14.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-8HZ+fzy7gLITE8dh8HrY7SU7zp+i0LqAaz+3LTCbLh0="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Daemon-6.14.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Daemon-6.14.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/77x0xr1shkvaxh0khn0hsl66axdicgrc-HTTP-Daemon-6.14.tar.gz"; outputHash = "sha256-8HZ+fzy7gLITE8dh8HrY7SU7zp+i0LqAaz+3LTCbLh0="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Daemon-6.14.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/HTTP-Daemon-6.14.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.14"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Daemon-6.14"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Daemon-6.14"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/m741afidkvd1ncf2yxxlw1d30zn4g4k6-perl5.36.0-HTTP-Daemon-6.14"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = «repeated»; perlModule = «repeated»; pname = "HTTP-Daemon"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.14"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; perlModule = «repeated»; pname = "HTTP-Daemon"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.14"; }; HTTPDate = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Date-6.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Date"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.05"; }; HTTPEntityParser = <CODE>; HTTPHeaderParserXS = <CODE>; HTTPHeadersActionPack = <CODE>; HTTPHeadersFast = <CODE>; HTTPLite = <CODE>; HTTPMessage = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Message-6.26"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Message"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.26"; }; HTTPMultiPartParser = <CODE>; HTTPNegotiate = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-HTTP-Negotiate-6.01"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "HTTP-Negotiate"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "HTTP-Negotiate-6.01.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-HHKcHqYxAOh4QFzafWb5rf0+1PHWysrKDukVLfco4BY="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/G/GA/GAAS/HTTP-Negotiate-6.01.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "HTTP-Negotiate-6.01.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/diklqmca00f1q5wxss1i113vsrq1p3kj-HTTP-Negotiate-6.01.tar.gz"; outputHash = "sha256-HHKcHqYxAOh4QFzafWb5rf0+1PHWysrKDukVLfco4BY="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/G/GA/GAAS/HTTP-Negotiate-6.01.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/G/GA/GAAS/HTTP-Negotiate-6.01.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.01"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Negotiate-6.01"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-HTTP-Negotiate-6.01"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/wbswwv6jgk8ii9ggb4k0qn6sss6234aq-perl5.36.0-HTTP-Negotiate-6.01"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Negotiate"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.01"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "HTTP-Negotiate"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.01"; }; HTTPParserXS = <CODE>; HTTPProxy = <CODE>; HTTPRequestAsCGI = <CODE>; HTTPResponseEncoding = <CODE>; HTTPServerSimple = <CODE>; HTTPServerSimpleAuthen = <CODE>; HTTPServerSimpleMason = <CODE>; HTTPServerSimplePSGI = <CODE>; HTTPTinyCache = <CODE>; HTTPTinyish = <CODE>; Hailo = <CODE>; HamAPRSFAP = <CODE>; HashDiff = <CODE>; HashFlatten = <CODE>; HashMerge = <CODE>; HashMergeSimple = <CODE>; HashMoreUtils = <CODE>; HashMultiValue = <CODE>; HashSharedMem = <CODE>; HashStoredIterator = <CODE>; HashUtilFieldHashCompat = <CODE>; HeapFibonacci = <CODE>; HookLexWrap = <CODE>; I18NCollate = null; IMAPClient = <CODE>; IO = <CODE>; IOAIO = <CODE>; IOAll = <CODE>; IOAsync = <CODE>; IOAsyncSSL = <CODE>; IOCapture = <CODE>; IOCaptureOutput = <CODE>; IOCompress = <CODE>; IODigest = <CODE>; IOHTML = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-IO-HTML-1.004"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "IO-HTML"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.004"; }; IOHandleUtil = <CODE>; IOInteractive = <CODE>; IOInteractiveTiny = <CODE>; IOLockedFile = <CODE>; IOMultiplex = <CODE>; IOPager = <CODE>; IOPipely = <CODE>; IOPrompt = <CODE>; IOPty = <CODE>; IOSessionData = <CODE>; IOSocketINET6 = <CODE>; IOSocketIP = null; IOSocketInet6 = <CODE>; IOSocketSSL = <CODE>; IOSocketTimeout = <CODE>; IOString = <CODE>; IOStringy = <CODE>; IOStty = <CODE>; IOTee = <CODE>; IOTieCombine = <CODE>; IOTty = <CODE>; IOstringy = <CODE>; IPCConcurrencyLimit = <CODE>; IPCRun = <CODE>; IPCRun3 = <CODE>; IPCShareLite = <CODE>; IPCSignal = <CODE>; IPCSysV = <CODE>; IPCSystemSimple = <CODE>; IPCountry = <CODE>; IRCUtils = <CODE>; ImageExifTool = <CODE>; ImageInfo = <CODE>; ImageMagick = <CODE>; ImageOCRTesseract = <CODE>; ImagePNGLibpng = <CODE>; ImageSane = <CODE>; ImageScale = <CODE>; ImageSize = <CODE>; Imager = <CODE>; ImagerQRCode = <CODE>; ImportInto = <CODE>; Importer = <CODE>; Inline = <CODE>; InlineC = <CODE>; InlineJava = <CODE>; JSON = <CODE>; JSONAny = <CODE>; JSONCreate = <CODE>; JSONMaybeXS = <CODE>; JSONPP = <CODE>; JSONPPCompat5006 = <CODE>; JSONParse = <CODE>; JSONValidator = <CODE>; JSONWebToken = <CODE>; JSONXS = <CODE>; JSONXSVersionOneAndTwo = <CODE>; JavaScriptMinifierXS = <CODE>; JavaScriptValueEscape = <CODE>; LEOCHARRECLI = <CODE>; LEOCHARREDebug = <CODE>; LWP = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-libwww-perl-6.67"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Test-RequiresInternet-0.05"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Test-RequiresInternet"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Test-RequiresInternet-0.05.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-u6ezKhzA1Yzi7CCyAKc0fGljFkHoyuj/RWetJO8egz4="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/M/MA/MALLEN/Test-RequiresInternet-0.05.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Test-RequiresInternet-0.05.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/wb7rpznplx0kap2wkmnkvjkvgdq2jw79-Test-RequiresInternet-0.05.tar.gz"; outputHash = "sha256-u6ezKhzA1Yzi7CCyAKc0fGljFkHoyuj/RWetJO8egz4="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/M/MA/MALLEN/Test-RequiresInternet-0.05.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/M/MA/MALLEN/Test-RequiresInternet-0.05.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.05"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-RequiresInternet-0.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/0zmh4j5cf4xlrlkm12fp02nd5aw9kv8a-perl5.36.0-Test-RequiresInternet-0.05"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Test-RequiresInternet"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.05"; } ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "libwww-perl"; postPatch = ""; propagatedBuildInputs = [ «repeated» «repeated» «repeated» «repeated» { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-Net-HTTP-6.19"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "Net-HTTP"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Net-HTTP-6.19.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-UrduwTlZUiyuZNll8V2j2Z3LRF7d2F0s5OT03zhbL8Q="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/Net-HTTP-6.19.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Net-HTTP-6.19.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/8vnibjafixvqad9wa2gf6xgj59862yn5-Net-HTTP-6.19.tar.gz"; outputHash = "sha256-UrduwTlZUiyuZNll8V2j2Z3LRF7d2F0s5OT03zhbL8Q="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/Net-HTTP-6.19.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/Net-HTTP-6.19.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.19"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Net-HTTP-6.19"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/zh3qih1j29b6k2651ps2nbx6fb8qglp4-perl5.36.0-Net-HTTP-6.19"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "Net-HTTP"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.19"; } «repeated» { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-WWW-RobotRules-6.02"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "WWW-RobotRules"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "WWW-RobotRules-6.02.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-RrUC56KI1VlCmJHutdl5Rh3T7MalxJHq2F0WW24DpR4="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/G/GA/GAAS/WWW-RobotRules-6.02.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "WWW-RobotRules-6.02.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/nv9m9x5smi365k2yrghwqacxdq8d1q3a-WWW-RobotRules-6.02.tar.gz"; outputHash = "sha256-RrUC56KI1VlCmJHutdl5Rh3T7MalxJHq2F0WW24DpR4="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/G/GA/GAAS/WWW-RobotRules-6.02.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/G/GA/GAAS/WWW-RobotRules-6.02.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.02"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-WWW-RobotRules-6.02"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/4gyy4v5mbx6p48lpkziyry8nhmhwwa21-perl5.36.0-WWW-RobotRules-6.02"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "WWW-RobotRules"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.02"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libwww-perl-6.67.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-lu7ECj/QqhvYNBF75eshxDj3MJTYYaGn5XdPCxImtyM="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/O/OA/OALDERS/libwww-perl-6.67.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libwww-perl-6.67.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/c9xi3hzh222nw4cjcabzynbmpm2jdrf4-libwww-perl-6.67.tar.gz"; outputHash = "sha256-lu7ECj/QqhvYNBF75eshxDj3MJTYYaGn5XdPCxImtyM="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/O/OA/OALDERS/libwww-perl-6.67.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/O/OA/OALDERS/libwww-perl-6.67.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "6.67"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-libwww-perl-6.67"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-libwww-perl-6.67"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "libwww-perl"; postPatch = ""; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.67"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "libwww-perl"; postPatch = ""; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.67"; }; LWPAuthenOAuth = <CODE>; LWPMediaTypes = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-LWP-MediaTypes-6.04"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "LWP-MediaTypes"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.04"; }; LWPProtocolConnect = <CODE>; LWPProtocolHttps = <CODE>; LWPProtocolconnect = <CODE>; LWPProtocolhttp10 = <CODE>; LWPProtocolhttps = <CODE>; LWPUserAgent = <CODE>; LWPUserAgentCached = <CODE>; LWPUserAgentDNSHosts = <CODE>; LWPUserAgentDetermined = <CODE>; LWPUserAgentMockable = <CODE>; LWPxParanoidAgent = <CODE>; LaTeXML = <CODE>; Later = <CODE>; LexicalSealRequireHints = <CODE>; LinguaENFindNumber = <CODE>; LinguaENInflect = <CODE>; LinguaENInflectNumber = <CODE>; LinguaENInflectPhrase = <CODE>; LinguaENNumberIsOrdinal = <CODE>; LinguaENTagger = <CODE>; LinguaENWords2Nums = <CODE>; LinguaPTStemmer = <CODE>; LinguaStem = <CODE>; LinguaStemFr = <CODE>; LinguaStemIt = <CODE>; LinguaStemRu = <CODE>; LinguaStemSnowballDa = <CODE>; LinguaTranslit = <CODE>; LinkEmbedder = <CODE>; LinuxACL = <CODE>; LinuxDesktopFiles = <CODE>; LinuxDistribution = <CODE>; LinuxFD = <CODE>; LinuxInotify2 = <CODE>; Linuxusermod = <CODE>; ListAllUtils = <CODE>; ListBinarySearch = <CODE>; ListCompare = <CODE>; ListMoreUtils = <CODE>; ListMoreUtilsXS = <CODE>; ListSomeUtils = <CODE>; ListUtilsBy = <CODE>; LocaleCodes = <CODE>; LocaleGettext = { AUTOMATED_TESTING = true; LANG = "C"; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ { LDFLAGS = ""; NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-csharp" "--with-xz" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { LDFLAGS = ""; NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = false; gettextNeedsLdflags = false; hardeningDisable = [ "format" ]; mesonFlags = [ ]; name = "gettext-0.21"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" "man" "doc" "info" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gettext/absolute-paths.diff ]; pname = "gettext"; postPatch = "substituteAllInPlace gettext-runtime/src/gettext.sh.in\nsubstituteInPlace gettext-tools/projects/KDE/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/projects/GNOME/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/src/project-id --replace \"/bin/pwd\" pwd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/gettext/gettext-setup-hook.sh ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "gettext-0.21.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "04kbg1sx0ncfrsbr85ggjslqkzzb243fcw9nyh3rrv1a22ihszf7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/gettext/gettext-0.21.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "gettext-0.21.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/s1bb06rzbxlvq08sg0ymwdgcgd1a7xh3-gettext-0.21.tar.gz"; outputHash = "04kbg1sx0ncfrsbr85ggjslqkzzb243fcw9nyh3rrv1a22ihszf7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/gettext/gettext-0.21.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/gettext/gettext-0.21.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.21"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = false; gettextNeedsLdflags = false; hardeningDisable = «repeated»; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gettext-0.21"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "gettext"; postPatch = "substituteAllInPlace gettext-runtime/src/gettext.sh.in\nsubstituteInPlace gettext-tools/projects/KDE/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/projects/GNOME/trigger --replace \"/bin/pwd\" pwd\nsubstituteInPlace gettext-tools/src/project-id --replace \"/bin/pwd\" pwd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.21"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; LANG = "C"; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-gettext-1.07"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "gettext"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "gettext-1.07.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-kJ1HlUaX58BCGPlykVt4e9EkTXXjvQFiC8Fn1bvEnBU="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/P/PV/PVANDRY/gettext-1.07.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "gettext-1.07.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/53ar6y7s69wmgf5bsb2grphlq5hp2zfd-gettext-1.07.tar.gz"; outputHash = "sha256-kJ1HlUaX58BCGPlykVt4e9EkTXXjvQFiC8Fn1bvEnBU="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/P/PV/PVANDRY/gettext-1.07.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/P/PV/PVANDRY/gettext-1.07.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.07"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-gettext-1.07"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; LANG = "C"; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-gettext-1.07"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/9mqrx4p9dvlcsyjjbz51ckcjffhc3jx4-perl5.36.0-gettext-1.07"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "gettext"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.07"; }; outPath = "/nix/store/9mqrx4p9dvlcsyjjbz51ckcjffhc3jx4-perl5.36.0-gettext-1.07"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "gettext"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.07"; }; LocaleMOFile = <CODE>; LocaleMaketext = null; LocaleMaketextFuzzy = <CODE>; LocaleMaketextLexicon = <CODE>; LocaleMaketextLexiconGetcontext = <CODE>; LocaleMaketextSimple = null; LocaleMsgfmt = <CODE>; LocalePO = <CODE>; LocaleTextDomainOO = <CODE>; LocaleTextDomainOOUtil = <CODE>; LocaleUtilsPlaceholderBabelFish = <CODE>; LocaleUtilsPlaceholderMaketext = <CODE>; LocaleUtilsPlaceholderNamed = <CODE>; LockFileSimple = <CODE>; Log4Perl = <CODE>; LogAny = <CODE>; LogAnyAdapterLog4perl = <CODE>; LogAnyAdapterTAP = <CODE>; LogContextual = <CODE>; LogDispatch = <CODE>; LogDispatchArray = <CODE>; LogDispatchFileRotate = <CODE>; LogDispatchouli = <CODE>; LogHandler = <CODE>; LogJournald = <CODE>; LogLog4perl = <CODE>; LogLogLite = <CODE>; LogMessage = <CODE>; LogMessageSimple = <CODE>; LogTrace = <CODE>; Logger = <CODE>; LongJump = <CODE>; MCE = <CODE>; MHonArc = <CODE>; MIMEBase64 = null; MIMECharset = <CODE>; MIMEEncWords = <CODE>; MIMELite = <CODE>; MIMELiteHTML = <CODE>; MIMETools = <CODE>; MIMETypes = <CODE>; MIMEtools = <CODE>; MLDBM = <CODE>; MNI-Perllib = <CODE>; MP3Info = <CODE>; MP3Tag = <CODE>; MROCompat = <CODE>; MacPasteboard = <CODE>; MailAuthenticationResults = <CODE>; MailBox = <CODE>; MailDKIM = <CODE>; MailIMAPClient = <CODE>; MailMaildir = <CODE>; MailMboxMessageParser = <CODE>; MailMessage = <CODE>; MailPOP3Client = <CODE>; MailRFC822Address = <CODE>; MailSPF = <CODE>; MailSender = <CODE>; MailSendmail = <CODE>; MailTools = <CODE>; MailTransport = <CODE>; MathBase85 = <CODE>; MathBaseConvert = <CODE>; MathBigInt = <CODE>; MathBigIntGMP = <CODE>; MathBigIntLite = <CODE>; MathBigRat = null; MathCalcParser = <CODE>; MathCalcUnits = <CODE>; MathClipper = <CODE>; MathComplex = null; MathConvexHullMonotoneChain = <CODE>; MathFibonacci = <CODE>; MathGMP = <CODE>; MathGMPz = <CODE>; MathGeometryVoronoi = <CODE>; MathInt128 = <CODE>; MathInt64 = <CODE>; MathLibm = <CODE>; MathPari = <CODE>; MathPlanePath = <CODE>; MathPrimeUtil = <CODE>; MathPrimeUtilGMP = <CODE>; MathProvablePrime = <CODE>; MathRandom = <CODE>; MathRandomISAAC = <CODE>; MathRandomMTAuto = <CODE>; MathRandomSecure = <CODE>; MathRound = <CODE>; MathVecStat = <CODE>; MaxMindDBCommon = <CODE>; MaxMindDBReader = <CODE>; MaxMindDBReaderXS = <CODE>; MaxMindDBWriter = <CODE>; Memoize = <CODE>; MemoizeExpireLRU = <CODE>; Menlo = <CODE>; MenloLegacy = <CODE>; MetaBuilder = <CODE>; MetaCPANClient = <CODE>; MethodSignaturesSimple = <CODE>; MetricsAny = <CODE>; Minion = <CODE>; MinionBackendSQLite = <CODE>; MinionBackendmysql = <CODE>; MixinLinewise = <CODE>; Mo = <CODE>; MockConfig = <CODE>; ModernPerl = <CODE>; ModuleBuild = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Module-Build-0.4231"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Module-Build"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.4231"; }; ModuleBuildDeprecated = <CODE>; ModuleBuildPluggable = <CODE>; ModuleBuildPluggableCPANfile = <CODE>; ModuleBuildPluggablePPPort = <CODE>; ModuleBuildTiny = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\nperl Build.PL --prefix=$out; ./Build build\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n./Build test\nrunHook postCheck\n"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; installPhase = "runHook preInstall\n./Build install\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Module-Build-Tiny-0.039"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Module-Build-Tiny"; preConfigure = "touch Makefile.PL\n\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.039"; }; ModuleBuildWithXSpp = <CODE>; ModuleBuildXSUtil = <CODE>; ModuleCPANTSAnalyse = <CODE>; ModuleCPANfile = <CODE>; ModuleCompile = <CODE>; ModuleCoreList = null; ModuleExtractUse = <CODE>; ModuleFind = <CODE>; ModuleImplementation = <CODE>; ModuleInfo = <CODE>; ModuleInstall = <CODE>; ModuleInstallAuthorRequires = <CODE>; ModuleInstallAuthorTests = <CODE>; ModuleInstallGithubMeta = <CODE>; ModuleInstallReadmeFromPod = <CODE>; ModuleInstallReadmeMarkdownFromPod = <CODE>; ModuleInstallRepository = <CODE>; ModuleInstallXSUtil = <CODE>; ModuleLoadConditional = null; ModuleManifest = <CODE>; ModuleMetadata = null; ModulePath = <CODE>; ModulePluggable = <CODE>; ModulePluggableFast = <CODE>; ModuleRefresh = <CODE>; ModuleRuntime = <CODE>; ModuleRuntimeConflicts = <CODE>; ModuleScanDeps = <CODE>; ModuleSignature = <CODE>; ModuleUtil = <CODE>; ModuleVersions = <CODE>; ModuleVersionsReport = <CODE>; Modulecpmfile = <CODE>; MojoDOM58 = <CODE>; MojoIOLoopDelay = <CODE>; MojoIOLoopForkCall = <CODE>; MojoJWT = <CODE>; MojoPg = <CODE>; MojoRedis = <CODE>; MojoSAML = <CODE>; MojoSQLite = <CODE>; MojoUserAgentCached = <CODE>; Mojolicious = <CODE>; MojoliciousPluginAssetPack = <CODE>; MojoliciousPluginGravatar = <CODE>; MojoliciousPluginMail = <CODE>; MojoliciousPluginOpenAPI = <CODE>; MojoliciousPluginStatus = <CODE>; MojoliciousPluginSyslog = <CODE>; MojoliciousPluginTextExceptions = <CODE>; MojoliciousPluginWebpack = <CODE>; Mojomysql = <CODE>; MongoDB = <CODE>; MonitoringPlugin = <CODE>; Moo = <CODE>; MooX = <CODE>; MooXAliases = <CODE>; MooXCmd = <CODE>; MooXHandlesVia = <CODE>; MooXLocalePassthrough = <CODE>; MooXLocaleTextDomainOO = <CODE>; MooXOptions = <CODE>; MooXSingleton = <CODE>; MooXStrictConstructor = <CODE>; MooXTypeTiny = <CODE>; MooXTypesMooseLike = <CODE>; MooXTypesMooseLikeNumeric = <CODE>; MooXlate = <CODE>; Moose = <CODE>; MooseAutobox = <CODE>; MooseXABC = <CODE>; MooseXAliases = <CODE>; MooseXAppCmd = <CODE>; MooseXAttributeChained = <CODE>; MooseXAttributeHelpers = <CODE>; MooseXClone = <CODE>; MooseXConfigFromFile = <CODE>; MooseXDaemonize = <CODE>; MooseXEmulateClassAccessorFast = <CODE>; MooseXGetopt = <CODE>; MooseXHasOptions = <CODE>; MooseXHasSugar = <CODE>; MooseXLazyRequire = <CODE>; MooseXMarkAsMethods = <CODE>; MooseXMethodAttributes = <CODE>; MooseXNonMoose = <CODE>; MooseXOneArgNew = <CODE>; MooseXParamsValidate = <CODE>; MooseXRelatedClassRoles = <CODE>; MooseXRoleParameterized = <CODE>; MooseXRoleWithOverloading = <CODE>; MooseXRunnable = <CODE>; MooseXSemiAffordanceAccessor = <CODE>; MooseXSetOnce = <CODE>; MooseXSingleton = <CODE>; MooseXStorage = <CODE>; MooseXStorageFormatJSONpm = <CODE>; MooseXStrictConstructor = <CODE>; MooseXTraits = <CODE>; MooseXTraitsPluggable = <CODE>; MooseXTypes = <CODE>; MooseXTypesCommon = <CODE>; MooseXTypesDateTime = <CODE>; MooseXTypesDateTimeMoreCoercions = <CODE>; MooseXTypesLoadableClass = <CODE>; MooseXTypesPathClass = <CODE>; MooseXTypesPathTiny = <CODE>; MooseXTypesPerl = <CODE>; MooseXTypesStringlike = <CODE>; MooseXTypesStructured = <CODE>; MooseXTypesURI = <CODE>; Mouse = <CODE>; MouseXConfigFromFile = <CODE>; MouseXGetOpt = <CODE>; MouseXGetopt = <CODE>; MouseXNativeTraits = <CODE>; MouseXSimpleConfig = <CODE>; MouseXTypes = <CODE>; MouseXTypesPathClass = <CODE>; MozillaCA = <CODE>; MozillaLdap = <CODE>; MusicBrainz = <CODE>; MusicBrainzDiscID = <CODE>; MustacheSimple = <CODE>; MySQLDiff = <CODE>; NTLM = <CODE>; NamespaceAutoclean = <CODE>; NamespaceClean = <CODE>; NetAMQP = <CODE>; NetAddrIP = <CODE>; NetAmazonAWSSign = <CODE>; NetAmazonEC2 = <CODE>; NetAmazonMechanicalTurk = <CODE>; NetAmazonS3 = <CODE>; NetAmazonS3Policy = <CODE>; NetAsyncHTTP = <CODE>; NetAsyncPing = <CODE>; NetAsyncWebSocket = <CODE>; NetCIDR = <CODE>; NetCIDRLite = <CODE>; NetCoverArtArchive = <CODE>; NetDBus = <CODE>; NetDNS = <CODE>; NetDNSResolverMock = <CODE>; NetDNSResolverProgrammable = <CODE>; NetDomainTLD = <CODE>; NetFastCGI = <CODE>; NetFrame = <CODE>; NetFrameLayerIPv6 = <CODE>; NetFreeDB = <CODE>; NetHTTP = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Net-HTTP-6.19"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Net-HTTP"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.19"; }; NetHTTPSNB = <CODE>; NetIDNEncode = <CODE>; NetIMAPClient = <CODE>; NetINET6Glue = <CODE>; NetIP = <CODE>; NetIPLite = <CODE>; NetIPv4Addr = <CODE>; NetIPv6Addr = <CODE>; NetIdent = <CODE>; NetLDAP = <CODE>; NetLDAPSID = <CODE>; NetLDAPServer = <CODE>; NetLDAPServerTest = <CODE>; NetMQTTSimple = <CODE>; NetNetmask = <CODE>; NetOAuth = <CODE>; NetOpenIDCommon = <CODE>; NetOpenIDConsumer = <CODE>; NetOpenSSH = <CODE>; NetPatricia = <CODE>; NetPing = <CODE>; NetPrometheus = <CODE>; NetSCP = <CODE>; NetSFTPForeign = <CODE>; NetSMTP = <CODE>; NetSMTPSSL = <CODE>; NetSMTPTLS = <CODE>; NetSMTPTLSButMaintained = <CODE>; NetSNMP = <CODE>; NetSNPP = <CODE>; NetSSH = <CODE>; NetSSHPerl = <CODE>; NetSSLeay = <CODE>; NetServer = <CODE>; NetServerCoro = <CODE>; NetServerSSPrefork = <CODE>; NetStatsd = <CODE>; NetTelnet = <CODE>; NetTwitterLite = <CODE>; NetWhoisIP = <CODE>; NetWorks = <CODE>; NetZooKeeper = <CODE>; NumberBytesHuman = <CODE>; NumberCompare = <CODE>; NumberFormat = <CODE>; NumberFraction = <CODE>; NumberMisc = <CODE>; NumberPhone = <CODE>; NumberWithError = <CODE>; OLEStorageLight = <CODE>; OLEStorage_Lite = <CODE>; ObjectAccessor = <CODE>; ObjectEvent = <CODE>; ObjectInsideOut = <CODE>; ObjectPad = <CODE>; ObjectSignature = <CODE>; OggVorbisHeaderPurePerl = <CODE>; Opcodes = <CODE>; OpenAPIClient = <CODE>; OpenGL = <CODE>; OpenOfficeOODoc = <CODE>; PARDist = <CODE>; PAUSEPermissions = <CODE>; PBKDF2Tiny = <CODE>; PDFAPI2 = <CODE>; PDFBuilder = <CODE>; PDL = <CODE>; PHPSerialization = <CODE>; PLS = <CODE>; POE = <CODE>; POETestLoops = <CODE>; POSIXAtFork = <CODE>; POSIXstrftimeCompiler = <CODE>; PPI = <CODE>; PPIxQuoteLike = <CODE>; PPIxRegexp = <CODE>; PPIxUtilities = <CODE>; PPR = <CODE>; PSGI = <CODE>; PackageConstants = <CODE>; PackageDeprecationManager = <CODE>; PackageStash = <CODE>; PackageStashXS = <CODE>; PackageVariant = <CODE>; PadWalker = <CODE>; Pango = <CODE>; ParallelForkManager = <CODE>; ParallelPipes = <CODE>; ParallelPrefork = <CODE>; ParamsClassify = <CODE>; ParamsUtil = <CODE>; ParamsValidate = <CODE>; ParamsValidationCompiler = <CODE>; Paranoid = <CODE>; Parent = <CODE>; ParseCPANMeta = <CODE>; ParseDebControl = <CODE>; ParseIRC = <CODE>; ParseLocalDistribution = <CODE>; ParsePMFile = <CODE>; ParsePlainConfig = <CODE>; ParseRecDescent = <CODE>; ParseSyslog = <CODE>; ParseYapp = <CODE>; ParserMGC = <CODE>; PatchReader = <CODE>; PathClass = <CODE>; PathDispatcher = <CODE>; PathIteratorRule = <CODE>; PathTiny = <CODE>; PathTools = <CODE>; Pegex = <CODE>; PerconaToolkit = <CODE>; Perl5lib = <CODE>; Perl6Junction = <CODE>; PerlCritic = <CODE>; PerlCriticCommunity = <CODE>; PerlCriticMoose = <CODE>; PerlCriticPolicyVariablesProhibitLoopOnHash = <CODE>; PerlCriticPulp = <CODE>; PerlDestructLevel = <CODE>; PerlIOLayers = <CODE>; PerlIOeol = <CODE>; PerlIOgzip = <CODE>; PerlIOutf8_strict = <CODE>; PerlIOviaQuotedPrint = null; PerlIOviaTimeout = <CODE>; PerlIOviadynamic = <CODE>; PerlIOviasymlink = <CODE>; PerlMagick = <CODE>; PerlMinimumVersion = <CODE>; PerlOSType = null; PerlPrereqScanner = <CODE>; PerlPrereqScannerNotQuiteLite = <CODE>; PerlTidy = <CODE>; PerlVersion = <CODE>; Perlosnames = <CODE>; PkgConfig = <CODE>; Plack = <CODE>; PlackAppProxy = <CODE>; PlackMiddlewareAuthDigest = <CODE>; PlackMiddlewareConsoleLogger = <CODE>; PlackMiddlewareDebug = <CODE>; PlackMiddlewareDeflater = <CODE>; PlackMiddlewareFixMissingBodyInRedirect = <CODE>; PlackMiddlewareHeader = <CODE>; PlackMiddlewareMethodOverride = <CODE>; PlackMiddlewareRemoveRedundantBody = <CODE>; PlackMiddlewareReverseProxy = <CODE>; PlackMiddlewareSession = <CODE>; PlackTestExternalServer = <CODE>; Po4a = <CODE>; PodAbstract = <CODE>; PodChecker = <CODE>; PodCoverage = <CODE>; PodCoverageTrustPod = <CODE>; PodElemental = <CODE>; PodElementalPerlMunger = <CODE>; PodEscapes = null; PodEventual = <CODE>; PodLaTeX = <CODE>; PodMarkdown = <CODE>; PodMarkdownGithub = <CODE>; PodMinimumVersion = <CODE>; PodPOM = <CODE>; PodPOMViewTOC = <CODE>; PodParser = <CODE>; PodPerldoc = <CODE>; PodPlainer = <CODE>; PodSection = <CODE>; PodSimple = <CODE>; PodSpell = <CODE>; PodStrip = <CODE>; PodTidy = <CODE>; PodUsage = null; PodWeaver = <CODE>; PodWrap = <CODE>; ProbePerl = <CODE>; ProcBackground = <CODE>; ProcFind = <CODE>; ProcProcessTable = <CODE>; ProcSafeExec = <CODE>; ProcSimple = <CODE>; ProcWait3 = <CODE>; ProcWaitStat = <CODE>; PrometheusTiny = <CODE>; PrometheusTinyShared = <CODE>; ProtocolHTTP2 = <CODE>; ProtocolRedis = <CODE>; ProtocolRedisFaster = <CODE>; ProtocolWebSocket = <CODE>; RESTClient = <CODE>; RESTUtils = <CODE>; RPCEPCService = <CODE>; RPM2 = <CODE>; RSSParserLite = <CODE>; RTClientREST = <CODE>; Razor2ClientAgent = <CODE>; Readonly = <CODE>; ReadonlyX = <CODE>; ReadonlyXS = <CODE>; Redis = <CODE>; RefUtil = <CODE>; RegexpAssemble = <CODE>; RegexpCommon = <CODE>; RegexpCommonnetCIDR = <CODE>; RegexpCommontime = <CODE>; RegexpGrammars = <CODE>; RegexpIPv6 = <CODE>; RegexpParser = <CODE>; RegexpTrie = <CODE>; ReturnValue = <CODE>; RoleBasic = <CODE>; RoleHasMessage = <CODE>; RoleIdentifiable = <CODE>; RoleTiny = <CODE>; RpcXML = <CODE>; SCGI = <CODE>; SDL = <CODE>; SGMLSpm = <CODE>; SOAPLite = <CODE>; SQLAbstract = <CODE>; SQLAbstractClassic = <CODE>; SQLAbstractLimit = <CODE>; SQLAbstractPg = <CODE>; SQLSplitStatement = <CODE>; SQLStatement = <CODE>; SQLTokenizer = <CODE>; SQLTranslator = <CODE>; SUPER = <CODE>; SVNSimple = <CODE>; Safe = null; SafeHole = <CODE>; SafeIsa = <CODE>; ScalarListUtils = <CODE>; ScalarString = <CODE>; ScopeGuard = <CODE>; ScopeUpper = <CODE>; SearchDict = null; SearchXapian = <CODE>; SelfLoader = null; Sereal = <CODE>; SerealDecoder = <CODE>; SerealEncoder = <CODE>; ServerStarter = <CODE>; SessionToken = <CODE>; SetInfinite = <CODE>; SetIntSpan = <CODE>; SetObject = <CODE>; SetScalar = <CODE>; ShellCommand = <CODE>; ShellConfigGenerate = <CODE>; ShellGuess = <CODE>; SignalMask = <CODE>; SmartComments = <CODE>; SnowballNorwegian = <CODE>; SnowballSwedish = <CODE>; Socket = null; Socket6 = <CODE>; SoftwareLicense = <CODE>; SoftwareLicenseCCpack = <CODE>; SortKey = <CODE>; SortNaturally = <CODE>; SortVersions = <CODE>; Specio = <CODE>; SpecioLibraryPathTiny = <CODE>; Spiffy = <CODE>; SpreadsheetCSV = <CODE>; SpreadsheetParseExcel = <CODE>; SpreadsheetWriteExcel = <CODE>; Starlet = <CODE>; Starman = <CODE>; StatisticsBasic = <CODE>; StatisticsCaseResampling = <CODE>; StatisticsChiSquare = <CODE>; StatisticsDescriptive = <CODE>; StatisticsDistributions = <CODE>; StatisticsTTest = <CODE>; Storable = null; StreamBuffered = <CODE>; StringApprox = <CODE>; StringCRC32 = <CODE>; StringCamelCase = <CODE>; StringCompareConstantTime = <CODE>; StringDiff = <CODE>; StringErrf = <CODE>; StringEscape = <CODE>; StringFlogger = <CODE>; StringFormat = <CODE>; StringFormatter = <CODE>; StringInterpolate = <CODE>; StringInterpolateNamed = <CODE>; StringMkPasswd = <CODE>; StringRandom = <CODE>; StringRewritePrefix = <CODE>; StringShellQuote = <CODE>; StringSimilarity = <CODE>; StringTT = <CODE>; StringToIdentifierEN = <CODE>; StringTruncate = <CODE>; StringUtil = <CODE>; StructDumb = <CODE>; SubExporter = <CODE>; SubExporterForMethods = <CODE>; SubExporterGlobExporter = <CODE>; SubExporterProgressive = <CODE>; SubExporterUtil = <CODE>; SubHandlesVia = <CODE>; SubIdentify = <CODE>; SubInfo = <CODE>; SubInstall = <CODE>; SubName = <CODE>; SubOverride = <CODE>; SubQuote = <CODE>; SubStrictDecl = <CODE>; SubUplevel = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Sub-Uplevel-0.2800"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Sub-Uplevel"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.2800"; }; Swim = <CODE>; Switch = <CODE>; SymbolGet = <CODE>; SymbolGlobalName = <CODE>; SymbolUtil = <CODE>; SyntaxKeywordJunction = <CODE>; SyntaxKeywordTry = <CODE>; SysCPU = <CODE>; SysHostnameLong = <CODE>; SysMemInfo = <CODE>; SysMmap = <CODE>; SysSigAction = <CODE>; SysSyslog = <CODE>; SysVirt = <CODE>; SystemCommand = <CODE>; TAPParserSourceHandlerpgTAP = <CODE>; TaskCatalystTutorial = <CODE>; TaskFreecellSolverTesting = <CODE>; TaskPlack = <CODE>; TaskTestRunAllPlugins = <CODE>; TaskWeaken = <CODE>; Tcl = <CODE>; TclpTk = <CODE>; TemplateGD = <CODE>; TemplatePluginAutoformat = <CODE>; TemplatePluginClass = <CODE>; TemplatePluginIOAll = <CODE>; TemplatePluginJSONEscape = <CODE>; TemplatePluginJavaScript = <CODE>; TemplateTimer = <CODE>; TemplateTiny = <CODE>; TemplateToolkit = <CODE>; TermANSIColor = null; TermAnimation = <CODE>; TermCap = null; TermEncoding = <CODE>; TermProgressBar = <CODE>; TermProgressBarQuiet = <CODE>; TermProgressBarSimple = <CODE>; TermReadKey = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-TermReadKey-2.38"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "TermReadKey"; postConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "TermReadKey-2.38.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WmRYeNxXCsM2YVgfuwkP8k684X1D6lP9IuEFqFakcpA="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/J/JS/JSTOWE/TermReadKey-2.38.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "TermReadKey-2.38.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/g2ph56wdhllhd36v21zm7m9dw905b67p-TermReadKey-2.38.tar.gz"; outputHash = "sha256-WmRYeNxXCsM2YVgfuwkP8k684X1D6lP9IuEFqFakcpA="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/J/JS/JSTOWE/TermReadKey-2.38.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/J/JS/JSTOWE/TermReadKey-2.38.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.38"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-TermReadKey-2.38"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-TermReadKey-2.38"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "TermReadKey"; postConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.38"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "TermReadKey"; postConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.38"; }; TermReadLineGnu = <CODE>; TermReadLineTTYtter = <CODE>; TermReadPassword = <CODE>; TermShell = <CODE>; TermShellUI = <CODE>; TermSizeAny = <CODE>; TermSizePerl = <CODE>; TermSk = <CODE>; TermTable = <CODE>; TermUI = <CODE>; TermVT102 = <CODE>; TermVT102Boundless = <CODE>; Test = null; Test2Harness = <CODE>; Test2PluginMemUsage = <CODE>; Test2PluginNoWarnings = <CODE>; Test2PluginUUID = <CODE>; Test2Suite = <CODE>; TestAbortable = <CODE>; TestAggregate = <CODE>; TestAssert = <CODE>; TestAssertions = <CODE>; TestBase = <CODE>; TestBits = <CODE>; TestCPANMeta = <CODE>; TestCPANMetaJSON = <CODE>; TestCheckDeps = <CODE>; TestClass = <CODE>; TestClassMost = <CODE>; TestCleanNamespaces = <CODE>; TestCmd = <CODE>; TestCommand = <CODE>; TestCompile = <CODE>; TestDataSplit = <CODE>; TestDeep = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Deep-1.130"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Test-Deep"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.130"; }; TestDeepJSON = <CODE>; TestDeepType = <CODE>; TestDifferences = <CODE>; TestDir = <CODE>; TestDistManifest = <CODE>; TestEOL = <CODE>; TestException = <CODE>; TestExpect = <CODE>; TestFailWarnings = <CODE>; TestFakeHTTPD = <CODE>; TestFatal = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Fatal-0.016"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Test-Fatal"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.016"; }; TestFile = <CODE>; TestFileContents = <CODE>; TestFileShareDir = <CODE>; TestFilename = <CODE>; TestFork = <CODE>; TestHTTPServerSimple = <CODE>; TestHarness = null; TestHarnessStraps = <CODE>; TestHexDifferences = <CODE>; TestHexString = <CODE>; TestIdentity = <CODE>; TestInDistDir = <CODE>; TestInter = <CODE>; TestJSON = <CODE>; TestKwalitee = <CODE>; TestLWPUserAgent = <CODE>; TestLeakTrace = <CODE>; TestLectroTest = <CODE>; TestLoadAllModules = <CODE>; TestLongString = <CODE>; TestManifest = <CODE>; TestMemoryCycle = <CODE>; TestMemoryGrowth = <CODE>; TestMetricsAny = <CODE>; TestMinimumVersion = <CODE>; TestMockClass = <CODE>; TestMockGuard = <CODE>; TestMockHTTPTiny = <CODE>; TestMockModule = <CODE>; TestMockObject = <CODE>; TestMockTime = <CODE>; TestMockTimeHiRes = <CODE>; TestMojibake = <CODE>; TestMoose = <CODE>; TestMore = <CODE>; TestMoreUTF8 = <CODE>; TestMost = <CODE>; TestNeeds = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Needs-0.002006"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Test-Needs"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.002006"; }; TestNoTabs = <CODE>; TestNoWarnings = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-NoWarnings-1.04"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Test-NoWarnings"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.04"; }; TestNumberDelta = <CODE>; TestObject = <CODE>; TestOutput = <CODE>; TestPAUSEPermissions = <CODE>; TestPerlCritic = <CODE>; TestPerlTidy = <CODE>; TestPod = <CODE>; TestPodCoverage = <CODE>; TestPodLinkCheck = <CODE>; TestPodNo404s = <CODE>; TestPortabilityFiles = <CODE>; TestPostgreSQL = <CODE>; TestRefcount = <CODE>; TestRequires = <CODE>; TestRequiresGit = <CODE>; TestRequiresInternet = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-RequiresInternet-0.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Test-RequiresInternet"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.05"; }; TestRoo = <CODE>; TestRoutine = <CODE>; TestRun = <CODE>; TestRunCmdLine = <CODE>; TestRunPluginAlternateInterpreters = <CODE>; TestRunPluginBreakOnFailure = <CODE>; TestRunPluginColorFileVerdicts = <CODE>; TestRunPluginColorSummary = <CODE>; TestRunPluginTrimDisplayedFilenames = <CODE>; TestRunValgrind = <CODE>; TestScript = <CODE>; TestScriptRun = <CODE>; TestSharedFork = <CODE>; TestSimple = null; TestSimple13 = <CODE>; TestSnapshot = <CODE>; TestSpec = <CODE>; TestSubCalls = <CODE>; TestSynopsis = <CODE>; TestTCP = <CODE>; TestTableDriven = <CODE>; TestTempDirTiny = <CODE>; TestTester = <CODE>; TestTime = <CODE>; TestToolbox = <CODE>; TestTrailingSpace = <CODE>; TestTrap = <CODE>; TestUNIXSock = <CODE>; TestUnitLite = <CODE>; TestUseAllModules = <CODE>; TestValgrind = <CODE>; TestVars = <CODE>; TestVersion = <CODE>; TestWWWMechanize = <CODE>; TestWWWMechanizeCGI = <CODE>; TestWWWMechanizeCatalyst = <CODE>; TestWWWMechanizePSGI = <CODE>; TestWarn = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Test-Warn-0.36"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Test-Warn"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.36"; }; TestWarnings = <CODE>; TestWeaken = <CODE>; TestWithoutModule = <CODE>; TestXPath = <CODE>; TestYAML = <CODE>; Testmysqld = <CODE>; Testuseok = <CODE>; Testutf8 = <CODE>; TextAbbrev = null; TextAligner = <CODE>; TextAspell = <CODE>; TextAutoformat = <CODE>; TextBalanced = <CODE>; TextBibTeX = <CODE>; TextBrew = <CODE>; TextCSV = <CODE>; TextCSVEncoded = <CODE>; TextCSV_XS = <CODE>; TextCharWidth = <CODE>; TextDiff = <CODE>; TextDiffFormattedHTML = <CODE>; TextFormat = <CODE>; TextFuzzy = <CODE>; TextGerman = <CODE>; TextGlob = <CODE>; TextHogan = <CODE>; TextIconv = <CODE>; TextLayout = <CODE>; TextLevenshteinXS = <CODE>; TextLorem = <CODE>; TextMarkdown = <CODE>; TextMarkdownHoedown = <CODE>; TextMicroTemplate = <CODE>; TextMultiMarkdown = <CODE>; TextNSP = <CODE>; TextPDF = <CODE>; TextParsewords = <CODE>; TextPasswordPronounceable = <CODE>; TextPatch = <CODE>; TextQuoted = <CODE>; TextRecordParser = <CODE>; TextReflow = <CODE>; TextReform = <CODE>; TextRoman = <CODE>; TextSimpleTable = <CODE>; TextSoundex = <CODE>; TextSprintfNamed = <CODE>; TextTable = <CODE>; TextTabsWrap = null; TextTabularDisplay = <CODE>; TextTemplate = <CODE>; TextTrim = <CODE>; TextUnaccent = <CODE>; TextUnidecode = <CODE>; TextWikiFormat = <CODE>; TextWordDiff = <CODE>; TextWrapI18N = <CODE>; TextWrapper = <CODE>; TextvFileasData = <CODE>; ThreadQueue = null; ThreadSemaphore = null; Throwable = <CODE>; TieCacheLRU = <CODE>; TieCacheLRUExpires = <CODE>; TieCycle = <CODE>; TieEncryptedHash = <CODE>; TieFile = <CODE>; TieHandleOffset = <CODE>; TieHashIndexed = <CODE>; TieHashMethod = <CODE>; TieIxHash = <CODE>; TieRefHash = <CODE>; TieRegexpHash = <CODE>; TieSimple = <CODE>; TieSub = <CODE>; TieToObject = <CODE>; TimeDate = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-TimeDate-2.33"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "TimeDate"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.33"; }; TimeDuration = <CODE>; TimeDurationParse = <CODE>; TimeHiRes = null; TimeLocal = <CODE>; TimeMoment = <CODE>; TimeOut = <CODE>; TimeParseDate = <CODE>; TimePeriod = <CODE>; TimePiece = <CODE>; Tirex = <CODE>; Tk = <CODE>; TkToolBar = <CODE>; TreeDAGNode = <CODE>; TreeSimple = <CODE>; TreeSimpleVisitorFactory = <CODE>; TryTiny = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-Try-Tiny-0.30"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "Try-Tiny"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.30"; }; TryTinyByClass = <CODE>; Twiggy = <CODE>; TypeTiny = <CODE>; TypeTinyXS = <CODE>; TypesSerialiser = <CODE>; UNIVERSALcan = <CODE>; UNIVERSALisa = <CODE>; UNIVERSALrequire = <CODE>; URI = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-URI-5.05"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "URI"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "5.05"; }; URIEscapeXS = <CODE>; URIFind = <CODE>; URIFromHash = <CODE>; URIIMAP = <CODE>; URINested = <CODE>; URISmartURI = <CODE>; URITemplate = <CODE>; URIcpan = <CODE>; URIdb = <CODE>; URIws = <CODE>; UUID4Tiny = <CODE>; UUIDTiny = <CODE>; UUIDURandom = <CODE>; UnicodeCaseFold = <CODE>; UnicodeCheckUTF8 = <CODE>; UnicodeCollate = null; UnicodeLineBreak = <CODE>; UnicodeNormalize = null; UnicodeString = <CODE>; UnicodeStringprep = <CODE>; UnicodeUTF8 = <CODE>; UnixGetrusage = <CODE>; UriGoogleChart = <CODE>; UserIdentity = <CODE>; VMEC2 = <CODE>; VMEC2SecurityCredentialCache = <CODE>; VariableMagic = <CODE>; Version = <CODE>; W3CLinkChecker = <CODE>; WWWCurl = <CODE>; WWWFormUrlEncoded = <CODE>; WWWMechanize = <CODE>; WWWMechanizeCGI = <CODE>; WWWRobotRules = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-WWW-RobotRules-6.02"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "WWW-RobotRules"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "6.02"; }; WWWTwilioAPI = <CODE>; WWWYoutubeViewer = <CODE>; Want = <CODE>; WebMachine = <CODE>; WebServiceLinode = <CODE>; WebServiceValidatorHTMLW3C = <CODE>; Win32ShellQuote = <CODE>; Workflow = <CODE>; Wx = <CODE>; WxGLCanvas = <CODE>; X11GUITest = <CODE>; X11IdleTime = <CODE>; X11Protocol = <CODE>; X11ProtocolOther = <CODE>; X11XCB = <CODE>; XMLCanonicalizeXML = <CODE>; XMLDOM = <CODE>; XMLDescent = <CODE>; XMLEncoding = <CODE>; XMLFeedPP = <CODE>; XMLFilterBufferText = <CODE>; XMLFilterSort = <CODE>; XMLFilterXInclude = <CODE>; XMLGrove = <CODE>; XMLHandlerYAWriter = <CODE>; XMLLibXML = <CODE>; XMLLibXMLSimple = <CODE>; XMLLibXSLT = <CODE>; XMLMini = <CODE>; XMLNamespaceSupport = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-XML-NamespaceSupport-1.12"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "XML-NamespaceSupport"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "XML-NamespaceSupport-1.12.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-R+mVhZ+N0EE6o/ItNQxKYtplLoVCZ6oFhq5USuK65e8="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/P/PE/PERIGRIN/XML-NamespaceSupport-1.12.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "XML-NamespaceSupport-1.12.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/v9yxwyifdb212pg2baj6akqvdnsfspyq-XML-NamespaceSupport-1.12.tar.gz"; outputHash = "sha256-R+mVhZ+N0EE6o/ItNQxKYtplLoVCZ6oFhq5USuK65e8="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/P/PE/PERIGRIN/XML-NamespaceSupport-1.12.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/P/PE/PERIGRIN/XML-NamespaceSupport-1.12.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.12"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-NamespaceSupport-1.12"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-NamespaceSupport-1.12"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/626irlx24im7x7fxsgnc90gww98dgphr-perl5.36.0-XML-NamespaceSupport-1.12"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "XML-NamespaceSupport"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.12"; }; outPath = "/nix/store/626irlx24im7x7fxsgnc90gww98dgphr-perl5.36.0-XML-NamespaceSupport-1.12"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "XML-NamespaceSupport"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.12"; }; XMLParser = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; makeMakerFlags = [ "EXPATLIBPATH=/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib" "EXPATINCPATH=/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include" ]; mesonFlags = [ ]; name = "perl5.36.0-XML-Parser-2.46"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/xml-parser-0001-HACK-Assumes-Expat-paths-are-good.patch ]; pname = "XML-Parser"; postPatch = ""; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "XML-Parser-2.46.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-0zEzJJHFHMz7TLlP/ET5zXM3jmGEmNSjffngQ2YcUV0="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/T/TO/TODDR/XML-Parser-2.46.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "XML-Parser-2.46.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/qmfwv8kx7dxihx6x47lcs5qnfq1x6m9w-XML-Parser-2.46.tar.gz"; outputHash = "sha256-0zEzJJHFHMz7TLlP/ET5zXM3jmGEmNSjffngQ2YcUV0="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/T/TO/TODDR/XML-Parser-2.46.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/T/TO/TODDR/XML-Parser-2.46.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.46"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; makeMakerFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-Parser-2.46"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; makeMakerFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-Parser-2.46"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/4sgh4hvjw1myqbcj637h33y31zb1s3bq-perl5.36.0-XML-Parser-2.46"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = «repeated»; perlModule = «repeated»; pname = "XML-Parser"; postPatch = ""; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.46"; }; outPath = "/nix/store/4sgh4hvjw1myqbcj637h33y31zb1s3bq-perl5.36.0-XML-Parser-2.46"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; perlModule = «repeated»; pname = "XML-Parser"; postPatch = ""; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.46"; }; XMLParserLite = <CODE>; XMLRPCLite = <CODE>; XMLRSS = <CODE>; XMLRegExp = <CODE>; XMLRules = <CODE>; XMLSAX = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-XML-SAX-1.02"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "XML-SAX"; postInstall = "perl -MXML::SAX -e \"XML::SAX->add_parser(q(XML::SAX::PurePerl))->save_parsers()\"\n"; propagatedBuildInputs = [ «repeated» { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/perl-modules/generic/builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; fullperl = «repeated»; mesonFlags = [ ]; name = "perl5.36.0-XML-SAX-Base-1.09"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "devdoc" ]; patches = [ ]; pname = "XML-SAX-Base"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "XML-SAX-Base-1.09.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Zss1W6TvR8EMpzi9NZmXI2RDhqyFOrvrUTKEH16KKtA="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/G/GR/GRANTM/XML-SAX-Base-1.09.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "XML-SAX-Base-1.09.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/f8572vr1nyvghhzgaakzpxi9r9kaxgk9-XML-SAX-Base-1.09.tar.gz"; outputHash = "sha256-Zss1W6TvR8EMpzi9NZmXI2RDhqyFOrvrUTKEH16KKtA="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/G/GR/GRANTM/XML-SAX-Base-1.09.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/G/GR/GRANTM/XML-SAX-Base-1.09.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.09"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-SAX-Base-1.09"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/gvlnx15ml59aj7lnylixdmxdg8xrh185-perl5.36.0-XML-SAX-Base-1.09"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "XML-SAX-Base"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.09"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "XML-SAX-1.02.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-RQbDhwQ6pqd7RV8A9XQJ83IKp+VTSVqyU1JjtO0eoSo="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://cpan/authors/id/G/GR/GRANTM/XML-SAX-1.02.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "XML-SAX-1.02.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/jyyiymaxx89bpyvkaaziqq00pl0i99yb-XML-SAX-1.02.tar.gz"; outputHash = "sha256-RQbDhwQ6pqd7RV8A9XQJ83IKp+VTSVqyU1JjtO0eoSo="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://cpan/authors/id/G/GR/GRANTM/XML-SAX-1.02.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://cpan/authors/id/G/GR/GRANTM/XML-SAX-1.02.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.02"; }; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-SAX-1.02"; nativeBuildInputs = «repeated»; out = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-SAX-1.02"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/8v08amwgdx8fxzf8llia87a4cz6sd1gw-perl5.36.0-XML-SAX-1.02"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { perlModule = «repeated»; requiredPerlModules = <CODE>; }; patches = [ ]; perlModule = «repeated»; pname = "XML-SAX"; postInstall = "perl -MXML::SAX -e \"XML::SAX->add_parser(q(XML::SAX::PurePerl))->save_parsers()\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.02"; }; outPath = "/nix/store/8v08amwgdx8fxzf8llia87a4cz6sd1gw-perl5.36.0-XML-SAX-1.02"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "XML-SAX"; postInstall = "perl -MXML::SAX -e \"XML::SAX->add_parser(q(XML::SAX::PurePerl))->save_parsers()\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.02"; }; XMLSAXBase = { AUTOMATED_TESTING = true; PERL_AUTOINSTALL = "--skipdeps"; PERL_USE_UNSAFE_INC = "1"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; devdoc = <CODE>; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = false; fullperl = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "perl5.36.0-XML-SAX-Base-1.09"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; perlModule = «repeated»; pname = "XML-SAX-Base"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; requiredPerlModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.09"; }; XMLSAXExpat = <CODE>; XMLSAXWriter = <CODE>; XMLSemanticDiff = <CODE>; XMLSimple = <CODE>; XMLTokeParser = <CODE>; XMLTreePP = <CODE>; XMLTwig = <CODE>; XMLValidatorSchema = <CODE>; XMLWriter = <CODE>; XMLXPath = <CODE>; XMLXPathEngine = <CODE>; XSLoader = null; XSObjectMagic = <CODE>; XSParseKeyword = <CODE>; XSParseSublike = <CODE>; XXX = <CODE>; YAML = <CODE>; YAMLLibYAML = <CODE>; YAMLOld = <CODE>; YAMLPP = <CODE>; YAMLSyck = <CODE>; YAMLTiny = <CODE>; ZonemasterCLI = <CODE>; ZonemasterEngine = <CODE>; ZonemasterLDNS = <CODE>; ack = <CODE>; aliased = <CODE>; asa = <CODE>; autobox = <CODE>; autodie = null; autovivification = <CODE>; base = null; bignum = null; boolean = <CODE>; buildPerlModule = <LAMBDA>; buildPerlPackage = { __functionArgs = <CODE>; __functor = <LAMBDA>; override = <CODE>; }; callPackage = <LAMBDA>; cam_pdf = <CODE>; capitalization = <CODE>; commonsense = <CODE>; constant = null; constant-defer = <CODE>; constantboolean = <CODE>; constantdefer = <CODE>; curry = <CODE>; enum = <CODE>; gotofile = <CODE>; grepmail = <CODE>; ham = <CODE>; hasPerlModule = <CODE>; iCalParser = <CODE>; "if" = null; if_ = <CODE>; lib_ = null; libapreq2 = <CODE>; libintl-perl = <CODE>; libintl_perl = <CODE>; libintlperl = <CODE>; libnet = <CODE>; librelative = <CODE>; libxml_perl = <CODE>; locallib = <CODE>; maatkit = <CODE>; makeFullPerlPath = <LAMBDA>; makePerlPath = <LAMBDA>; mimeConstruct = <CODE>; mod_perl2 = <CODE>; namespaceautoclean = <CODE>; namespaceclean = <CODE>; override = <CODE>; overrideDerivation = <CODE>; pcscperl = <CODE>; perl = «repeated»; perlPackages = { AWSSignature4 = <CODE>; ActionCircuitBreaker = <CODE>; ActionRetry = <CODE>; AlgorithmAnnotate = <CODE>; AlgorithmC3 = <CODE>; AlgorithmCheckDigits = <CODE>; AlgorithmDiff = <CODE>; AlgorithmLCSS = <CODE>; AlgorithmMerge = <CODE>; AlienBaseModuleBuild = <CODE>; AlienBuild = <CODE>; AlienGMP = <CODE>; AlienLibGumbo = <CODE>; AlienLibxml2 = <CODE>; AlienSDL = <CODE>; AlienTidyp = <CODE>; AlienWxWidgets = <CODE>; Alienm4 = <CODE>; Alienpatch = <CODE>; AltCryptRSABigInt = <CODE>; AnyEvent = <CODE>; AnyEventAIO = <CODE>; AnyEventBDB = <CODE>; AnyEventCacheDNS = <CODE>; AnyEventFastPing = <CODE>; AnyEventHTTP = <CODE>; AnyEventI3 = <CODE>; AnyEventIRC = <CODE>; AnyEventRabbitMQ = <CODE>; AnyMoose = <CODE>; AnyURIEscape = <CODE>; ApacheAuthCookie = <CODE>; ApacheDB = <CODE>; ApacheLogFormatCompiler = <CODE>; ApacheSession = <CODE>; ApacheTest = <CODE>; AppCLI = <CODE>; AppClusterSSH = <CODE>; AppCmd = <CODE>; AppConfig = <CODE>; AppFatPacker = <CODE>; AppMusicChordPro = <CODE>; AppPackager = <CODE>; AppSqitch = <CODE>; AppSt = <CODE>; Appcpanminus = <CODE>; Appcpm = <CODE>; Applify = <CODE>; Appperlbrew = <CODE>; Apprainbarf = <CODE>; ArchiveAnyLite = <CODE>; ArchiveCpio = <CODE>; ArchiveExtract = <CODE>; ArchiveTar = <CODE>; ArchiveTarWrapper = <CODE>; ArchiveZip = <CODE>; ArchiveZip_1_53 = <CODE>; ArrayCompare = <CODE>; ArrayDiff = <CODE>; ArrayFIFO = <CODE>; ArrayRefElem = <CODE>; AstroFITSHeader = <CODE>; AsyncPing = <CODE>; AttributeHandlers = null; AttributeParamsValidate = <CODE>; AudioFLACHeader = <CODE>; AudioScan = <CODE>; AuthenDecHpwd = <CODE>; AuthenHtpasswd = <CODE>; AuthenKrb5 = <CODE>; AuthenKrb5Admin = <CODE>; AuthenModAuthPubTkt = <CODE>; AuthenOATH = <CODE>; AuthenPassphrase = <CODE>; AuthenRadius = <CODE>; AuthenSASL = <CODE>; AuthenSASLSASLprep = <CODE>; AuthenSCRAM = <CODE>; AuthenSimple = <CODE>; AuthenSimplePasswd = <CODE>; AutoLoader = null; Autobox = <CODE>; Autodia = <CODE>; BC = <CODE>; BCOW = <CODE>; BDB = <CODE>; BFlags = <CODE>; BHooksEndOfScope = <CODE>; BHooksOPAnnotation = <CODE>; BHooksOPCheck = <CODE>; BKeywords = <CODE>; BSDResource = <CODE>; BSON = <CODE>; BSONXS = <CODE>; BUtils = <CODE>; BarcodeZBar = <CODE>; BeanstalkClient = <CODE>; BerkeleyDB = <CODE>; BioExtAlign = <CODE>; BioPerl = <CODE>; BitVector = <CODE>; BoostGeometryUtils = <CODE>; BotTraining = <CODE>; BotTrainingMegaHAL = <CODE>; BotTrainingStarCraft = <CODE>; BusinessHours = <CODE>; BusinessISBN = <CODE>; BusinessISBNData = <CODE>; BusinessISMN = <CODE>; BusinessISSN = <CODE>; BytesRandomSecure = <CODE>; BytesRandomSecureTiny = <CODE>; CDB_File = <CODE>; CDDBFile = <CODE>; CDDB_get = <CODE>; CGI = «repeated»; CGICompile = <CODE>; CGICookieXS = <CODE>; CGIEmulatePSGI = <CODE>; CGIExpand = <CODE>; CGIFast = «repeated»; CGIFormBuilder = <CODE>; CGIMinimal = <CODE>; CGIPSGI = <CODE>; CGISession = <CODE>; CGISimple = <CODE>; CGIStruct = <CODE>; CHI = <CODE>; CLASS = <CODE>; CLDRNumber = <CODE>; CLIHelpers = <CODE>; CPAN = <CODE>; CPAN02PackagesSearch = <CODE>; CPANChanges = <CODE>; CPANChecksums = <CODE>; CPANCommonIndex = <CODE>; CPANDistnameInfo = <CODE>; CPANMeta = null; CPANMetaCheck = «repeated»; CPANMetaRequirements = null; CPANMetaYAML = null; CPANMini = <CODE>; CPANPLUS = <CODE>; CPANPerlReleases = <CODE>; CPANUploader = <CODE>; CSSDOM = <CODE>; CSSMinifier = <CODE>; CSSMinifierXS = <CODE>; CSSSquish = <CODE>; CacheCache = <CODE>; CacheFastMmap = <CODE>; CacheKyotoTycoon = <CODE>; CacheMemcached = <CODE>; CacheMemcachedFast = <CODE>; CacheMemory = <CODE>; CacheSimpleTimedExpiry = <CODE>; Cairo = <CODE>; CairoGObject = <CODE>; CallContext = <CODE>; CanaryStability = <CODE>; CaptchaReCAPTCHA = <CODE>; CaptureTiny = «repeated»; Carp = null; CarpAlways = <CODE>; CarpAssert = <CODE>; CarpAssertMore = <CODE>; CarpClan = <CODE>; Carton = <CODE>; CatalystActionREST = <CODE>; CatalystActionRenderView = <CODE>; CatalystAuthenticationCredentialHTTP = <CODE>; CatalystAuthenticationStoreDBIxClass = <CODE>; CatalystAuthenticationStoreHtpasswd = <CODE>; CatalystAuthenticationStoreLDAP = <CODE>; CatalystComponentInstancePerContext = <CODE>; CatalystControllerHTMLFormFu = <CODE>; CatalystControllerPOD = <CODE>; CatalystDevel = <CODE>; CatalystDispatchTypeRegex = <CODE>; CatalystManual = <CODE>; CatalystModelDBICSchema = <CODE>; CatalystPluginAccessLog = <CODE>; CatalystPluginAuthentication = <CODE>; CatalystPluginAuthorizationACL = <CODE>; CatalystPluginAuthorizationRoles = <CODE>; CatalystPluginCache = <CODE>; CatalystPluginCacheHTTP = <CODE>; CatalystPluginCaptcha = <CODE>; CatalystPluginConfigLoader = <CODE>; CatalystPluginFormValidator = <CODE>; CatalystPluginFormValidatorSimple = <CODE>; CatalystPluginLogHandler = <CODE>; CatalystPluginPrometheusTiny = <CODE>; CatalystPluginSession = <CODE>; CatalystPluginSessionDynamicExpiry = <CODE>; CatalystPluginSessionStateCookie = <CODE>; CatalystPluginSessionStoreFastMmap = <CODE>; CatalystPluginSessionStoreFile = <CODE>; CatalystPluginSmartURI = <CODE>; CatalystPluginStackTrace = <CODE>; CatalystPluginStaticSimple = <CODE>; CatalystPluginStatusMessage = <CODE>; CatalystPluginUnicodeEncoding = <CODE>; CatalystRuntime = <CODE>; CatalystTraitForRequestProxyBase = <CODE>; CatalystViewCSV = <CODE>; CatalystViewDownload = <CODE>; CatalystViewJSON = <CODE>; CatalystViewTT = <CODE>; CatalystXComponentTraits = <CODE>; CatalystXRoleApplicator = <CODE>; CatalystXScriptServerStarman = <CODE>; Catmandu = <CODE>; Chart = <CODE>; CiscoIPPhone = <CODE>; ClassAccessor = <CODE>; ClassAccessorChained = <CODE>; ClassAccessorFast = <CODE>; ClassAccessorGrouped = <CODE>; ClassAccessorLite = <CODE>; ClassAutouse = <CODE>; ClassBase = <CODE>; ClassC3 = <CODE>; ClassC3AdoptNEXT = <CODE>; ClassC3Componentised = <CODE>; ClassClassgenclassgen = <CODE>; ClassContainer = <CODE>; ClassDataAccessor = <CODE>; ClassDataInheritable = <CODE>; ClassEHierarchy = <CODE>; ClassFactory = <CODE>; ClassFactoryUtil = <CODE>; ClassGomor = <CODE>; ClassISA = <CODE>; ClassInspector = «repeated»; ClassIterator = <CODE>; ClassLoad = <CODE>; ClassLoadXS = <CODE>; ClassLoader = <CODE>; ClassMOP = <CODE>; ClassMakeMethods = <CODE>; ClassMethodMaker = <CODE>; ClassMethodModifiers = <CODE>; ClassMix = <CODE>; ClassObservable = <CODE>; ClassReturnValue = <CODE>; ClassSingleton = <CODE>; ClassStd = <CODE>; ClassStdFast = <CODE>; ClassThrowable = <CODE>; ClassTiny = <CODE>; ClassUnload = <CODE>; ClassVirtual = <CODE>; ClassXSAccessor = <CODE>; Clipboard = <CODE>; Clone = <CODE>; CloneChoose = <CODE>; ClonePP = <CODE>; CodeTidyAll = <CODE>; CodeTidyAllPluginPerlAlignMooseAttributes = <CODE>; ColorLibrary = <CODE>; CommandRunner = <CODE>; CommonSense = <CODE>; CompressBzip2 = <CODE>; CompressLZF = <CODE>; CompressRawBzip2 = <CODE>; CompressRawLzma = <CODE>; CompressRawZlib = <CODE>; CompressUnLZMA = <CODE>; CompressZlib = <CODE>; ConfigAny = <CODE>; ConfigAutoConf = <CODE>; ConfigGeneral = <CODE>; ConfigGitLike = <CODE>; ConfigGrammar = <CODE>; ConfigINI = <CODE>; ConfigIdentity = <CODE>; ConfigIniFiles = <CODE>; ConfigMVP = <CODE>; ConfigMVPReaderINI = <CODE>; ConfigMerge = <CODE>; ConfigOnion = <CODE>; ConfigProperties = <CODE>; ConfigSimple = <CODE>; ConfigStd = <CODE>; ConfigTiny = <CODE>; ConfigVersioned = <CODE>; Connector = <CODE>; ConstFast = <CODE>; ContextPreserve = <CODE>; ConvertASCIIArmour = <CODE>; ConvertASN1 = <CODE>; ConvertBase32 = <CODE>; ConvertBencode = <CODE>; ConvertColor = <CODE>; ConvertUU = <CODE>; CookieBaker = <CODE>; CookieXS = <CODE>; Coro = <CODE>; CoroEV = <CODE>; Corona = <CODE>; CpanelJSONXS = <CODE>; CryptArgon2 = <CODE>; CryptBlowfish = <CODE>; CryptCAST5_PP = <CODE>; CryptCBC = <CODE>; CryptCurve25519 = <CODE>; CryptDES = <CODE>; CryptDES_EDE3 = <CODE>; CryptDH = <CODE>; CryptDHGMP = <CODE>; CryptDSA = <CODE>; CryptECB = <CODE>; CryptEd25519 = <CODE>; CryptEksblowfish = <CODE>; CryptFormat = <CODE>; CryptIDEA = <CODE>; CryptJWT = <CODE>; CryptMySQL = <CODE>; CryptOpenPGP = <CODE>; CryptOpenSSLAES = <CODE>; CryptOpenSSLBignum = <CODE>; CryptOpenSSLGuess = <CODE>; CryptOpenSSLRSA = <CODE>; CryptOpenSSLRandom = <CODE>; CryptOpenSSLX509 = <CODE>; CryptPBKDF2 = <CODE>; CryptPKCS10 = <CODE>; CryptPassphrase = <CODE>; CryptPassphraseArgon2 = <CODE>; CryptPassphraseBcrypt = <CODE>; CryptPasswdMD5 = <CODE>; CryptPerl = <CODE>; CryptRC4 = <CODE>; CryptRIPEMD160 = <CODE>; CryptRandPasswd = <CODE>; CryptRandom = <CODE>; CryptRandomSeed = <CODE>; CryptRandomSource = <CODE>; CryptRandomTESHA2 = <CODE>; CryptRijndael = <CODE>; CryptSSLeay = <CODE>; CryptScryptKDF = <CODE>; CryptSmbHash = <CODE>; CryptSodium = <CODE>; CryptTwofish = <CODE>; CryptURandom = <CODE>; CryptUnixCryptXS = <CODE>; CryptX = <CODE>; CryptX509 = <CODE>; Curses = <CODE>; CursesUI = <CODE>; CursesUIGrid = <CODE>; CwdGuard = <CODE>; DBDCSV = <CODE>; DBDMariaDB = <CODE>; DBDMock = <CODE>; DBDOracle = <CODE>; DBDPg = <CODE>; DBDSQLite = <CODE>; DBDmysql = <CODE>; DBDsybase = <CODE>; DBFile = <CODE>; DBI = <CODE>; DBICxTestDatabase = <CODE>; DBIxClass = <CODE>; DBIxClassCandy = <CODE>; DBIxClassCursorCached = <CODE>; DBIxClassDynamicDefault = <CODE>; DBIxClassHTMLWidget = <CODE>; DBIxClassHelpers = <CODE>; DBIxClassInflateColumnSerializer = <CODE>; DBIxClassIntrospectableM2M = <CODE>; DBIxClassSchemaLoader = <CODE>; DBIxConnector = <CODE>; DBIxDBSchema = <CODE>; DBIxIntrospector = <CODE>; DBIxSearchBuilder = <CODE>; DBIxSimple = <CODE>; DBMDeep = <CODE>; DataBinary = <CODE>; DataBuffer = <CODE>; DataClone = <CODE>; DataCompare = <CODE>; DataDump = <CODE>; DataDumper = null; DataDumperAutoEncode = <CODE>; DataDumperConcise = <CODE>; DataEntropy = <CODE>; DataFloat = <CODE>; DataFormValidator = <CODE>; DataGUID = <CODE>; DataHexDump = <CODE>; DataHexdumper = <CODE>; DataHierarchy = <CODE>; DataICal = <CODE>; DataIEEE754 = <CODE>; DataInteger = <CODE>; DataMessagePack = <CODE>; DataOptList = <CODE>; DataPage = <CODE>; DataPagePageset = <CODE>; DataPassword = <CODE>; DataPerl = <CODE>; DataPrinter = <CODE>; DataRandom = <CODE>; DataSExpression = <CODE>; DataSection = <CODE>; DataSectionSimple = <CODE>; DataSerializer = <CODE>; DataSpreadPagination = <CODE>; DataStag = <CODE>; DataStreamBulk = <CODE>; DataStructureUtil = <CODE>; DataTaxi = <CODE>; DataULID = <CODE>; DataURIEncode = <CODE>; DataUUID = <CODE>; DataUUIDMT = <CODE>; DataUniqid = <CODE>; DataUtil = <CODE>; DataValidateDomain = <CODE>; DataValidateIP = <CODE>; DataValidateURI = <CODE>; DataVisitor = <CODE>; DateCalc = <CODE>; DateExtract = <CODE>; DateManip = <CODE>; DateSimple = <CODE>; DateTime = <CODE>; DateTimeCalendarJulian = <CODE>; DateTimeEventICal = <CODE>; DateTimeEventRecurrence = <CODE>; DateTimeFormatBuilder = <CODE>; DateTimeFormatDateParse = <CODE>; DateTimeFormatFlexible = <CODE>; DateTimeFormatHTTP = <CODE>; DateTimeFormatICal = <CODE>; DateTimeFormatISO8601 = <CODE>; DateTimeFormatMail = <CODE>; DateTimeFormatMySQL = <CODE>; DateTimeFormatNatural = <CODE>; DateTimeFormatPg = <CODE>; DateTimeFormatRFC3339 = <CODE>; DateTimeFormatSQLite = <CODE>; DateTimeFormatStrptime = <CODE>; DateTimeFormatW3CDTF = <CODE>; DateTimeLocale = <CODE>; DateTimeSet = <CODE>; DateTimeTimeZone = <CODE>; DateTimeXEasy = <CODE>; DebugShowStuff = <CODE>; Deliantra = <CODE>; DevelCaller = <CODE>; DevelCamelcadedb = <CODE>; DevelCheckBin = <CODE>; DevelCheckCompiler = <CODE>; DevelCheckOS = <CODE>; DevelChecklib = <CODE>; DevelCycle = <CODE>; DevelDeclare = <CODE>; DevelFindPerl = <CODE>; DevelGlobalDestruction = <CODE>; DevelGlobalPhase = <CODE>; DevelHide = <CODE>; DevelLeak = <CODE>; DevelNYTProf = <CODE>; DevelOverloadInfo = <CODE>; DevelPPPort = <CODE>; DevelPartialDump = <CODE>; DevelPatchPerl = <CODE>; DevelRefcount = <CODE>; DevelSelfStubber = null; DevelSize = <CODE>; DevelStackTrace = <CODE>; DevelStackTraceAsHTML = <CODE>; DevelSymdump = <CODE>; DevelTrace = <CODE>; DeviceMAC = <CODE>; DeviceOUI = <CODE>; DeviceSerialPort = <CODE>; Digest = null; DigestCRC = <CODE>; DigestHMAC = <CODE>; DigestHMAC_SHA1 = <CODE>; DigestJHash = <CODE>; DigestMD2 = <CODE>; DigestMD4 = <CODE>; DigestMD5 = null; DigestMD5File = <CODE>; DigestPerlMD5 = <CODE>; DigestSHA = null; DigestSHA1 = <CODE>; DigestSHA3 = <CODE>; DigestSRI = <CODE>; DirManifest = <CODE>; DirSelf = <CODE>; DispatchClass = <CODE>; DistCheckConflicts = <CODE>; DistZilla = <CODE>; DistZillaPluginBundleTestingMania = <CODE>; DistZillaPluginCheckChangeLog = <CODE>; DistZillaPluginMojibakeTests = <CODE>; DistZillaPluginNoTabsTests = <CODE>; DistZillaPluginPodWeaver = <CODE>; DistZillaPluginReadmeAnyFromPod = <CODE>; DistZillaPluginReadmeMarkdownFromPod = <CODE>; DistZillaPluginTestCPANChanges = <CODE>; DistZillaPluginTestCPANMetaJSON = <CODE>; DistZillaPluginTestCompile = <CODE>; DistZillaPluginTestDistManifest = <CODE>; DistZillaPluginTestEOL = <CODE>; DistZillaPluginTestKwalitee = <CODE>; DistZillaPluginTestMinimumVersion = <CODE>; DistZillaPluginTestNoTabs = <CODE>; DistZillaPluginTestPerlCritic = <CODE>; DistZillaPluginTestPodLinkCheck = <CODE>; DistZillaPluginTestPortability = <CODE>; DistZillaPluginTestSynopsis = <CODE>; DistZillaPluginTestUnusedVars = <CODE>; DistZillaPluginTestVersion = <CODE>; DistZillaRoleFileWatcher = <CODE>; Dotenv = <CODE>; Dumbbench = <CODE>; EV = <CODE>; EmailAbstract = <CODE>; EmailAddress = <CODE>; EmailAddressList = <CODE>; EmailAddressXS = <CODE>; EmailDateFormat = <CODE>; EmailMIME = <CODE>; EmailMIMEAttachmentStripper = <CODE>; EmailMIMEContentType = <CODE>; EmailMIMEEncodings = <CODE>; EmailMIMEModifier = <CODE>; EmailMessageID = <CODE>; EmailOutlookMessage = <CODE>; EmailReply = <CODE>; EmailSend = <CODE>; EmailSender = <CODE>; EmailSimple = <CODE>; EmailStuffer = <CODE>; EmailValid = <CODE>; EmailValidLoose = <CODE>; Encode = <CODE>; EncodeBase32GMP = <CODE>; EncodeDetect = <CODE>; EncodeEUCJPASCII = <CODE>; EncodeHanExtra = <CODE>; EncodeIMAPUTF7 = <CODE>; EncodeJIS2K = <CODE>; EncodeLocale = «repeated»; EncodeNewlines = <CODE>; EncodePunycode = <CODE>; Env = <CODE>; EnvPath = <CODE>; EnvSanctify = <CODE>; Error = <CODE>; EvalClosure = <CODE>; ExcelWriterXLSX = <CODE>; ExceptionBase = <CODE>; ExceptionClass = <CODE>; ExceptionDied = <CODE>; ExceptionWarning = <CODE>; Expect = <CODE>; ExpectSimple = <CODE>; Exporter = null; ExporterDeclare = <CODE>; ExporterLite = <CODE>; ExporterTiny = <CODE>; ExtUtilsCBuilder = null; ExtUtilsCChecker = <CODE>; ExtUtilsCommand = <CODE>; ExtUtilsConfig = «repeated»; ExtUtilsConstant = <CODE>; ExtUtilsCppGuess = <CODE>; ExtUtilsDepends = <CODE>; ExtUtilsF77 = <CODE>; ExtUtilsHelpers = «repeated»; ExtUtilsInstall = <CODE>; ExtUtilsInstallPaths = «repeated»; ExtUtilsLibBuilder = <CODE>; ExtUtilsMakeMaker = <CODE>; ExtUtilsMakeMakerCPANfile = <CODE>; ExtUtilsManifest = null; ExtUtilsParseXS = null; ExtUtilsPkgConfig = <CODE>; ExtUtilsTypemap = <CODE>; ExtUtilsTypemapsDefault = <CODE>; ExtUtilsXSBuilder = <CODE>; ExtUtilsXSpp = <CODE>; FCGI = «repeated»; FCGIClient = <CODE>; FCGIProcManager = «repeated»; FFICheckLib = <CODE>; FatalException = <CODE>; FennecLite = <CODE>; FileBOM = <CODE>; FileBaseDir = <CODE>; FileChangeNotify = <CODE>; FileCheckTree = <CODE>; FileCopyRecursive = <CODE>; FileCopyRecursiveReduced = <CODE>; FileCountLines = <CODE>; FileDesktopEntry = <CODE>; FileFindIterator = <CODE>; FileFindObject = <CODE>; FileFindObjectRule = <CODE>; FileFindRule = <CODE>; FileFindRulePerl = <CODE>; FileFinder = <CODE>; FileFnMatch = <CODE>; FileGrep = <CODE>; FileHandleUnget = <CODE>; FileHomeDir = <CODE>; FileKeePass = <CODE>; FileLibMagic = <CODE>; FileListing = «repeated»; FileLoadLines = <CODE>; FileMMagic = <CODE>; FileMap = <CODE>; FileMimeInfo = <CODE>; FileModified = <CODE>; FileNFSLock = <CODE>; FileNext = <CODE>; FilePath = <CODE>; FilePid = <CODE>; FileReadBackwards = <CODE>; FileRemove = <CODE>; FileShare = <CODE>; FileShareDir = «repeated»; FileShareDirInstall = «repeated»; FileSlurp = <CODE>; FileSlurpTiny = <CODE>; FileSlurper = <CODE>; FileTail = <CODE>; FileTemp = null; FileTouch = <CODE>; FileType = <CODE>; FileUtil = <CODE>; FileUtilTempdir = <CODE>; FileWhich = <CODE>; FileZglob = <CODE>; Filechdir = <CODE>; Filechmod = <CODE>; FilechmodRecursive = <CODE>; Filelchown = <CODE>; Filepushd = <CODE>; FilesysDf = <CODE>; FilesysDiskUsage = <CODE>; FilesysNotifySimple = <CODE>; Filter = <CODE>; FilterSimple = null; FinanceQuote = <CODE>; FindLib = <CODE>; FontAFM = <CODE>; FontTTF = <CODE>; ForksSuper = <CODE>; FormValidatorSimple = <CODE>; FreezeThaw = <CODE>; FunctionParameters = <CODE>; Furl = <CODE>; Future = <CODE>; FutureAsyncAwait = <CODE>; FutureIO = <CODE>; GD = <CODE>; GDGraph = <CODE>; GDSecurityImage = <CODE>; GDText = <CODE>; GSSAPI = <CODE>; GamesSolitaireVerify = <CODE>; GeoIP = <CODE>; GeoIP2 = <CODE>; GeographyCountries = <CODE>; GetoptArgvFile = <CODE>; GetoptLong = <CODE>; GetoptLongDescriptive = <CODE>; GetoptTabular = <CODE>; Git = <CODE>; GitAutofixup = <CODE>; GitPurePerl = <CODE>; GitRepository = <CODE>; GitVersionCompare = <CODE>; Glib = <CODE>; GlibObjectIntrospection = <CODE>; Gnome2 = <CODE>; Gnome2Canvas = <CODE>; Gnome2VFS = <CODE>; Gnome2Wnck = <CODE>; GnuPG = <CODE>; GnuPGInterface = <CODE>; GoferTransporthttp = <CODE>; GooCanvas = <CODE>; GooCanvas2 = <CODE>; GooCanvas2CairoTypes = <CODE>; GoogleProtocolBuffers = <CODE>; Graph = <CODE>; GraphViz = <CODE>; GraphicsColor = <CODE>; GraphicsTIFF = <CODE>; GrowlGNTP = <CODE>; Gtk2 = <CODE>; Gtk2AppIndicator = <CODE>; Gtk2GladeXML = <CODE>; Gtk2ImageView = <CODE>; Gtk2TrayIcon = <CODE>; Gtk2Unique = <CODE>; Gtk3 = <CODE>; Gtk3ImageView = <CODE>; Gtk3SimpleList = <CODE>; Guard = <CODE>; HTMLClean = <CODE>; HTMLElementExtended = <CODE>; HTMLEscape = <CODE>; HTMLForm = <CODE>; HTMLFormFu = <CODE>; HTMLFormFuMultiForm = <CODE>; HTMLFormHandler = <CODE>; HTMLFormatExternal = <CODE>; HTMLFormatTextWithLinks = <CODE>; HTMLFormatTextWithLinksAndTables = <CODE>; HTMLFormatter = <CODE>; HTMLFromANSI = <CODE>; HTMLGumbo = <CODE>; HTMLMason = <CODE>; HTMLMasonPSGIHandler = <CODE>; HTMLParser = «repeated»; HTMLQuoted = <CODE>; HTMLRewriteAttributes = <CODE>; HTMLScrubber = <CODE>; HTMLSelectorXPath = <CODE>; HTMLStripScripts = <CODE>; HTMLStripScriptsParser = <CODE>; HTMLTableExtract = <CODE>; HTMLTagCloud = «repeated»; HTMLTagset = «repeated»; HTMLTemplate = <CODE>; HTMLTidy = <CODE>; HTMLTiny = <CODE>; HTMLTokeParserSimple = <CODE>; HTMLTree = <CODE>; HTMLTreeBuilderXPath = <CODE>; HTMLWidget = <CODE>; HTTPAcceptLanguage = <CODE>; HTTPBody = <CODE>; HTTPCookieJar = <CODE>; HTTPCookies = «repeated»; HTTPDAV = <CODE>; HTTPDaemon = «repeated»; HTTPDate = «repeated»; HTTPEntityParser = <CODE>; HTTPHeaderParserXS = <CODE>; HTTPHeadersActionPack = <CODE>; HTTPHeadersFast = <CODE>; HTTPLite = <CODE>; HTTPMessage = «repeated»; HTTPMultiPartParser = <CODE>; HTTPNegotiate = «repeated»; HTTPParserXS = <CODE>; HTTPProxy = <CODE>; HTTPRequestAsCGI = <CODE>; HTTPResponseEncoding = <CODE>; HTTPServerSimple = <CODE>; HTTPServerSimpleAuthen = <CODE>; HTTPServerSimpleMason = <CODE>; HTTPServerSimplePSGI = <CODE>; HTTPTinyCache = <CODE>; HTTPTinyish = <CODE>; Hailo = <CODE>; HamAPRSFAP = <CODE>; HashDiff = <CODE>; HashFlatten = <CODE>; HashMerge = <CODE>; HashMergeSimple = <CODE>; HashMoreUtils = <CODE>; HashMultiValue = <CODE>; HashSharedMem = <CODE>; HashStoredIterator = <CODE>; HashUtilFieldHashCompat = <CODE>; HeapFibonacci = <CODE>; HookLexWrap = <CODE>; I18NCollate = null; IMAPClient = <CODE>; IO = <CODE>; IOAIO = <CODE>; IOAll = <CODE>; IOAsync = <CODE>; IOAsyncSSL = <CODE>; IOCapture = <CODE>; IOCaptureOutput = <CODE>; IOCompress = <CODE>; IODigest = <CODE>; IOHTML = «repeated»; IOHandleUtil = <CODE>; IOInteractive = <CODE>; IOInteractiveTiny = <CODE>; IOLockedFile = <CODE>; IOMultiplex = <CODE>; IOPager = <CODE>; IOPipely = <CODE>; IOPrompt = <CODE>; IOPty = <CODE>; IOSessionData = <CODE>; IOSocketINET6 = <CODE>; IOSocketIP = null; IOSocketInet6 = <CODE>; IOSocketSSL = <CODE>; IOSocketTimeout = <CODE>; IOString = <CODE>; IOStringy = <CODE>; IOStty = <CODE>; IOTee = <CODE>; IOTieCombine = <CODE>; IOTty = <CODE>; IOstringy = <CODE>; IPCConcurrencyLimit = <CODE>; IPCRun = <CODE>; IPCRun3 = <CODE>; IPCShareLite = <CODE>; IPCSignal = <CODE>; IPCSysV = <CODE>; IPCSystemSimple = <CODE>; IPCountry = <CODE>; IRCUtils = <CODE>; ImageExifTool = <CODE>; ImageInfo = <CODE>; ImageMagick = <CODE>; ImageOCRTesseract = <CODE>; ImagePNGLibpng = <CODE>; ImageSane = <CODE>; ImageScale = <CODE>; ImageSize = <CODE>; Imager = <CODE>; ImagerQRCode = <CODE>; ImportInto = <CODE>; Importer = <CODE>; Inline = <CODE>; InlineC = <CODE>; InlineJava = <CODE>; JSON = <CODE>; JSONAny = <CODE>; JSONCreate = <CODE>; JSONMaybeXS = <CODE>; JSONPP = <CODE>; JSONPPCompat5006 = <CODE>; JSONParse = <CODE>; JSONValidator = <CODE>; JSONWebToken = <CODE>; JSONXS = <CODE>; JSONXSVersionOneAndTwo = <CODE>; JavaScriptMinifierXS = <CODE>; JavaScriptValueEscape = <CODE>; LEOCHARRECLI = <CODE>; LEOCHARREDebug = <CODE>; LWP = «repeated»; LWPAuthenOAuth = <CODE>; LWPMediaTypes = «repeated»; LWPProtocolConnect = <CODE>; LWPProtocolHttps = <CODE>; LWPProtocolconnect = <CODE>; LWPProtocolhttp10 = <CODE>; LWPProtocolhttps = <CODE>; LWPUserAgent = <CODE>; LWPUserAgentCached = <CODE>; LWPUserAgentDNSHosts = <CODE>; LWPUserAgentDetermined = <CODE>; LWPUserAgentMockable = <CODE>; LWPxParanoidAgent = <CODE>; LaTeXML = <CODE>; Later = <CODE>; LexicalSealRequireHints = <CODE>; LinguaENFindNumber = <CODE>; LinguaENInflect = <CODE>; LinguaENInflectNumber = <CODE>; LinguaENInflectPhrase = <CODE>; LinguaENNumberIsOrdinal = <CODE>; LinguaENTagger = <CODE>; LinguaENWords2Nums = <CODE>; LinguaPTStemmer = <CODE>; LinguaStem = <CODE>; LinguaStemFr = <CODE>; LinguaStemIt = <CODE>; LinguaStemRu = <CODE>; LinguaStemSnowballDa = <CODE>; LinguaTranslit = <CODE>; LinkEmbedder = <CODE>; LinuxACL = <CODE>; LinuxDesktopFiles = <CODE>; LinuxDistribution = <CODE>; LinuxFD = <CODE>; LinuxInotify2 = <CODE>; Linuxusermod = <CODE>; ListAllUtils = <CODE>; ListBinarySearch = <CODE>; ListCompare = <CODE>; ListMoreUtils = <CODE>; ListMoreUtilsXS = <CODE>; ListSomeUtils = <CODE>; ListUtilsBy = <CODE>; LocaleCodes = <CODE>; LocaleGettext = «repeated»; LocaleMOFile = <CODE>; LocaleMaketext = null; LocaleMaketextFuzzy = <CODE>; LocaleMaketextLexicon = <CODE>; LocaleMaketextLexiconGetcontext = <CODE>; LocaleMaketextSimple = null; LocaleMsgfmt = <CODE>; LocalePO = <CODE>; LocaleTextDomainOO = <CODE>; LocaleTextDomainOOUtil = <CODE>; LocaleUtilsPlaceholderBabelFish = <CODE>; LocaleUtilsPlaceholderMaketext = <CODE>; LocaleUtilsPlaceholderNamed = <CODE>; LockFileSimple = <CODE>; Log4Perl = <CODE>; LogAny = <CODE>; LogAnyAdapterLog4perl = <CODE>; LogAnyAdapterTAP = <CODE>; LogContextual = <CODE>; LogDispatch = <CODE>; LogDispatchArray = <CODE>; LogDispatchFileRotate = <CODE>; LogDispatchouli = <CODE>; LogHandler = <CODE>; LogJournald = <CODE>; LogLog4perl = <CODE>; LogLogLite = <CODE>; LogMessage = <CODE>; LogMessageSimple = <CODE>; LogTrace = <CODE>; Logger = <CODE>; LongJump = <CODE>; MCE = <CODE>; MHonArc = <CODE>; MIMEBase64 = null; MIMECharset = <CODE>; MIMEEncWords = <CODE>; MIMELite = <CODE>; MIMELiteHTML = <CODE>; MIMETools = <CODE>; MIMETypes = <CODE>; MIMEtools = <CODE>; MLDBM = <CODE>; MNI-Perllib = <CODE>; MP3Info = <CODE>; MP3Tag = <CODE>; MROCompat = <CODE>; MacPasteboard = <CODE>; MailAuthenticationResults = <CODE>; MailBox = <CODE>; MailDKIM = <CODE>; MailIMAPClient = <CODE>; MailMaildir = <CODE>; MailMboxMessageParser = <CODE>; MailMessage = <CODE>; MailPOP3Client = <CODE>; MailRFC822Address = <CODE>; MailSPF = <CODE>; MailSender = <CODE>; MailSendmail = <CODE>; MailTools = <CODE>; MailTransport = <CODE>; MathBase85 = <CODE>; MathBaseConvert = <CODE>; MathBigInt = <CODE>; MathBigIntGMP = <CODE>; MathBigIntLite = <CODE>; MathBigRat = null; MathCalcParser = <CODE>; MathCalcUnits = <CODE>; MathClipper = <CODE>; MathComplex = null; MathConvexHullMonotoneChain = <CODE>; MathFibonacci = <CODE>; MathGMP = <CODE>; MathGMPz = <CODE>; MathGeometryVoronoi = <CODE>; MathInt128 = <CODE>; MathInt64 = <CODE>; MathLibm = <CODE>; MathPari = <CODE>; MathPlanePath = <CODE>; MathPrimeUtil = <CODE>; MathPrimeUtilGMP = <CODE>; MathProvablePrime = <CODE>; MathRandom = <CODE>; MathRandomISAAC = <CODE>; MathRandomMTAuto = <CODE>; MathRandomSecure = <CODE>; MathRound = <CODE>; MathVecStat = <CODE>; MaxMindDBCommon = <CODE>; MaxMindDBReader = <CODE>; MaxMindDBReaderXS = <CODE>; MaxMindDBWriter = <CODE>; Memoize = <CODE>; MemoizeExpireLRU = <CODE>; Menlo = <CODE>; MenloLegacy = <CODE>; MetaBuilder = <CODE>; MetaCPANClient = <CODE>; MethodSignaturesSimple = <CODE>; MetricsAny = <CODE>; Minion = <CODE>; MinionBackendSQLite = <CODE>; MinionBackendmysql = <CODE>; MixinLinewise = <CODE>; Mo = <CODE>; MockConfig = <CODE>; ModernPerl = <CODE>; ModuleBuild = «repeated»; ModuleBuildDeprecated = <CODE>; ModuleBuildPluggable = <CODE>; ModuleBuildPluggableCPANfile = <CODE>; ModuleBuildPluggablePPPort = <CODE>; ModuleBuildTiny = «repeated»; ModuleBuildWithXSpp = <CODE>; ModuleBuildXSUtil = <CODE>; ModuleCPANTSAnalyse = <CODE>; ModuleCPANfile = <CODE>; ModuleCompile = <CODE>; ModuleCoreList = null; ModuleExtractUse = <CODE>; ModuleFind = <CODE>; ModuleImplementation = <CODE>; ModuleInfo = <CODE>; ModuleInstall = <CODE>; ModuleInstallAuthorRequires = <CODE>; ModuleInstallAuthorTests = <CODE>; ModuleInstallGithubMeta = <CODE>; ModuleInstallReadmeFromPod = <CODE>; ModuleInstallReadmeMarkdownFromPod = <CODE>; ModuleInstallRepository = <CODE>; ModuleInstallXSUtil = <CODE>; ModuleLoadConditional = null; ModuleManifest = <CODE>; ModuleMetadata = null; ModulePath = <CODE>; ModulePluggable = <CODE>; ModulePluggableFast = <CODE>; ModuleRefresh = <CODE>; ModuleRuntime = <CODE>; ModuleRuntimeConflicts = <CODE>; ModuleScanDeps = <CODE>; ModuleSignature = <CODE>; ModuleUtil = <CODE>; ModuleVersions = <CODE>; ModuleVersionsReport = <CODE>; Modulecpmfile = <CODE>; MojoDOM58 = <CODE>; MojoIOLoopDelay = <CODE>; MojoIOLoopForkCall = <CODE>; MojoJWT = <CODE>; MojoPg = <CODE>; MojoRedis = <CODE>; MojoSAML = <CODE>; MojoSQLite = <CODE>; MojoUserAgentCached = <CODE>; Mojolicious = <CODE>; MojoliciousPluginAssetPack = <CODE>; MojoliciousPluginGravatar = <CODE>; MojoliciousPluginMail = <CODE>; MojoliciousPluginOpenAPI = <CODE>; MojoliciousPluginStatus = <CODE>; MojoliciousPluginSyslog = <CODE>; MojoliciousPluginTextExceptions = <CODE>; MojoliciousPluginWebpack = <CODE>; Mojomysql = <CODE>; MongoDB = <CODE>; MonitoringPlugin = <CODE>; Moo = <CODE>; MooX = <CODE>; MooXAliases = <CODE>; MooXCmd = <CODE>; MooXHandlesVia = <CODE>; MooXLocalePassthrough = <CODE>; MooXLocaleTextDomainOO = <CODE>; MooXOptions = <CODE>; MooXSingleton = <CODE>; MooXStrictConstructor = <CODE>; MooXTypeTiny = <CODE>; MooXTypesMooseLike = <CODE>; MooXTypesMooseLikeNumeric = <CODE>; MooXlate = <CODE>; Moose = <CODE>; MooseAutobox = <CODE>; MooseXABC = <CODE>; MooseXAliases = <CODE>; MooseXAppCmd = <CODE>; MooseXAttributeChained = <CODE>; MooseXAttributeHelpers = <CODE>; MooseXClone = <CODE>; MooseXConfigFromFile = <CODE>; MooseXDaemonize = <CODE>; MooseXEmulateClassAccessorFast = <CODE>; MooseXGetopt = <CODE>; MooseXHasOptions = <CODE>; MooseXHasSugar = <CODE>; MooseXLazyRequire = <CODE>; MooseXMarkAsMethods = <CODE>; MooseXMethodAttributes = <CODE>; MooseXNonMoose = <CODE>; MooseXOneArgNew = <CODE>; MooseXParamsValidate = <CODE>; MooseXRelatedClassRoles = <CODE>; MooseXRoleParameterized = <CODE>; MooseXRoleWithOverloading = <CODE>; MooseXRunnable = <CODE>; MooseXSemiAffordanceAccessor = <CODE>; MooseXSetOnce = <CODE>; MooseXSingleton = <CODE>; MooseXStorage = <CODE>; MooseXStorageFormatJSONpm = <CODE>; MooseXStrictConstructor = <CODE>; MooseXTraits = <CODE>; MooseXTraitsPluggable = <CODE>; MooseXTypes = <CODE>; MooseXTypesCommon = <CODE>; MooseXTypesDateTime = <CODE>; MooseXTypesDateTimeMoreCoercions = <CODE>; MooseXTypesLoadableClass = <CODE>; MooseXTypesPathClass = <CODE>; MooseXTypesPathTiny = <CODE>; MooseXTypesPerl = <CODE>; MooseXTypesStringlike = <CODE>; MooseXTypesStructured = <CODE>; MooseXTypesURI = <CODE>; Mouse = <CODE>; MouseXConfigFromFile = <CODE>; MouseXGetOpt = <CODE>; MouseXGetopt = <CODE>; MouseXNativeTraits = <CODE>; MouseXSimpleConfig = <CODE>; MouseXTypes = <CODE>; MouseXTypesPathClass = <CODE>; MozillaCA = <CODE>; MozillaLdap = <CODE>; MusicBrainz = <CODE>; MusicBrainzDiscID = <CODE>; MustacheSimple = <CODE>; MySQLDiff = <CODE>; NTLM = <CODE>; NamespaceAutoclean = <CODE>; NamespaceClean = <CODE>; NetAMQP = <CODE>; NetAddrIP = <CODE>; NetAmazonAWSSign = <CODE>; NetAmazonEC2 = <CODE>; NetAmazonMechanicalTurk = <CODE>; NetAmazonS3 = <CODE>; NetAmazonS3Policy = <CODE>; NetAsyncHTTP = <CODE>; NetAsyncPing = <CODE>; NetAsyncWebSocket = <CODE>; NetCIDR = <CODE>; NetCIDRLite = <CODE>; NetCoverArtArchive = <CODE>; NetDBus = <CODE>; NetDNS = <CODE>; NetDNSResolverMock = <CODE>; NetDNSResolverProgrammable = <CODE>; NetDomainTLD = <CODE>; NetFastCGI = <CODE>; NetFrame = <CODE>; NetFrameLayerIPv6 = <CODE>; NetFreeDB = <CODE>; NetHTTP = «repeated»; NetHTTPSNB = <CODE>; NetIDNEncode = <CODE>; NetIMAPClient = <CODE>; NetINET6Glue = <CODE>; NetIP = <CODE>; NetIPLite = <CODE>; NetIPv4Addr = <CODE>; NetIPv6Addr = <CODE>; NetIdent = <CODE>; NetLDAP = <CODE>; NetLDAPSID = <CODE>; NetLDAPServer = <CODE>; NetLDAPServerTest = <CODE>; NetMQTTSimple = <CODE>; NetNetmask = <CODE>; NetOAuth = <CODE>; NetOpenIDCommon = <CODE>; NetOpenIDConsumer = <CODE>; NetOpenSSH = <CODE>; NetPatricia = <CODE>; NetPing = <CODE>; NetPrometheus = <CODE>; NetSCP = <CODE>; NetSFTPForeign = <CODE>; NetSMTP = <CODE>; NetSMTPSSL = <CODE>; NetSMTPTLS = <CODE>; NetSMTPTLSButMaintained = <CODE>; NetSNMP = <CODE>; NetSNPP = <CODE>; NetSSH = <CODE>; NetSSHPerl = <CODE>; NetSSLeay = <CODE>; NetServer = <CODE>; NetServerCoro = <CODE>; NetServerSSPrefork = <CODE>; NetStatsd = <CODE>; NetTelnet = <CODE>; NetTwitterLite = <CODE>; NetWhoisIP = <CODE>; NetWorks = <CODE>; NetZooKeeper = <CODE>; NumberBytesHuman = <CODE>; NumberCompare = <CODE>; NumberFormat = <CODE>; NumberFraction = <CODE>; NumberMisc = <CODE>; NumberPhone = <CODE>; NumberWithError = <CODE>; OLEStorageLight = <CODE>; OLEStorage_Lite = <CODE>; ObjectAccessor = <CODE>; ObjectEvent = <CODE>; ObjectInsideOut = <CODE>; ObjectPad = <CODE>; ObjectSignature = <CODE>; OggVorbisHeaderPurePerl = <CODE>; Opcodes = <CODE>; OpenAPIClient = <CODE>; OpenGL = <CODE>; OpenOfficeOODoc = <CODE>; PARDist = <CODE>; PAUSEPermissions = <CODE>; PBKDF2Tiny = <CODE>; PDFAPI2 = <CODE>; PDFBuilder = <CODE>; PDL = <CODE>; PHPSerialization = <CODE>; PLS = <CODE>; POE = <CODE>; POETestLoops = <CODE>; POSIXAtFork = <CODE>; POSIXstrftimeCompiler = <CODE>; PPI = <CODE>; PPIxQuoteLike = <CODE>; PPIxRegexp = <CODE>; PPIxUtilities = <CODE>; PPR = <CODE>; PSGI = <CODE>; PackageConstants = <CODE>; PackageDeprecationManager = <CODE>; PackageStash = <CODE>; PackageStashXS = <CODE>; PackageVariant = <CODE>; PadWalker = <CODE>; Pango = <CODE>; ParallelForkManager = <CODE>; ParallelPipes = <CODE>; ParallelPrefork = <CODE>; ParamsClassify = <CODE>; ParamsUtil = <CODE>; ParamsValidate = <CODE>; ParamsValidationCompiler = <CODE>; Paranoid = <CODE>; Parent = <CODE>; ParseCPANMeta = <CODE>; ParseDebControl = <CODE>; ParseIRC = <CODE>; ParseLocalDistribution = <CODE>; ParsePMFile = <CODE>; ParsePlainConfig = <CODE>; ParseRecDescent = <CODE>; ParseSyslog = <CODE>; ParseYapp = <CODE>; ParserMGC = <CODE>; PatchReader = <CODE>; PathClass = <CODE>; PathDispatcher = <CODE>; PathIteratorRule = <CODE>; PathTiny = <CODE>; PathTools = <CODE>; Pegex = <CODE>; PerconaToolkit = <CODE>; Perl5lib = <CODE>; Perl6Junction = <CODE>; PerlCritic = <CODE>; PerlCriticCommunity = <CODE>; PerlCriticMoose = <CODE>; PerlCriticPolicyVariablesProhibitLoopOnHash = <CODE>; PerlCriticPulp = <CODE>; PerlDestructLevel = <CODE>; PerlIOLayers = <CODE>; PerlIOeol = <CODE>; PerlIOgzip = <CODE>; PerlIOutf8_strict = <CODE>; PerlIOviaQuotedPrint = null; PerlIOviaTimeout = <CODE>; PerlIOviadynamic = <CODE>; PerlIOviasymlink = <CODE>; PerlMagick = <CODE>; PerlMinimumVersion = <CODE>; PerlOSType = null; PerlPrereqScanner = <CODE>; PerlPrereqScannerNotQuiteLite = <CODE>; PerlTidy = <CODE>; PerlVersion = <CODE>; Perlosnames = <CODE>; PkgConfig = <CODE>; Plack = <CODE>; PlackAppProxy = <CODE>; PlackMiddlewareAuthDigest = <CODE>; PlackMiddlewareConsoleLogger = <CODE>; PlackMiddlewareDebug = <CODE>; PlackMiddlewareDeflater = <CODE>; PlackMiddlewareFixMissingBodyInRedirect = <CODE>; PlackMiddlewareHeader = <CODE>; PlackMiddlewareMethodOverride = <CODE>; PlackMiddlewareRemoveRedundantBody = <CODE>; PlackMiddlewareReverseProxy = <CODE>; PlackMiddlewareSession = <CODE>; PlackTestExternalServer = <CODE>; Po4a = <CODE>; PodAbstract = <CODE>; PodChecker = <CODE>; PodCoverage = <CODE>; PodCoverageTrustPod = <CODE>; PodElemental = <CODE>; PodElementalPerlMunger = <CODE>; PodEscapes = null; PodEventual = <CODE>; PodLaTeX = <CODE>; PodMarkdown = <CODE>; PodMarkdownGithub = <CODE>; PodMinimumVersion = <CODE>; PodPOM = <CODE>; PodPOMViewTOC = <CODE>; PodParser = <CODE>; PodPerldoc = <CODE>; PodPlainer = <CODE>; PodSection = <CODE>; PodSimple = <CODE>; PodSpell = <CODE>; PodStrip = <CODE>; PodTidy = <CODE>; PodUsage = null; PodWeaver = <CODE>; PodWrap = <CODE>; ProbePerl = <CODE>; ProcBackground = <CODE>; ProcFind = <CODE>; ProcProcessTable = <CODE>; ProcSafeExec = <CODE>; ProcSimple = <CODE>; ProcWait3 = <CODE>; ProcWaitStat = <CODE>; PrometheusTiny = <CODE>; PrometheusTinyShared = <CODE>; ProtocolHTTP2 = <CODE>; ProtocolRedis = <CODE>; ProtocolRedisFaster = <CODE>; ProtocolWebSocket = <CODE>; RESTClient = <CODE>; RESTUtils = <CODE>; RPCEPCService = <CODE>; RPM2 = <CODE>; RSSParserLite = <CODE>; RTClientREST = <CODE>; Razor2ClientAgent = <CODE>; Readonly = <CODE>; ReadonlyX = <CODE>; ReadonlyXS = <CODE>; Redis = <CODE>; RefUtil = <CODE>; RegexpAssemble = <CODE>; RegexpCommon = <CODE>; RegexpCommonnetCIDR = <CODE>; RegexpCommontime = <CODE>; RegexpGrammars = <CODE>; RegexpIPv6 = <CODE>; RegexpParser = <CODE>; RegexpTrie = <CODE>; ReturnValue = <CODE>; RoleBasic = <CODE>; RoleHasMessage = <CODE>; RoleIdentifiable = <CODE>; RoleTiny = <CODE>; RpcXML = <CODE>; SCGI = <CODE>; SDL = <CODE>; SGMLSpm = <CODE>; SOAPLite = <CODE>; SQLAbstract = <CODE>; SQLAbstractClassic = <CODE>; SQLAbstractLimit = <CODE>; SQLAbstractPg = <CODE>; SQLSplitStatement = <CODE>; SQLStatement = <CODE>; SQLTokenizer = <CODE>; SQLTranslator = <CODE>; SUPER = <CODE>; SVNSimple = <CODE>; Safe = null; SafeHole = <CODE>; SafeIsa = <CODE>; ScalarListUtils = <CODE>; ScalarString = <CODE>; ScopeGuard = <CODE>; ScopeUpper = <CODE>; SearchDict = null; SearchXapian = <CODE>; SelfLoader = null; Sereal = <CODE>; SerealDecoder = <CODE>; SerealEncoder = <CODE>; ServerStarter = <CODE>; SessionToken = <CODE>; SetInfinite = <CODE>; SetIntSpan = <CODE>; SetObject = <CODE>; SetScalar = <CODE>; ShellCommand = <CODE>; ShellConfigGenerate = <CODE>; ShellGuess = <CODE>; SignalMask = <CODE>; SmartComments = <CODE>; SnowballNorwegian = <CODE>; SnowballSwedish = <CODE>; Socket = null; Socket6 = <CODE>; SoftwareLicense = <CODE>; SoftwareLicenseCCpack = <CODE>; SortKey = <CODE>; SortNaturally = <CODE>; SortVersions = <CODE>; Specio = <CODE>; SpecioLibraryPathTiny = <CODE>; Spiffy = <CODE>; SpreadsheetCSV = <CODE>; SpreadsheetParseExcel = <CODE>; SpreadsheetWriteExcel = <CODE>; Starlet = <CODE>; Starman = <CODE>; StatisticsBasic = <CODE>; StatisticsCaseResampling = <CODE>; StatisticsChiSquare = <CODE>; StatisticsDescriptive = <CODE>; StatisticsDistributions = <CODE>; StatisticsTTest = <CODE>; Storable = null; StreamBuffered = <CODE>; StringApprox = <CODE>; StringCRC32 = <CODE>; StringCamelCase = <CODE>; StringCompareConstantTime = <CODE>; StringDiff = <CODE>; StringErrf = <CODE>; StringEscape = <CODE>; StringFlogger = <CODE>; StringFormat = <CODE>; StringFormatter = <CODE>; StringInterpolate = <CODE>; StringInterpolateNamed = <CODE>; StringMkPasswd = <CODE>; StringRandom = <CODE>; StringRewritePrefix = <CODE>; StringShellQuote = <CODE>; StringSimilarity = <CODE>; StringTT = <CODE>; StringToIdentifierEN = <CODE>; StringTruncate = <CODE>; StringUtil = <CODE>; StructDumb = <CODE>; SubExporter = <CODE>; SubExporterForMethods = <CODE>; SubExporterGlobExporter = <CODE>; SubExporterProgressive = <CODE>; SubExporterUtil = <CODE>; SubHandlesVia = <CODE>; SubIdentify = <CODE>; SubInfo = <CODE>; SubInstall = <CODE>; SubName = <CODE>; SubOverride = <CODE>; SubQuote = <CODE>; SubStrictDecl = <CODE>; SubUplevel = «repeated»; Swim = <CODE>; Switch = <CODE>; SymbolGet = <CODE>; SymbolGlobalName = <CODE>; SymbolUtil = <CODE>; SyntaxKeywordJunction = <CODE>; SyntaxKeywordTry = <CODE>; SysCPU = <CODE>; SysHostnameLong = <CODE>; SysMemInfo = <CODE>; SysMmap = <CODE>; SysSigAction = <CODE>; SysSyslog = <CODE>; SysVirt = <CODE>; SystemCommand = <CODE>; TAPParserSourceHandlerpgTAP = <CODE>; TaskCatalystTutorial = <CODE>; TaskFreecellSolverTesting = <CODE>; TaskPlack = <CODE>; TaskTestRunAllPlugins = <CODE>; TaskWeaken = <CODE>; Tcl = <CODE>; TclpTk = <CODE>; TemplateGD = <CODE>; TemplatePluginAutoformat = <CODE>; TemplatePluginClass = <CODE>; TemplatePluginIOAll = <CODE>; TemplatePluginJSONEscape = <CODE>; TemplatePluginJavaScript = <CODE>; TemplateTimer = <CODE>; TemplateTiny = <CODE>; TemplateToolkit = <CODE>; TermANSIColor = null; TermAnimation = <CODE>; TermCap = null; TermEncoding = <CODE>; TermProgressBar = <CODE>; TermProgressBarQuiet = <CODE>; TermProgressBarSimple = <CODE>; TermReadKey = «repeated»; TermReadLineGnu = <CODE>; TermReadLineTTYtter = <CODE>; TermReadPassword = <CODE>; TermShell = <CODE>; TermShellUI = <CODE>; TermSizeAny = <CODE>; TermSizePerl = <CODE>; TermSk = <CODE>; TermTable = <CODE>; TermUI = <CODE>; TermVT102 = <CODE>; TermVT102Boundless = <CODE>; Test = null; Test2Harness = <CODE>; Test2PluginMemUsage = <CODE>; Test2PluginNoWarnings = <CODE>; Test2PluginUUID = <CODE>; Test2Suite = <CODE>; TestAbortable = <CODE>; TestAggregate = <CODE>; TestAssert = <CODE>; TestAssertions = <CODE>; TestBase = <CODE>; TestBits = <CODE>; TestCPANMeta = <CODE>; TestCPANMetaJSON = <CODE>; TestCheckDeps = <CODE>; TestClass = <CODE>; TestClassMost = <CODE>; TestCleanNamespaces = <CODE>; TestCmd = <CODE>; TestCommand = <CODE>; TestCompile = <CODE>; TestDataSplit = <CODE>; TestDeep = «repeated»; TestDeepJSON = <CODE>; TestDeepType = <CODE>; TestDifferences = <CODE>; TestDir = <CODE>; TestDistManifest = <CODE>; TestEOL = <CODE>; TestException = <CODE>; TestExpect = <CODE>; TestFailWarnings = <CODE>; TestFakeHTTPD = <CODE>; TestFatal = «repeated»; TestFile = <CODE>; TestFileContents = <CODE>; TestFileShareDir = <CODE>; TestFilename = <CODE>; TestFork = <CODE>; TestHTTPServerSimple = <CODE>; TestHarness = null; TestHarnessStraps = <CODE>; TestHexDifferences = <CODE>; TestHexString = <CODE>; TestIdentity = <CODE>; TestInDistDir = <CODE>; TestInter = <CODE>; TestJSON = <CODE>; TestKwalitee = <CODE>; TestLWPUserAgent = <CODE>; TestLeakTrace = <CODE>; TestLectroTest = <CODE>; TestLoadAllModules = <CODE>; TestLongString = <CODE>; TestManifest = <CODE>; TestMemoryCycle = <CODE>; TestMemoryGrowth = <CODE>; TestMetricsAny = <CODE>; TestMinimumVersion = <CODE>; TestMockClass = <CODE>; TestMockGuard = <CODE>; TestMockHTTPTiny = <CODE>; TestMockModule = <CODE>; TestMockObject = <CODE>; TestMockTime = <CODE>; TestMockTimeHiRes = <CODE>; TestMojibake = <CODE>; TestMoose = <CODE>; TestMore = <CODE>; TestMoreUTF8 = <CODE>; TestMost = <CODE>; TestNeeds = «repeated»; TestNoTabs = <CODE>; TestNoWarnings = «repeated»; TestNumberDelta = <CODE>; TestObject = <CODE>; TestOutput = <CODE>; TestPAUSEPermissions = <CODE>; TestPerlCritic = <CODE>; TestPerlTidy = <CODE>; TestPod = <CODE>; TestPodCoverage = <CODE>; TestPodLinkCheck = <CODE>; TestPodNo404s = <CODE>; TestPortabilityFiles = <CODE>; TestPostgreSQL = <CODE>; TestRefcount = <CODE>; TestRequires = <CODE>; TestRequiresGit = <CODE>; TestRequiresInternet = «repeated»; TestRoo = <CODE>; TestRoutine = <CODE>; TestRun = <CODE>; TestRunCmdLine = <CODE>; TestRunPluginAlternateInterpreters = <CODE>; TestRunPluginBreakOnFailure = <CODE>; TestRunPluginColorFileVerdicts = <CODE>; TestRunPluginColorSummary = <CODE>; TestRunPluginTrimDisplayedFilenames = <CODE>; TestRunValgrind = <CODE>; TestScript = <CODE>; TestScriptRun = <CODE>; TestSharedFork = <CODE>; TestSimple = null; TestSimple13 = <CODE>; TestSnapshot = <CODE>; TestSpec = <CODE>; TestSubCalls = <CODE>; TestSynopsis = <CODE>; TestTCP = <CODE>; TestTableDriven = <CODE>; TestTempDirTiny = <CODE>; TestTester = <CODE>; TestTime = <CODE>; TestToolbox = <CODE>; TestTrailingSpace = <CODE>; TestTrap = <CODE>; TestUNIXSock = <CODE>; TestUnitLite = <CODE>; TestUseAllModules = <CODE>; TestValgrind = <CODE>; TestVars = <CODE>; TestVersion = <CODE>; TestWWWMechanize = <CODE>; TestWWWMechanizeCGI = <CODE>; TestWWWMechanizeCatalyst = <CODE>; TestWWWMechanizePSGI = <CODE>; TestWarn = «repeated»; TestWarnings = <CODE>; TestWeaken = <CODE>; TestWithoutModule = <CODE>; TestXPath = <CODE>; TestYAML = <CODE>; Testmysqld = <CODE>; Testuseok = <CODE>; Testutf8 = <CODE>; TextAbbrev = null; TextAligner = <CODE>; TextAspell = <CODE>; TextAutoformat = <CODE>; TextBalanced = <CODE>; TextBibTeX = <CODE>; TextBrew = <CODE>; TextCSV = <CODE>; TextCSVEncoded = <CODE>; TextCSV_XS = <CODE>; TextCharWidth = <CODE>; TextDiff = <CODE>; TextDiffFormattedHTML = <CODE>; TextFormat = <CODE>; TextFuzzy = <CODE>; TextGerman = <CODE>; TextGlob = <CODE>; TextHogan = <CODE>; TextIconv = <CODE>; TextLayout = <CODE>; TextLevenshteinXS = <CODE>; TextLorem = <CODE>; TextMarkdown = <CODE>; TextMarkdownHoedown = <CODE>; TextMicroTemplate = <CODE>; TextMultiMarkdown = <CODE>; TextNSP = <CODE>; TextPDF = <CODE>; TextParsewords = <CODE>; TextPasswordPronounceable = <CODE>; TextPatch = <CODE>; TextQuoted = <CODE>; TextRecordParser = <CODE>; TextReflow = <CODE>; TextReform = <CODE>; TextRoman = <CODE>; TextSimpleTable = <CODE>; TextSoundex = <CODE>; TextSprintfNamed = <CODE>; TextTable = <CODE>; TextTabsWrap = null; TextTabularDisplay = <CODE>; TextTemplate = <CODE>; TextTrim = <CODE>; TextUnaccent = <CODE>; TextUnidecode = <CODE>; TextWikiFormat = <CODE>; TextWordDiff = <CODE>; TextWrapI18N = <CODE>; TextWrapper = <CODE>; TextvFileasData = <CODE>; ThreadQueue = null; ThreadSemaphore = null; Throwable = <CODE>; TieCacheLRU = <CODE>; TieCacheLRUExpires = <CODE>; TieCycle = <CODE>; TieEncryptedHash = <CODE>; TieFile = <CODE>; TieHandleOffset = <CODE>; TieHashIndexed = <CODE>; TieHashMethod = <CODE>; TieIxHash = <CODE>; TieRefHash = <CODE>; TieRegexpHash = <CODE>; TieSimple = <CODE>; TieSub = <CODE>; TieToObject = <CODE>; TimeDate = «repeated»; TimeDuration = <CODE>; TimeDurationParse = <CODE>; TimeHiRes = null; TimeLocal = <CODE>; TimeMoment = <CODE>; TimeOut = <CODE>; TimeParseDate = <CODE>; TimePeriod = <CODE>; TimePiece = <CODE>; Tirex = <CODE>; Tk = <CODE>; TkToolBar = <CODE>; TreeDAGNode = <CODE>; TreeSimple = <CODE>; TreeSimpleVisitorFactory = <CODE>; TryTiny = «repeated»; TryTinyByClass = <CODE>; Twiggy = <CODE>; TypeTiny = <CODE>; TypeTinyXS = <CODE>; TypesSerialiser = <CODE>; UNIVERSALcan = <CODE>; UNIVERSALisa = <CODE>; UNIVERSALrequire = <CODE>; URI = «repeated»; URIEscapeXS = <CODE>; URIFind = <CODE>; URIFromHash = <CODE>; URIIMAP = <CODE>; URINested = <CODE>; URISmartURI = <CODE>; URITemplate = <CODE>; URIcpan = <CODE>; URIdb = <CODE>; URIws = <CODE>; UUID4Tiny = <CODE>; UUIDTiny = <CODE>; UUIDURandom = <CODE>; UnicodeCaseFold = <CODE>; UnicodeCheckUTF8 = <CODE>; UnicodeCollate = null; UnicodeLineBreak = <CODE>; UnicodeNormalize = null; UnicodeString = <CODE>; UnicodeStringprep = <CODE>; UnicodeUTF8 = <CODE>; UnixGetrusage = <CODE>; UriGoogleChart = <CODE>; UserIdentity = <CODE>; VMEC2 = <CODE>; VMEC2SecurityCredentialCache = <CODE>; VariableMagic = <CODE>; Version = <CODE>; W3CLinkChecker = <CODE>; WWWCurl = <CODE>; WWWFormUrlEncoded = <CODE>; WWWMechanize = <CODE>; WWWMechanizeCGI = <CODE>; WWWRobotRules = «repeated»; WWWTwilioAPI = <CODE>; WWWYoutubeViewer = <CODE>; Want = <CODE>; WebMachine = <CODE>; WebServiceLinode = <CODE>; WebServiceValidatorHTMLW3C = <CODE>; Win32ShellQuote = <CODE>; Workflow = <CODE>; Wx = <CODE>; WxGLCanvas = <CODE>; X11GUITest = <CODE>; X11IdleTime = <CODE>; X11Protocol = <CODE>; X11ProtocolOther = <CODE>; X11XCB = <CODE>; XMLCanonicalizeXML = <CODE>; XMLDOM = <CODE>; XMLDescent = <CODE>; XMLEncoding = <CODE>; XMLFeedPP = <CODE>; XMLFilterBufferText = <CODE>; XMLFilterSort = <CODE>; XMLFilterXInclude = <CODE>; XMLGrove = <CODE>; XMLHandlerYAWriter = <CODE>; XMLLibXML = <CODE>; XMLLibXMLSimple = <CODE>; XMLLibXSLT = <CODE>; XMLMini = <CODE>; XMLNamespaceSupport = «repeated»; XMLParser = «repeated»; XMLParserLite = <CODE>; XMLRPCLite = <CODE>; XMLRSS = <CODE>; XMLRegExp = <CODE>; XMLRules = <CODE>; XMLSAX = «repeated»; XMLSAXBase = «repeated»; XMLSAXExpat = <CODE>; XMLSAXWriter = <CODE>; XMLSemanticDiff = <CODE>; XMLSimple = <CODE>; XMLTokeParser = <CODE>; XMLTreePP = <CODE>; XMLTwig = <CODE>; XMLValidatorSchema = <CODE>; XMLWriter = <CODE>; XMLXPath = <CODE>; XMLXPathEngine = <CODE>; XSLoader = null; XSObjectMagic = <CODE>; XSParseKeyword = <CODE>; XSParseSublike = <CODE>; XXX = <CODE>; YAML = <CODE>; YAMLLibYAML = <CODE>; YAMLOld = <CODE>; YAMLPP = <CODE>; YAMLSyck = <CODE>; YAMLTiny = <CODE>; ZonemasterCLI = <CODE>; ZonemasterEngine = <CODE>; ZonemasterLDNS = <CODE>; ack = <CODE>; aliased = <CODE>; asa = <CODE>; autobox = <CODE>; autodie = null; autovivification = <CODE>; base = null; bignum = null; boolean = <CODE>; buildPerlModule = <LAMBDA>; buildPerlPackage = «repeated»; callPackage = <LAMBDA>; cam_pdf = <CODE>; capitalization = <CODE>; commonsense = <CODE>; constant = null; constant-defer = <CODE>; constantboolean = <CODE>; constantdefer = <CODE>; curry = <CODE>; enum = <CODE>; gotofile = <CODE>; grepmail = <CODE>; ham = <CODE>; hasPerlModule = <CODE>; iCalParser = <CODE>; "if" = null; if_ = <CODE>; lib_ = null; libapreq2 = <CODE>; libintl-perl = <CODE>; libintl_perl = <CODE>; libintlperl = <CODE>; libnet = <CODE>; librelative = <CODE>; libxml_perl = <CODE>; locallib = <CODE>; maatkit = <CODE>; makeFullPerlPath = <LAMBDA>; makePerlPath = <LAMBDA>; mimeConstruct = <CODE>; mod_perl2 = <CODE>; namespaceautoclean = <CODE>; namespaceclean = <CODE>; pcscperl = <CODE>; perl = «repeated»; perlPackages = «repeated»; perlldap = <CODE>; podlators = <CODE>; podlinkcheck = <CODE>; prefork = <CODE>; requiredPerlModules = <CODE>; strictures = <CODE>; strip-nondeterminism = <CODE>; syntax = <CODE>; threads = null; threadsshared = null; toPerlModule = <LAMBDA>; version = <CODE>; vidir = <CODE>; }; perlldap = <CODE>; podlators = <CODE>; podlinkcheck = <CODE>; prefork = <CODE>; requiredPerlModules = <CODE>; strictures = <CODE>; strip-nondeterminism = <CODE>; syntax = <CODE>; threads = null; threadsshared = null; toPerlModule = <LAMBDA>; version = <CODE>; vidir = <CODE>; }; withPackages = <CODE>; }; patches = «repeated»; pkgs = «repeated»; pname = "perl"; postInstall = "# Remove dependency between \"out\" and \"man\" outputs.\nrm \"$out\"/lib/perl5/*/*/.packlist\n\n# Remove dependencies on glibc and gcc\nsed \"/ *libpth =>/c    libpth => ' ',\" \\\n  -i \"$out\"/lib/perl5/*/*/Config.pm\n# TODO: removing those paths would be cleaner than overwriting with nonsense.\nsubstituteInPlace \"$out\"/lib/perl5/*/*/Config_heavy.pl \\\n  --replace \"/nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev\" /no-such-path \\\n  --replace \"/nix/store/l158mg1n8wsszksa9rlhqg8gylg4238b-gcc-9.5.0\" /no-such-path \\\n  --replace \"/nix/store/jm6gqq369d0vd9pz3b7swn2vyycygdb9-gcc-wrapper-9.5.0\" /no-such-path \\\n  --replace \"$man\" /no-such-path\n"; postPatch = "substituteInPlace dist/PathTools/Cwd.pm \\\n  --replace \"/bin/pwd\" \"$(type -P pwd)\"\nunset src\n"; preConfigure = "cat > config.over <<EOF\nosvers=\"gnulinux\"\nmyuname=\"nixpkgs\"\nmyhostname=\"nixpkgs\"\ncf_by=\"nixpkgs\"\ncf_time=\"$(date -d \"@$SOURCE_DATE_EPOCH\")\"\nEOF\n\n# Compress::Raw::Zlib should use our zlib package instead of the one\n# included with the distribution\ncat > ./cpan/Compress-Raw-Zlib/config.in <<EOF\nBUILD_ZLIB   = False\nINCLUDE      = /nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include\nLIB          = /nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib\nOLD_ZLIB     = False\nGZIP_OS_CODE = AUTO_DETECT\nEOF\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/perl/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.36.0"; withPackages = <CODE>; } null ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/kernel-headers/no-relocs.patch ]; pname = "linux-headers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "linux-6.0.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-XCRDpVON5SaI77VcJ6sFOcH161jAz9FqK5+7CP2BeI4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://kernel/linux/kernel/v6.x/linux-6.0.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "linux-6.0.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4rglx3nfn33w68rvj1y7rvys8p9s4zw1-linux-6.0.tar.xz"; outputHash = "sha256-XCRDpVON5SaI77VcJ6sFOcH161jAz9FqK5+7CP2BeI4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://kernel/linux/kernel/v6.x/linux-6.0.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://kernel/linux/kernel/v6.x/linux-6.0.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; extraIncludeDirs = [ ]; hardeningDisable = [ ]; inputDerivation = <CODE>; installPhase = "mkdir -p $out\ncp -r usr/include $out\nfind $out -type f ! -name '*.h' -delete\nmkdir -p $out/include/config\necho \"6.0-default\" > $out/include/config/kernel.release\n"; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "linux-headers-6.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/7jzd492v2c3wcyqrwcjgll8a2rw1hf5j-linux-headers-6.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "linux-headers"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.0"; } ]; buildPhase = "# Awful hack: `localedef' doesn't allow the path to `locale-archive'\n# to be overriden, but you *can* specify a prefix, i.e. it will use\n# <prefix>/<path-to-glibc>/lib/locale/locale-archive.  So we use\n# $TMPDIR as a prefix, meaning that the locale-archive is placed in\n# $TMPDIR/nix/store/...-glibc-.../lib/locale/locale-archive.\nLOCALEDEF_FLAGS+=\" --prefix=$TMPDIR\"\n\nmkdir -p $TMPDIR/\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/locale\"\n\necho 'C.UTF-8/UTF-8 \\' >> ../glibc-2*/localedata/SUPPORTED\n\n# Hack to allow building of the locales (needed since glibc-2.12)\nsed -i -e 's,^$(rtld-prefix) $(common-objpfx)locale/localedef,localedef $(LOCALEDEF_FLAGS),' ../glibc-2*/localedata/Makefile\n# Check that all locales to be built are supported\necho -n 'en_US.UTF-8/UTF-8 \\\n' \\\n  | sort -u > locales-to-build.txt\ncat ../glibc-2*/localedata/SUPPORTED | grep ' \\\\' \\\n  | sort -u > locales-supported.txt\ncomm -13 locales-supported.txt locales-to-build.txt \\\n  > locales-unsupported.txt\nif [[ $(wc -c locales-unsupported.txt) != \"0 locales-unsupported.txt\" ]]; then\n  cat locales-supported.txt\n  echo \"Error: unsupported locales detected:\"\n  cat locales-unsupported.txt\n  echo \"You should choose from the list above the error.\"\n  false\nfi\n\necho SUPPORTED-LOCALES='en_US.UTF-8/UTF-8' > ../glibc-2*/localedata/SUPPORTED\nmake localedata/install-locales \\\n    localedir=$out/lib/locale \\\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "-C" "--enable-add-ons" "--sysconfdir=/etc" "--enable-stack-protector=strong" "--enable-bind-now" "--without-headers" "--disable-profile" "--enable-static-pie" "--disable-crypt" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { BASH_SHELL = "/bin/sh"; LOCALEDEF_FLAGS = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; buildPhase = "# Awful hack: `localedef' doesn't allow the path to `locale-archive'\n# to be overriden, but you *can* specify a prefix, i.e. it will use\n# <prefix>/<path-to-glibc>/lib/locale/locale-archive.  So we use\n# $TMPDIR as a prefix, meaning that the locale-archive is placed in\n# $TMPDIR/nix/store/...-glibc-.../lib/locale/locale-archive.\nLOCALEDEF_FLAGS+=\" --prefix=$TMPDIR\"\n\nmkdir -p $TMPDIR/\"/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/locale\"\n\necho 'C.UTF-8/UTF-8 \\' >> ../glibc-2*/localedata/SUPPORTED\n\n# Hack to allow building of the locales (needed since glibc-2.12)\nsed -i -e 's,^$(rtld-prefix) $(common-objpfx)locale/localedef,localedef $(LOCALEDEF_FLAGS),' ../glibc-2*/localedata/Makefile\n# Check that all locales to be built are supported\necho -n 'en_US.UTF-8/UTF-8 \\\n' \\\n  | sort -u > locales-to-build.txt\ncat ../glibc-2*/localedata/SUPPORTED | grep ' \\\\' \\\n  | sort -u > locales-supported.txt\ncomm -13 locales-supported.txt locales-to-build.txt \\\n  > locales-unsupported.txt\nif [[ $(wc -c locales-unsupported.txt) != \"0 locales-unsupported.txt\" ]]; then\n  cat locales-supported.txt\n  echo \"Error: unsupported locales detected:\"\n  cat locales-unsupported.txt\n  echo \"You should choose from the list above the error.\"\n  false\nfi\n\necho SUPPORTED-LOCALES='en_US.UTF-8/UTF-8' > ../glibc-2*/localedata/SUPPORTED\nmake localedata/install-locales \\\n    localedir=$out/lib/locale \\\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; extraNativeBuildInputs = [ «repeated» ]; installFlags = [ "sysconfdir=$(out)/etc" ]; installPhase = "mkdir -p \"$out/lib/locale\" \"$out/share/i18n\"\ncp -v \"$TMPDIR/$NIX_STORE/\"*\"/lib/locale/locale-archive\" \"$out/lib/locale\"\ncp -v ../glibc-2*/localedata/SUPPORTED \"$out/share/i18n/SUPPORTED\"\n"; is64bit = true; linuxHeaders = null; makeFlags = [ "OBJCOPY=objcopy" ]; mesonFlags = [ ]; name = "glibc-locales-2.35-224"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "bison-3.8.2"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-syscmd-shell=/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "gnum4-1.4.19"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "gnum4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "m4-1.4.19.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-swapHA/ZO8QoDPwumMt6s5gf91oYe+oyk4EfRSyJqMg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/m4/m4-1.4.19.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "m4-1.4.19.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/mcayf992diwks293vs12iwx1ywgm4ijg-m4-1.4.19.tar.bz2"; outputHash = "sha256-swapHA/ZO8QoDPwumMt6s5gf91oYe+oyk4EfRSyJqMg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/m4/m4-1.4.19.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/m4/m4-1.4.19.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.4.19"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gnum4-1.4.19"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/hslazf38vmbb066c0d72kdgxnyvgfl5f-gnum4-1.4.19"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "gnum4"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.4.19"; } «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "bison"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "bison-3.8.2.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-BsnhO99+sk1M62tZIFpPZ8LH5yExGWREMP6C+9FKCrs="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/bison/bison-3.8.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "bison-3.8.2.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9vm1ihdg1ysmrjdbb80g834iizzxb4yk-bison-3.8.2.tar.gz"; outputHash = "sha256-BsnhO99+sk1M62tZIFpPZ8LH5yExGWREMP6C+9FKCrs="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/bison/bison-3.8.2.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/bison/bison-3.8.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.8.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; glrSupport = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "bison-3.8.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/w18bbymv04rskglf5i8d3rz24l4ydakd-bison-3.8.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { glrSupport = true; }; patches = [ ]; pname = "bison"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.8.2"; } { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/v14rafcap3ns1bq5hnwdjwm33x7cyzkl-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/ak766xxmg1y2qklqaj8sbpbzdsnpyrhl-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "expat-2.5.0"; nativeBuildInputs = [ ]; outputBin = "dev"; outputMan = "dev"; outputs = [ "out" "dev" ]; patches = [ ]; pname = "expat"; postFixup = "substituteInPlace $dev/lib/cmake/expat-2.5.0/expat-noconfig.cmake \\\n  --replace \"$\"'{_IMPORT_PREFIX}' $out\n"; preCheck = "patchShebangs ./configure ./run.sh ./test-driver-wrapper.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "expat-2.5.0.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1gnwihpfz4x18rwd6cbrdggmfqjzwsdfh1gpmc0ph21c4gq2097g"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "expat-2.5.0.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/z0dk90vlwlhm097kka2632wmnjr0izw2-expat-2.5.0.tar.xz"; outputHash = "1gnwihpfz4x18rwd6cbrdggmfqjzwsdfh1gpmc0ph21c4gq2097g"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libexpat/libexpat/releases/download/R_2_5_0/expat-2.5.0.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.5.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "expat-2.5.0"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "expat-2.5.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0"; outputBin = "dev"; outputMan = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "expat"; postFixup = "substituteInPlace $dev/lib/cmake/expat-2.5.0/expat-noconfig.cmake \\\n  --replace \"$\"'{_IMPORT_PREFIX}' $out\n"; preCheck = "patchShebangs ./configure ./run.sh ./test-driver-wrapper.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "2.5.0"; }; outPath = "/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev"; outputBin = "dev"; outputMan = "dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "expat"; postFixup = "substituteInPlace $dev/lib/cmake/expat-2.5.0/expat-noconfig.cmake \\\n  --replace \"$\"'{_IMPORT_PREFIX}' $out\n"; preCheck = "patchShebangs ./configure ./run.sh ./test-driver-wrapper.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "2.5.0"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-gcc-arch=generic" "--enable-pax_emutramp" "--disable-exec-static-tramp" "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; dontStrip = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libffi-3.4.4"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "man" "info" ]; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libffi-3.4.4.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-1mxWrSWags8qnfxAizK/XaUjcVALhHRff7i2RXEt9nY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libffi-3.4.4.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pgxpq0lmk4bd0yybaxkb82qlcjx55apn-libffi-3.4.4.tar.gz"; outputHash = "sha256-1mxWrSWags8qnfxAizK/XaUjcVALhHRff7i2RXEt9nY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.4.4"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libffi-3.4.4"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; dontStrip = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libffi-3.4.4"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ak766xxmg1y2qklqaj8sbpbzdsnpyrhl-libffi-3.4.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.4.4"; }; outPath = "/nix/store/v14rafcap3ns1bq5hnwdjwm33x7cyzkl-libffi-3.4.4-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.4.4"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/v14rafcap3ns1bq5hnwdjwm33x7cyzkl-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/ak766xxmg1y2qklqaj8sbpbzdsnpyrhl-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-minimal-3.10.9"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/dkp4pvar4xi7s7zi0wy1qwmjibnqz40w-autoconf-2.71 /nix/store/imkgqkcy655gasinn2liv7n3k3hfqzzj-automake-1.16.5 /nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21 /nix/store/1mcdcmz3rd8dal1vc7wky21nnsswmpai-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/dkp4pvar4xi7s7zi0wy1qwmjibnqz40w-autoconf-2.71 /nix/store/imkgqkcy655gasinn2liv7n3k3hfqzzj-automake-1.16.5 /nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21 /nix/store/1mcdcmz3rd8dal1vc7wky21nnsswmpai-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/b0zsdilmc1lj77l0yg4pispp83p0da7r-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; addFlags = [ ]; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; baseBinName = "pkg-config"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; dontBuild = true; dontConfigure = true; drvAttrs = { __ignoreNulls = true; addFlags = [ ]; args = «repeated»; baseBinName = "pkg-config"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\n\necho $pkg-config > $out/nix-support/orig-pkg-config\n\nwrap pkg-config /nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh \"/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/bin/pkg-config\"\nln -s /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/share $out/share\n"; mesonFlags = [ ]; name = "pkg-config-wrapper-0.29.2"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "doc" ]; patches = [ ]; pname = "pkg-config-wrapper"; postFixup = "printWords /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2 > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/5zish7mvd9g4fkhaq01gq0c2db5z245w-pkg-config-0.29.2-man $man\nln -s /nix/store/d9ppm31x2skak2scm768yhcs8sawj8by-pkg-config-0.29.2-doc $doc\nsubstituteAll /nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/role.bash /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/pkg-config-wrapper/setup-hook.sh ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; unpackPhase = "src=$PWD\n"; userHook = null; version = "0.29.2"; wrapperName = "PKG_CONFIG_WRAPPER"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin $out/nix-support\n\nwrap() {\n  local dst=\"$1\"\n  local wrapper=\"$2\"\n  export prog=\"$3\"\n  substituteAll \"$wrapper\" \"$out/bin/$dst\"\n  chmod +x \"$out/bin/$dst\"\n}\n\necho $pkg-config > $out/nix-support/orig-pkg-config\n\nwrap pkg-config /nix/store/9whvblgb7bgnmqsv7y5xqs1w8xv9aa1d-pkg-config-wrapper.sh \"/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/bin/pkg-config\"\nln -s /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2/share $out/share\n"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pkg-config-wrapper-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/xjpkpbs2mb4nqyqadbi44bwxa8gap8h9-pkg-config-wrapper-0.29.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pkg-config = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-internal-glib" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; outputs = [ "out" "man" "doc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/pkg-config/requires-private.patch ]; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "pkg-config-0.29.2.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "14fmwzki1rlz8bs2p810lk6jqdxsk966d8drgsjmi54cd00rrikg"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "pkg-config-0.29.2.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/83haczzqmdmjjaf73y4fnk1zkcfai9zf-pkg-config-0.29.2.tar.gz"; outputHash = "14fmwzki1rlz8bs2p810lk6jqdxsk966d8drgsjmi54cd00rrikg"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.29.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; description = "A tool that allows packages to find out information about other packages"; homepage = "http://pkg-config.freedesktop.org/wiki/"; insecure = <CODE>; license = «repeated»; name = <CODE>; outputsToInstall = <CODE>; platforms = «repeated»; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; outPath = "/nix/store/5zish7mvd9g4fkhaq01gq0c2db5z245w-pkg-config-0.29.2-man"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/d9ppm31x2skak2scm768yhcs8sawj8by-pkg-config-0.29.2-doc"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.29.2"; }; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = «repeated»; mesonFlags = [ ]; meta = «repeated»; name = "pkg-config-0.29.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2"; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "pkg-config"; postInstall = "rm -f \"$out\"/bin/*-pkg-config"; postPatch = "rm -f check/check-requires-private check/check-gtk check/missing\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "0.29.2"; }; }; patches = [ ]; pkg-config = «repeated»; pname = "pkg-config-wrapper"; postFixup = "printWords /nix/store/jpyjm7h16p6hs0zh0jwy3rydm3mrfxgs-pkg-config-0.29.2 > $out/nix-support/propagated-user-env-packages\nln -s /nix/store/5zish7mvd9g4fkhaq01gq0c2db5z245w-pkg-config-0.29.2-man $man\nln -s /nix/store/d9ppm31x2skak2scm768yhcs8sawj8by-pkg-config-0.29.2-doc $doc\nsubstituteAll /nix/store/1ksmnsr3m6paw8gs7jp9b623agzdrqi2-add-flags.sh $out/nix-support/add-flags.sh\nsubstituteAll /nix/store/hznwcyb002km43zwqcbn0zb58yiv44ym-utils.bash $out/nix-support/utils.bash\n"; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHooks = «repeated»; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; suffixSalt = "aarch64_unknown_linux_gnu"; system = "aarch64-linux"; targetPrefix = ""; type = <CODE>; unpackPhase = "src=$PWD\n"; userHook = null; version = "0.29.2"; wrapperName = "PKG_CONFIG_WRAPPER"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "autoconf-archive-2022.09.03"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "autoconf-archive"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "autoconf-archive-2022.09.03.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-4HRU8A2MrnkHvtQtB0d5iSeAmUdoTZTDcgek1joy9CM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/autoconf-archive/autoconf-archive-2022.09.03.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "autoconf-archive-2022.09.03.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/50fzb7ic7bcpc74q7bqy2yjcnqy51nz1-autoconf-archive-2022.09.03.tar.xz"; outputHash = "sha256-4HRU8A2MrnkHvtQtB0d5iSeAmUdoTZTDcgek1joy9CM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/autoconf-archive/autoconf-archive-2022.09.03.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/autoconf-archive/autoconf-archive-2022.09.03.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2022.09.03"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "autoconf-archive-2022.09.03"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/5ss0gcsix7vqn1awp5zf58nagkh4sjgp-autoconf-archive-2022.09.03"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "autoconf-archive"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2022.09.03"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dontUnpack = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontConfigure = true; dontUnpack = true; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "mkdir -p $out/bin\nsubstituteAll /nix/store/9m54l1bi5814x9cqznwlga7yfs5ipi6h-nuke-refs.sh $out/bin/nuke-refs\nchmod a+x $out/bin/nuke-refs\n"; mesonFlags = [ ]; name = "nuke-references"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; perl = «repeated»; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; signingUtils = null; stdenv = «repeated»; storeDir = "/nix/store"; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installPhase = "mkdir -p $out/bin\nsubstituteAll /nix/store/9m54l1bi5814x9cqznwlga7yfs5ipi6h-nuke-refs.sh $out/bin/nuke-refs\nchmod a+x $out/bin/nuke-refs\n"; mesonFlags = [ ]; meta = <CODE>; name = "nuke-references"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/vqkvba9xvhyb10acv3pl71n9rb19fly5-nuke-references"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; perl = «repeated»; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; signingUtils = null; stdenv = «repeated»; storeDir = "/nix/store"; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3-minimal"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\nrm -R $out/bin/python*-config $out/lib/python*/config-*\n# Strip IDLE (and turtledemo, which uses it)\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\nrm -R $out/lib/python*/tkinter\n# Strip tests\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = <CODE>; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = <CODE>; name = "python3-minimal-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/zhk6v5b31h23qd4hxcmw930jl24y8qby-python3-minimal-3.10.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = <CODE>; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = "python3Minimal"; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = { major = "3"; minor = "10"; patch = "9"; suffix = ""; }; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3-minimal"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\nrm -R $out/bin/python*-config $out/lib/python*/config-*\n# Strip IDLE (and turtledemo, which uses it)\nrm -R $out/bin/idle* $out/lib/python*/{idlelib,turtledemo}\nrm -R $out/lib/python*/tkinter\n# Strip tests\nrm -R $out/lib/python*/test $out/lib/python*/**/test{,s}\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python3Minimal"; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.10.9"; withPackages = <CODE>; } «repeated» ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/2.35-master.patch.gz /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/revert-mktime.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/nix-locale-archive.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/dont-use-system-ld-so-cache.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/dont-use-system-ld-so-preload.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/fix_path_attribute_in_getconf.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/fix-x64-abi.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/nix-nss-open-files.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/glibc/0001-Revert-Remove-all-usage-of-BASH-or-BASH-in-installed.patch ]; pname = "glibc-locales"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib OBJDUMP=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/objdump\"\n\n\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; executable = false; mesonFlags = [ ]; name = "locales-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" "text" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "export LOCALE_ARCHIVE=@out@/lib/locale/locale-archive\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = false; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "locales-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/wb8vrrisd7hp40ngr3g6dp5cn84x15qh-locales-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "export LOCALE_ARCHIVE=@out@/lib/locale/locale-archive\n"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "glibc-2.35.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-USNzL2tnzNMZMF79OZlx1YWSEivMKmUYob0lEN0M9S4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/glibc/glibc-2.35.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "glibc-2.35.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/hsji8dkz2azgn3ylyzx9898qyrf46axv-glibc-2.35.tar.xz"; outputHash = "sha256-USNzL2tnzNMZMF79OZlx1YWSEivMKmUYob0lEN0M9S4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/glibc/glibc-2.35.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/glibc/glibc-2.35.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.35-224"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; extraNativeBuildInputs = «repeated»; inputDerivation = <CODE>; installFlags = «repeated»; installPhase = "mkdir -p \"$out/lib/locale\" \"$out/share/i18n\"\ncp -v \"$TMPDIR/$NIX_STORE/\"*\"/lib/locale/locale-archive\" \"$out/lib/locale\"\ncp -v ../glibc-2*/localedata/SUPPORTED \"$out/share/i18n/SUPPORTED\"\n"; is64bit = true; linuxHeaders = null; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; minorRelease = "2.35"; name = "glibc-locales-2.35-224"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/8m0jkhg9z9ay65r7nqnhlj935vj5f56j-glibc-locales-2.35-224"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { minorRelease = "2.35"; version = "2.35"; }; patches = «repeated»; pname = "glibc-locales"; postPatch = "# Needed for glibc to build with the gnumake 3.82\n# http://comments.gmane.org/gmane.linux.lfs.support/31227\nsed -i 's/ot \\$/ot:\\n\\ttouch $@\\n$/' manual/Makefile\n\n# nscd needs libgcc, and we don't want it dynamically linked\n# because we don't want it to depend on bootstrap-tools libs.\necho \"LDFLAGS-nscd += -static-libgcc\" >> nscd/Makefile\n\n# Ensure that `__nss_files_fopen` can still be wrapped by `libredirect`.\nsed -i -e '/libc_hidden_def (__nss_files_fopen)/d' nss/nss_files_fopen.c\nsed -i -e '/libc_hidden_proto (__nss_files_fopen)/d' include/nss_files.h\n\n# Ensure that libidn2 is found.\npatch -p 1 <<EOF\n--- a/inet/idna.c\n+++ b/inet/idna.c\n@@ -25,1 +25,1 @@\n-#define LIBIDN2_SONAME \"libidn2.so.0\"\n+#define LIBIDN2_SONAME \"/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib/libidn2.so.0\"\nEOF\n"; preBuild = ""; preConfigure = "export PWD_P=$(type -tP pwd)\nfor i in configure io/ftwtest-sh; do\n    # Can't use substituteInPlace here because replace hasn't been\n    # built yet in the bootstrap.\n    sed -i \"$i\" -e \"s^/bin/pwd^$PWD_P^g\"\ndone\n\nmkdir ../build\ncd ../build\n\nconfigureScript=\"`pwd`/../$sourceRoot/configure\"\n\nmakeFlags=\"$makeFlags BUILD_LDFLAGS=-Wl,-rpath,/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib OBJDUMP=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/objdump\"\n\n\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.35"; } ]; nixpkgsVersion = "23.05"; outputHash = "sha256-vucC9MfpCCPyST21n09QDrj3z3MzKdBGo/ONUQvuxxQ="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/iana-etc-20221107.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/Mic92/iana-etc/releases/download/20221107/iana-etc-20221107.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/k9g0sr4ldr7ywc4nswq781qbh765v1ax-source"; outputHash = "sha256-vucC9MfpCCPyST21n09QDrj3z3MzKdBGo/ONUQvuxxQ="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/Mic92/iana-etc/releases/download/20221107/iana-etc-20221107.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/iana-etc-20221107.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/Mic92/iana-etc/releases/download/20221107/iana-etc-20221107.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "20221107"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "install -D -m0644 -t $out/etc services protocols\n"; mesonFlags = [ ]; meta = <CODE>; name = "iana-etc-20221107"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/idcdpd58bkb83sl8551b7mdbp7s2g6ah-iana-etc-20221107"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "iana-etc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "20221107"; }; mesonFlags = [ ]; name = "iana-etc-1.17.patch"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/iana-etc-1.17.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; iana = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "iana-etc-1.17.patch"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/f4dkr19z3j9yqg6g5ij1ns2y8csfr9d7-iana-etc-1.17.patch"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/iana-etc-1.17.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; } { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/substitute/substitute-all.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mailcap = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installPhase = "runHook preInstall\n\nsubstituteInPlace mailcap --replace \"/usr/bin/\" \"\"\nsh generate-nginx-mimetypes.sh < mime.types > nginx-mime.types\n\ninstall -D -m0644 nginx-mime.types $out/etc/nginx/mime.types\ninstall -D -m0644 -t $out/etc mailcap mime.types\ninstall -D -m0644 -t $out/share/man/man5 mailcap.5\n\nrunHook postInstall\n"; mesonFlags = [ ]; name = "mailcap-2.1.53"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "mailcap"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "mailcap-2.1.53.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Xuou8XswSXe6PsuHr61DGfoEQPgl5Pb7puj6L/64h4U="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://releases.pagure.org/mailcap/mailcap-2.1.53.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "mailcap-2.1.53.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/87yibvyd74bkwmfzxy649vg6jk152h86-mailcap-2.1.53.tar.xz"; outputHash = "sha256-Xuou8XswSXe6PsuHr61DGfoEQPgl5Pb7puj6L/64h4U="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://releases.pagure.org/mailcap/mailcap-2.1.53.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://releases.pagure.org/mailcap/mailcap-2.1.53.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.1.53"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nsubstituteInPlace mailcap --replace \"/usr/bin/\" \"\"\nsh generate-nginx-mimetypes.sh < mime.types > nginx-mime.types\n\ninstall -D -m0644 nginx-mime.types $out/etc/nginx/mime.types\ninstall -D -m0644 -t $out/etc mailcap mime.types\ninstall -D -m0644 -t $out/share/man/man5 mailcap.5\n\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "mailcap-2.1.53"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "mailcap"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2.1.53"; }; mesonFlags = [ ]; name = "mailcap-1.17.patch"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/mailcap-1.17.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; inputDerivation = <CODE>; mailcap = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "mailcap-1.17.patch"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/fdzxsmsdh0z55nxchbpk9b29a72f903b-mailcap-1.17.patch"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/mailcap-1.17.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; } { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/substitute/substitute-all.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "tzdata-1.19.patch"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/tzdata-1.19.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tzdata = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installFlags = [ ]; makeFlags = [ "TOPDIR=$(out)" "TZDIR=$(out)/share/zoneinfo" "BINDIR=$(bin)/bin" "ZICDIR=$(bin)/bin" "ETCDIR=$(TMPDIR)/etc" "TZDEFAULT=tzdefault-to-remove" "LIBDIR=$(dev)/lib" "MANDIR=$(man)/share/man" "AWK=awk" "CFLAGS=-DHAVE_LINK=0" "CFLAGS+=-DZIC_BLOAT_DEFAULT=\\\"fat\\\"" "cc=cc" "AR=ar" ]; mesonFlags = [ ]; name = "tzdata-2022g"; nativeBuildInputs = [ ]; outputs = [ "out" "bin" "man" "dev" ]; patches = [ ]; pname = "tzdata"; postInstall = "rm $out/share/zoneinfo-posix\nrm $out/share/zoneinfo/tzdefault-to-remove\nmkdir $out/share/zoneinfo/posix\n( cd $out/share/zoneinfo/posix; ln -s ../* .; rm posix )\nmv $out/share/zoneinfo-leaps $out/share/zoneinfo/right\n\nmkdir -p \"$dev/include\"\ncp tzfile.h \"$dev/include/tzfile.h\"\n"; propagatedBuildInputs = [ ]; propagatedBuildOutputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/tzdata/tzdata-setup-hook.sh; sourceRoot = "."; srcs = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "tzdata2022g.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-RJHbgoGulKhNk55Ce92D3DifJnZNJ9mlxS14LBZ2RHg="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://data.iana.org/time-zones/releases/tzdata2022g.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "tzdata2022g.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/v5s782jljgg11rmf9cssqzwsximbvn8r-tzdata2022g.tar.gz"; outputHash = "sha256-RJHbgoGulKhNk55Ce92D3DifJnZNJ9mlxS14LBZ2RHg="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://data.iana.org/time-zones/releases/tzdata2022g.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://data.iana.org/time-zones/releases/tzdata2022g.tar.gz"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "tzcode2022g.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-lhC7C5ZW/0BMNhpB8yhtpTBktUadhPAMnLIxTIYU2nQ="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://data.iana.org/time-zones/releases/tzcode2022g.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "tzcode2022g.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/zpwl0xqy40rvpn8q043yqdnd879cp0ka-tzcode2022g.tar.gz"; outputHash = "sha256-lhC7C5ZW/0BMNhpB8yhtpTBktUadhPAMnLIxTIYU2nQ="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://data.iana.org/time-zones/releases/tzcode2022g.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://data.iana.org/time-zones/releases/tzcode2022g.tar.gz"; urls = «repeated»; userHook = null; } ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2022g"; }; drvPath = <CODE>; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tzdata-2022g"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tzdata-2022g"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "tzdata"; postInstall = "rm $out/share/zoneinfo-posix\nrm $out/share/zoneinfo/tzdefault-to-remove\nmkdir $out/share/zoneinfo/posix\n( cd $out/share/zoneinfo/posix; ln -s ../* .; rm posix )\nmv $out/share/zoneinfo-leaps $out/share/zoneinfo/right\n\nmkdir -p \"$dev/include\"\ncp tzfile.h \"$dev/include/tzfile.h\"\n"; propagatedBuildInputs = [ ]; propagatedBuildOutputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/tzdata/tzdata-setup-hook.sh; sourceRoot = "."; srcs = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2022g"; }; outPath = "/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "tzdata"; postInstall = "rm $out/share/zoneinfo-posix\nrm $out/share/zoneinfo/tzdefault-to-remove\nmkdir $out/share/zoneinfo/posix\n( cd $out/share/zoneinfo/posix; ln -s ../* .; rm posix )\nmv $out/share/zoneinfo-leaps $out/share/zoneinfo/right\n\nmkdir -p \"$dev/include\"\ncp tzfile.h \"$dev/include/tzfile.h\"\n"; propagatedBuildInputs = [ ]; propagatedBuildOutputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/tzdata/tzdata-setup-hook.sh; sourceRoot = "."; srcs = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2022g"; }; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; installFlags = [ ]; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tzdata-2022g"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = [ ]; pname = "tzdata"; postInstall = "rm $out/share/zoneinfo-posix\nrm $out/share/zoneinfo/tzdefault-to-remove\nmkdir $out/share/zoneinfo/posix\n( cd $out/share/zoneinfo/posix; ln -s ../* .; rm posix )\nmv $out/share/zoneinfo-leaps $out/share/zoneinfo/right\n\nmkdir -p \"$dev/include\"\ncp tzfile.h \"$dev/include/tzfile.h\"\n"; propagatedBuildInputs = [ ]; propagatedBuildOutputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/tzdata/tzdata-setup-hook.sh; sourceRoot = "."; srcs = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "2022g"; }; userHook = null; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tzdata-1.19.patch"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/c28yz4a1hlqmlvdpz80pd6143bwg53h3-tzdata-1.19.patch"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/tzdata-1.19.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; tzdata = «repeated»; userHook = null; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/remove-tools-1.11.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/compilers/go/go_no_vendor_checks-1.16.patch ]; pname = "go"; postPatch = "patchShebangs .\n"; preInstall = "rm -r pkg/obj\n# Contains the wrong perl shebang when cross compiling,\n# since it is not used for anything we can deleted as well.\nrm src/regexp/syntax/make_perl_groups.pl\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "go1.19.4.src.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-7adNtKxJSACj5m7nhOSVv7ubjlNd+SSosBsagCi382g="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://go.dev/dl/go1.19.4.src.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "go1.19.4.src.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/2lx9rlclwmgvp6xnlikk6q0pn89m7rzz-go1.19.4.src.tar.gz"; outputHash = "sha256-7adNtKxJSACj5m7nhOSVv7ubjlNd+SSosBsagCi382g="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://go.dev/dl/go1.19.4.src.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://go.dev/dl/go1.19.4.src.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.19.4"; }; drvPath = <CODE>; goBootstrap = «repeated»; inputDerivation = <CODE>; installPhase = "runHook preInstall\nmkdir -p $GOROOT_FINAL\ncp -a bin pkg src lib misc api doc $GOROOT_FINAL\nln -s $GOROOT_FINAL/bin $out/bin\nrunHook postInstall\n"; mesonFlags = [ ]; meta = { available = <CODE>; broken = <CODE>; description = "The Go Programming language"; homepage = "https://go.dev/"; insecure = <CODE>; license = { deprecated = false; free = true; fullName = "BSD 3-clause \"New\" or \"Revised\" License"; redistributable = <CODE>; shortName = "bsd3"; spdxId = "BSD-3-Clause"; url = <CODE>; }; maintainers = [ <CODE> <CODE> <CODE> <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = [ "x86_64-darwin" "i686-darwin" "aarch64-darwin" "armv7a-darwin" "aarch64-linux" "armv5tel-linux" "armv6l-linux" "armv7a-linux" "armv7l-linux" "i686-linux" "m68k-linux" "microblaze-linux" "microblazeel-linux" "mipsel-linux" "mips64el-linux" "powerpc64-linux" "powerpc64le-linux" "riscv32-linux" "riscv64-linux" "s390-linux" "s390x-linux" "x86_64-linux" ]; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "go-1.19.4"; nativeBuildInputs = [ ]; out = { CC_FOR_TARGET = null; CGO_ENABLED = 1; CXX_FOR_TARGET = null; GO386 = "softfloat"; GOARCH = "arm64"; GOARM = ""; GOHOSTARCH = "arm64"; GOHOSTOS = "linux"; GOOS = "linux"; GOROOT_BOOTSTRAP = "/nix/store/d11b7kr0i5vfjlhfscskpz4xn0ikggba-go-1.16-linux-arm64-bootstrap/share/go"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\nexport GOCACHE=$TMPDIR/go-cache\n# this is compiled into the binary\nexport GOROOT_FINAL=$out/share/go\n\nexport PATH=$(pwd)/bin:$PATH\n\n\nulimit -a\n\npushd src\n./make.bash\npopd\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; goBootstrap = «repeated»; inputDerivation = <CODE>; installPhase = "runHook preInstall\nmkdir -p $GOROOT_FINAL\ncp -a bin pkg src lib misc api doc $GOROOT_FINAL\nln -s $GOROOT_FINAL/bin $out/bin\nrunHook postInstall\n"; mesonFlags = [ ]; meta = «repeated»; name = "go-1.19.4"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/j9fgvyljgknayp3gs9mld4ayvakcsvl0-go-1.19.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { goBootstrap = «repeated»; skopeoTest = <CODE>; tests = <CODE>; }; patches = «repeated»; pname = "go"; postPatch = "patchShebangs .\n"; preInstall = "rm -r pkg/obj\n# Contains the wrong perl shebang when cross compiling,\n# since it is not used for anything we can deleted as well.\nrm src/regexp/syntax/make_perl_groups.pl\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; skopeoTest = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.19.4"; }; outPath = "/nix/store/j9fgvyljgknayp3gs9mld4ayvakcsvl0-go-1.19.4"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "go"; postPatch = "patchShebangs .\n"; preInstall = "rm -r pkg/obj\n# Contains the wrong perl shebang when cross compiling,\n# since it is not used for anything we can deleted as well.\nrm src/regexp/syntax/make_perl_groups.pl\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; skopeoTest = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "1.19.4"; } ]; doCheck = true; doInstallCheck = false; drvAttrs = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = «repeated»; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/ja22cw1cy9va63wpf2629nrpij735kyv-qrystal-cs-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = [ "-X github.com/nyiyui/qrystal/node.CommandIp=/nix/store/b38k8kd6qqbcqzcmsvmbsi9kh1bjf7gw-iproute2-6.0.0/bin/ip" "-X github.com/nyiyui/qrystal/node.CommandIptables=/nix/store/8i1jgn26n45yir596zssraq2xpjjzqjn-iptables-1.8.8/bin/iptables" ]; mesonFlags = [ ]; name = "qrystal-cs-20221210"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "qrystal-cs"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = [ "cmd/cs" ]; system = "aarch64-linux"; tags = [ "nix" ]; userHook = null; version = "20221210"; }; drvPath = "/nix/store/00h061wvv12y0cr3md30sks01fsmg8g5-qrystal-cs-20221210.drv"; enableParallelBuilding = true; enableParallelChecking = true; go = «repeated»; go-modules = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; drvAttrs = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" "GIT_PROXY_COMMAND" "SOCKS_SERVER" "GOPROXY" ]; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; name = "qrystal-cs-20221210-go-modules"; nativeBuildInputs = [ «repeated» { NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; NIX_LDFLAGS = "-lgcc_s"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { CXX = "c++"; CXXCPP = "c++ -E"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-manual" "--disable-ares" "--disable-ldap" "--disable-ldaps" "--with-ca-fallback" "--without-nghttp3" "--without-ngtcp2" "--without-librtmp" "--with-zstd" "--with-brotli=/nix/store/06y8njfl7gbbjg1d2a1qh08lf2brnl6w-brotli-1.0.9-dev" "--without-gnutls" "--with-libidn2=/nix/store/89k3dylbazh54nqavda80ii4dc8mir9v-libidn2-2.3.2-dev" "--with-openssl=/nix/store/hj8ldqv0f1fs3qfzbpf74j0q7zw0xiqa-openssl-3.0.7-dev" "--with-libssh2=/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev" "--without-wolfssl" "--with-gssapi=/nix/store/512nsb27qaj685wbn9m1k5nckrnljf59-libkrb5-1.20-dev" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { CXX = "c++"; CXXCPP = "c++ -E"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "curl-7.86.0"; nativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "man" "devdoc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/networking/curl/7.79.1-darwin-no-systemconfiguration.patch ]; pname = "curl"; postInstall = "moveToOutput bin/curl-config \"$dev\"\n\n# Install completions\nmake -C scripts install\nsed '/^dependency_libs/s|/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev|/nix/store/p7i0wva599jankb4dgy246i3zgcxma04-libssh2-1.10.0|' -i \"$out\"/lib/*.la\n"; preCheck = "patchShebangs tests/\n"; preConfigure = "sed -e 's|/usr/bin|/no-such-path|g' -i.bak configure\nrm src/tool_hugehelp.c\n"; propagatedBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; mesonFlags = [ ]; name = "brotli-1.0.9"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» { CXX = "c++"; CXXCPP = "c++ -E"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-manual" "--disable-ares" "--disable-ldap" "--disable-ldaps" "--with-ca-fallback" "--without-nghttp3" "--without-ngtcp2" "--without-librtmp" "--without-zstd" "--without-brotli" "--without-gnutls" "--without-libidn2" "--with-openssl=/nix/store/hj8ldqv0f1fs3qfzbpf74j0q7zw0xiqa-openssl-3.0.7-dev" "--with-libssh2=/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev" "--without-wolfssl" "--with-gssapi=/nix/store/512nsb27qaj685wbn9m1k5nckrnljf59-libkrb5-1.20-dev" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { CXX = "c++"; CXXCPP = "c++ -E"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "curl-7.86.0"; nativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "man" "devdoc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/networking/curl/7.79.1-darwin-no-systemconfiguration.patch ]; pname = "curl"; postInstall = "moveToOutput bin/curl-config \"$dev\"\n\n# Install completions\nmake -C scripts install\nsed '/^dependency_libs/s|/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev|/nix/store/p7i0wva599jankb4dgy246i3zgcxma04-libssh2-1.10.0|' -i \"$out\"/lib/*.la\n"; preCheck = "patchShebangs tests/\n"; preConfigure = "sed -e 's|/usr/bin|/no-such-path|g' -i.bak configure\nrm src/tool_hugehelp.c\n"; propagatedBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "shared" "--libdir=lib" "--openssldir=etc/ssl" "enable-ktls" "no-afalgeng" ]; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ "MANDIR=$(man)/share/man" "MANSUFFIX=ssl" ]; mesonFlags = [ ]; name = "openssl-3.0.7"; nativeBuildInputs = [ «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "man" "doc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/3.0/nix-ssl-cert-file.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/3.0/openssl-disable-kernel-detection.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/use-etc-ssl-certs.patch ]; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "openssl-3.0.7.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-gwSdBComDmlvYkBqxcCL9wb9hDg/lFzyG9YentlcOW4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.openssl.org/source/openssl-3.0.7.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "openssl-3.0.7.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/y8svc7bs4ah28j9zg2z3lwyk12v8zkc8-openssl-3.0.7.tar.gz"; outputHash = "sha256-gwSdBComDmlvYkBqxcCL9wb9hDg/lFzyG9YentlcOW4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.openssl.org/source/openssl-3.0.7.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.openssl.org/source/openssl-3.0.7.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.0.7"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/khj6cy6w1fka46m9bsql8yyw157hkb1h-openssl-3.0.7"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.0.7"; }; outPath = "/nix/store/hj8ldqv0f1fs3qfzbpf74j0q7zw0xiqa-openssl-3.0.7-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.0.7"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "ETCDIR=$(out)/etc" "BINDIR=$(out)/bin" "SBINDIR=$(out)/sbin" "SHAREDIR=$(out)/share/keyutils" "MANDIR=$(out)/share/man" "INCLUDEDIR=$(dev)/include" "LIBDIR=$(lib)/lib" "USRLIBDIR=$(lib)/lib" ]; makeFlags = [ ]; mesonFlags = [ ]; name = "keyutils-1.6.3"; nativeBuildInputs = [ ]; outputs = [ "out" "lib" "dev" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/keyutils/conf-symlink.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/keyutils/0001-Remove-unused-function-after_eq.patch ]; pname = "keyutils"; postPatch = "# https://github.com/archlinux/svntogit-packages/blob/packages/keyutils/trunk/reproducible.patch\nsubstituteInPlace Makefile \\\n  --replace \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(shell date -u +%F)\\\"\"' \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(date -ud \"@$SOURCE_DATE_EPOCH\" +%F)\\\"\"'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "keyutils-1.6.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-ph1XBhNq5MBb1I+GGGvP29iN2L1RB+Phlckkz8Gzm7Q="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/keyutils.git/snapshot/keyutils-1.6.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "keyutils-1.6.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9n3d2g1pplp7bacghxkqb73z0fipgn2h-keyutils-1.6.3.tar.gz"; outputHash = "sha256-ph1XBhNq5MBb1I+GGGvP29iN2L1RB+Phlckkz8Gzm7Q="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/keyutils.git/snapshot/keyutils-1.6.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/keyutils.git/snapshot/keyutils-1.6.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.6.3"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; lib = <CODE>; makeFlags = [ ]; mesonFlags = [ ]; meta = <CODE>; name = "keyutils-1.6.3"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/01929jba5b4w4k5y3y0zialfgzsjbg92-keyutils-1.6.3-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "keyutils"; postPatch = "# https://github.com/archlinux/svntogit-packages/blob/packages/keyutils/trunk/reproducible.patch\nsubstituteInPlace Makefile \\\n  --replace \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(shell date -u +%F)\\\"\"' \\\n    'VCPPFLAGS\t:= -DPKGBUILD=\"\\\"$(date -ud \"@$SOURCE_DATE_EPOCH\" +%F)\\\"\"'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.6.3"; } ]; buildPhase = "runHook preBuild\n\nMAKE=\"make -j $NIX_BUILD_CORES\"\nfor folder in $libFolders; do\n  $MAKE -C $folder\ndone\n\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--localstatedir=/var/lib" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; buildPhase = "runHook preBuild\n\nMAKE=\"make -j $NIX_BUILD_CORES\"\nfor folder in $libFolders; do\n  $MAKE -C $folder\ndone\n\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p \"$out\"/{bin,sbin,lib/pkgconfig,share/{et,man/man1}} \\\n  \"$dev\"/include/{gssapi,gssrpc,kadm5,krb5}\nfor folder in $libFolders; do\n  $MAKE -C $folder install\ndone\n\nrunHook postInstall\n"; libFolders = [ "util" "include" "lib" "build-tools" ]; mesonFlags = [ ]; name = "libkrb5-1.20"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" "dev" ]; patches = [ ]; pname = "libkrb5"; postInstall = "moveToOutput bin/krb5-config \"$dev\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = "krb5-1.20/src"; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "krb5-1.20.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-fgIr3TyFGDAXP5+qoAaiMKDg/a1MlT6Fv/S/DaA24S8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://kerberos.org/dist/krb5/1.20/krb5-1.20.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "krb5-1.20.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/2w1l3yy5gv5pqji2vw5glbj4vrhfz9cg-krb5-1.20.tar.gz"; outputHash = "sha256-fgIr3TyFGDAXP5+qoAaiMKDg/a1MlT6Fv/S/DaA24S8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://kerberos.org/dist/krb5/1.20/krb5-1.20.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://kerberos.org/dist/krb5/1.20/krb5-1.20.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.20"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; implementation = "krb5"; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p \"$out\"/{bin,sbin,lib/pkgconfig,share/{et,man/man1}} \\\n  \"$dev\"/include/{gssapi,gssrpc,kadm5,krb5}\nfor folder in $libFolders; do\n  $MAKE -C $folder install\ndone\n\nrunHook postInstall\n"; libFolders = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "libkrb5-1.20"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/512nsb27qaj685wbn9m1k5nckrnljf59-libkrb5-1.20-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { implementation = "krb5"; tests = <CODE>; }; patches = [ ]; pname = "libkrb5"; postInstall = "moveToOutput bin/krb5-config \"$dev\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = "krb5-1.20/src"; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.20"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "c-ares-1.18.1"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" ]; patches = [ ]; pname = "c-ares"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "c-ares-1.18.1.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Gn1SqKhKn7/7G+kTPA9uFyF9kepab6Yfa0cpzaeOu88="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://c-ares.haxx.se/download/c-ares-1.18.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "c-ares-1.18.1.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/1vvmd40znxhfzbvmxhz7vymqrlqpygrv-c-ares-1.18.1.tar.gz"; outputHash = "sha256-Gn1SqKhKn7/7G+kTPA9uFyF9kepab6Yfa0cpzaeOu88="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://c-ares.haxx.se/download/c-ares-1.18.1.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://c-ares.haxx.se/download/c-ares-1.18.1.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.18.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "c-ares-1.18.1"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/vjwcfi2n8z20hgbjb15bb8gppih9c4xg-c-ares-1.18.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "c-ares"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.18.1"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "libev-4.33"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "libev"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libev-4.33.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1sjs4324is7fp21an4aas2z4dwsvs6z4xwrmp72vwpq1s6wbfzjh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "http://dist.schmorp.de/libev/Attic/libev-4.33.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libev-4.33.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/2mkgvzqxb3bn4g37hr6qiqz81rmf9df2-libev-4.33.tar.gz"; outputHash = "1sjs4324is7fp21an4aas2z4dwsvs6z4xwrmp72vwpq1s6wbfzjh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "http://dist.schmorp.de/libev/Attic/libev-4.33.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "http://dist.schmorp.de/libev/Attic/libev-4.33.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.33"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libev-4.33"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/q5cyn7dwvn8cvjqvmixwhmkbhxxhyncc-libev-4.33"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libev"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "4.33"; } «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-examples" "--enable-app" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "nghttp2-1.49.0"; nativeBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/3inq067xw7bic7dy828bgjjzx54kav9v-install-shell-files.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/3inq067xw7bic7dy828bgjjzx54kav9v-install-shell-files.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "install-shell-files"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "install-shell-files"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/mn0rgchghr5z1a6ibbnxnhjjrlvqchm0-install-shell-files"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { tests = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { FILECMD = "/nix/store/flz7zd718rmq03jnxv86767i5pzhwrs8-file-5.43/bin/file"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixLibtool = true; dontPatchShebangs = true; drvAttrs = { FILECMD = "/nix/store/flz7zd718rmq03jnxv86767i5pzhwrs8-file-5.43/bin/file"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixLibtool = true; dontPatchShebangs = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libtool-2.4.7"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = <CODE>; dontPatchShebangs = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontPatchShebangs = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "autoconf-2.71"; nativeBuildInputs = [ «repeated» «repeated» { NATIVE_TOOLS_CFLAGS = null; NATIVE_TOOLS_LDFLAGS = null; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» null ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkFlags = [ "XFAIL_TESTS=test_scripts/layout_formatting_fr_icons.sh" ]; cmakeFlags = [ ]; configureFlags = [ "PERL=/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl" ]; depsBuildBuild = [ «repeated» «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { NATIVE_TOOLS_CFLAGS = null; NATIVE_TOOLS_LDFLAGS = null; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkFlags = «repeated»; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "TEXMF=$(out)/texmf-dist" ]; installTargets = [ "install" "install-tex" ]; mesonFlags = [ ]; name = "texinfo-6.8"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/texinfo/fix-glibc-2.34.patch ]; pname = "texinfo"; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "texinfo-6.8.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1i7yb7mrp3inz25zbzv2pllr4y7d58v818f1as7iz8mw53nm7dwf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/texinfo/texinfo-6.8.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "texinfo-6.8.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/ycj1q918l6852kndr75rlwmw43k5ybys-texinfo-6.8.tar.xz"; outputHash = "1i7yb7mrp3inz25zbzv2pllr4y7d58v818f1as7iz8mw53nm7dwf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/texinfo/texinfo-6.8.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/texinfo/texinfo-6.8.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "6.8"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; installTargets = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "texinfo-6.8"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/gjkjrzbqjcvj1m1bxgbj8bjfnq0y7cli-texinfo-6.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "texinfo"; postFixup = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "6.8"; } ]; outputs = [ "out" "doc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/autoconf/2.71-fix-race.patch ]; pname = "autoconf"; postBuild = "\n    make html\n  "; postInstall = "\n    make install-html\n  "; preCheck = "export TESTSUITEFLAGS=\"-j$NIX_BUILD_CORES\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "autoconf-2.71.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "197sl23irn6s9pd54rxj5vcp5y8dv65jb9yfqgr2g56cxg7q6k7i"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/autoconf/autoconf-2.71.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "autoconf-2.71.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/g3pzpdicszf700d5xffyk939jzxa4r2k-autoconf-2.71.tar.xz"; outputHash = "197sl23irn6s9pd54rxj5vcp5y8dv65jb9yfqgr2g56cxg7q6k7i"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/autoconf/autoconf-2.71.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/autoconf/autoconf-2.71.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.71"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "autoconf-2.71"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/dkp4pvar4xi7s7zi0wy1qwmjibnqz40w-autoconf-2.71"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "autoconf"; postBuild = "\n    make html\n  "; postInstall = "\n    make install-html\n  "; preCheck = "export TESTSUITEFLAGS=\"-j$NIX_BUILD_CORES\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.71"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontPatchShebangs = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontPatchShebangs = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "automake-1.16.5"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "automake"; preCheck = "unset NIX_INDENT_MAKE"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/automake/setup-hook.sh; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "automake-1.16.5.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0sdl32qxdy7m06iggmkkvf7j520rmmgbsjzbm7fgnxwxdp6mh7gh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/automake/automake-1.16.5.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "automake-1.16.5.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/gmaq49vzfrkvr714y4fhfxv100ijihin-automake-1.16.5.tar.xz"; outputHash = "0sdl32qxdy7m06iggmkkvf7j520rmmgbsjzbm7fgnxwxdp6mh7gh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/automake/automake-1.16.5.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/automake/automake-1.16.5.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.16.5"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "automake-1.16.5"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/imkgqkcy655gasinn2liv7n3k3hfqzzj-automake-1.16.5"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "automake"; preCheck = "unset NIX_INDENT_MAKE"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/misc/automake/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.16.5"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» null ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-nls" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "help2man-1.49.2"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputs = [ "out" ]; patches = null; pname = "help2man"; postInstall = "mv $out/bin/help2man $out/bin/.help2man-wrapped\ncat > $out/bin/help2man <<EOF\n#! $SHELL -e\nexport PERL5LIB=\\\${PERL5LIB:+:}/nix/store/9mqrx4p9dvlcsyjjbz51ckcjffhc3jx4-perl5.36.0-gettext-1.07/lib/perl5/site_perl\n\nexec -a \\$0 $out/bin/.help2man-wrapped \"\\$@\"\nEOF\nchmod +x $out/bin/help2man\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "help2man-1.49.2.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-ni4OITp+CjYkTu1iBNkCtlBGAqV4tuzRUmixRU3q3TY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/help2man/help2man-1.49.2.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "help2man-1.49.2.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4s1i45v697m56k4rydf5j3qh8ib45h86-help2man-1.49.2.tar.xz"; outputHash = "sha256-ni4OITp+CjYkTu1iBNkCtlBGAqV4tuzRUmixRU3q3TY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/help2man/help2man-1.49.2.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/help2man/help2man-1.49.2.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.49.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "help2man-1.49.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/j3347mg2rkbgr21siz1cfvis1mk37cvs-help2man-1.49.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = null; pname = "help2man"; postInstall = "mv $out/bin/help2man $out/bin/.help2man-wrapped\ncat > $out/bin/help2man <<EOF\n#! $SHELL -e\nexport PERL5LIB=\\\${PERL5LIB:+:}/nix/store/9mqrx4p9dvlcsyjjbz51ckcjffhc3jx4-perl5.36.0-gettext-1.07/lib/perl5/site_perl\n\nexec -a \\$0 $out/bin/.help2man-wrapped \"\\$@\"\nEOF\nchmod +x $out/bin/help2man\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.49.2"; } «repeated» «repeated» ]; outputs = [ "out" "lib" ]; patches = [ ]; pname = "libtool"; postPatch = "aclocal -I m4\nautomake\nautoconf\n\npushd libltdl\naclocal -I ../m4\nautomake\nautoconf\npopd\nsubstituteInPlace libtoolize.in       --replace '#! /usr/bin/env sh' '#!/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash'\n"; propagatedBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ ]; mesonFlags = [ ]; name = "file-5.43"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "file"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "file-5.43.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-jIAV6Rrg6NAyHZTHgjmJLvnbxwxK3gAIwOlYlKv7GZE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://astron.com/pub/file/file-5.43.tar.gz" "https://distfiles.macports.org/file/file-5.43.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "file-5.43.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/6w2pciy3jgirmdg7cgv4mrd4j8xv4907-file-5.43.tar.gz"; outputHash = "sha256-jIAV6Rrg6NAyHZTHgjmJLvnbxwxK3gAIwOlYlKv7GZE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = ""; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = ""; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.43"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = [ ]; mesonFlags = [ ]; meta = <CODE>; name = "file-5.43"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/flz7zd718rmq03jnxv86767i5pzhwrs8-file-5.43"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "file"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.43"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libtool-2.4.7.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-BOlsJATqcMWQxUbrpCAqThJyLGQAFsErmy8c49SB6ag="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/libtool/libtool-2.4.7.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libtool-2.4.7.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/ck70x6hdl1kgqa4a9ps8spw6ph9mfcj8-libtool-2.4.7.tar.gz"; outputHash = "sha256-BOlsJATqcMWQxUbrpCAqThJyLGQAFsErmy8c49SB6ag="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/libtool/libtool-2.4.7.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/libtool/libtool-2.4.7.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.4.7"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; lib = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libtool-2.4.7"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/1mcdcmz3rd8dal1vc7wky21nnsswmpai-libtool-2.4.7"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libtool"; postPatch = "aclocal -I m4\nautomake\nautoconf\n\npushd libltdl\naclocal -I ../m4\nautomake\nautoconf\npopd\nsubstituteInPlace libtoolize.in       --replace '#! /usr/bin/env sh' '#!/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash'\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.4.7"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "CUnit-2.1-3"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "CUnit"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CUnit-2.1-3.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "057j82da9vv4li4z5ri3227ybd18nzyq81f6gsvhifs5z0vr3cpm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/cunit/CUnit/2.1-3/CUnit-2.1-3.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CUnit-2.1-3.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4zasdvbbqdw4h44302ai76v0i7wczzg6-CUnit-2.1-3.tar.bz2"; outputHash = "057j82da9vv4li4z5ri3227ybd18nzyq81f6gsvhifs5z0vr3cpm"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/cunit/CUnit/2.1-3/CUnit-2.1-3.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/cunit/CUnit/2.1-3/CUnit-2.1-3.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.1-3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "CUnit-2.1-3"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/hm4mbvs0jlhh85paln29xglv7jrsggm2-CUnit-2.1-3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "CUnit"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.1-3"; } «repeated» ]; outputs = [ "bin" "out" "dev" "lib" ]; patches = [ ]; pname = "nghttp2"; postInstall = "installShellCompletion --bash doc/bash_completion/{h2load,nghttp,nghttpd,nghttpx}\n"; preCheck = "export TZDIR=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "nghttp2-1.49.0.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-LNTbfXX3FJQVMknL6UoJLaTG7NdCQPirGM9kTZ1l9u4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/nghttp2/nghttp2/releases/download/v1.49.0/nghttp2-1.49.0.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "nghttp2-1.49.0.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/32n4a1wxizkmcy3sdblk5n4i6474swd9-nghttp2-1.49.0.tar.bz2"; outputHash = "sha256-LNTbfXX3FJQVMknL6UoJLaTG7NdCQPirGM9kTZ1l9u4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/nghttp2/nghttp2/releases/download/v1.49.0/nghttp2-1.49.0.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/nghttp2/nghttp2/releases/download/v1.49.0/nghttp2-1.49.0.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.49.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; lib = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "nghttp2-1.49.0"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/d7vxpmb1d7k4k06y2ljj3s74z8nnp8fi-nghttp2-1.49.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "nghttp2"; postInstall = "installShellCompletion --bash doc/bash_completion/{h2load,nghttp,nghttpd,nghttpx}\n"; preCheck = "export TZDIR=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.49.0"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "libssh2-1.10.0"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "devdoc" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/libssh2/openssl_add_support_for_libressl_3_5.patch ]; pname = "libssh2"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libssh2-1.10.0.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-LWTpDz3tOUuR06LndMogOkF59prr7gMAPlpvpiHkHVE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.libssh2.org/download/libssh2-1.10.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libssh2-1.10.0.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/7ifrkfd7m64v1c6lcg346hs2vkkdvi1x-libssh2-1.10.0.tar.gz"; outputHash = "sha256-LWTpDz3tOUuR06LndMogOkF59prr7gMAPlpvpiHkHVE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.libssh2.org/download/libssh2-1.10.0.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.libssh2.org/download/libssh2-1.10.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.10.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libssh2-1.10.0"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libssh2-1.10.0"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/p7i0wva599jankb4dgy246i3zgcxma04-libssh2-1.10.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "libssh2"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.10.0"; }; outPath = "/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "libssh2"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.10.0"; } «repeated» ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "curl-7.86.0.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-9cpp2wPuoX+ocFvfsan1jXakbJAQUYEJuzjzExN+Cig="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://curl.haxx.se/download/curl-7.86.0.tar.bz2" "https://github.com/curl/curl/releases/download/curl-7.86.0/curl-7.86.0.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "curl-7.86.0.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/6ash7mk958rrc6h08rncj14rbsqr5arp-curl-7.86.0.tar.bz2"; outputHash = "sha256-9cpp2wPuoX+ocFvfsan1jXakbJAQUYEJuzjzExN+Cig="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = ""; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = ""; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "7.86.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "curl-7.86.0"; nativeBuildInputs = «repeated»; openssl = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = <CODE>; outputName = "bin"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\n\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.0.7"; }; opensslSupport = true; out = <CODE>; outPath = "/nix/store/c7j1nb8bckbcahfxbmd9a3c2z9wb88f8-curl-7.86.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { openssl = «repeated»; opensslSupport = true; tests = <CODE>; }; patches = «repeated»; pname = "curl"; postInstall = "moveToOutput bin/curl-config \"$dev\"\n\n# Install completions\nmake -C scripts install\nsed '/^dependency_libs/s|/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev|/nix/store/p7i0wva599jankb4dgy246i3zgcxma04-libssh2-1.10.0|' -i \"$out\"/lib/*.la\n"; preCheck = "patchShebangs tests/\n"; preConfigure = "sed -e 's|/usr/bin|/no-such-path|g' -i.bak configure\nrm src/tool_hugehelp.c\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "7.86.0"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-shared" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "lzo-2.10"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "lzo"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "lzo-2.10.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0wm04519pd3g8hqpjqhfr72q8qmbiwqaxcs3cndny9h86aa95y60"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "lzo-2.10.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/dyxwzd4w19giqla96hbdiji3d2x4d0c8-lzo-2.10.tar.gz"; outputHash = "0wm04519pd3g8hqpjqhfr72q8qmbiwqaxcs3cndny9h86aa95y60"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.oberhumer.com/opensource/lzo/download/lzo-2.10.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.10"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "lzo-2.10"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/pa31m9kpjij8dxyqz0j2n1b0did5qfvx-lzo-2.10"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "lzo"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.10"; } «repeated» «repeated» «repeated» { LDFLAGS = ""; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { LDFLAGS = ""; __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# Patch shebangs for playTests\npatchShebangs ../programs/zstdgrep\nctest -R playTests # The only relatively fast test.\nrunHook postCheck\n"; cmakeDir = "../build/cmake"; cmakeFlags = [ "-DZSTD_BUILD_CONTRIB:BOOL=ON" "-DZSTD_BUILD_SHARED:BOOL=ON" "-DZSTD_BUILD_STATIC:BOOL=OFF" "-DZSTD_BUILD_TESTS:BOOL=ON" "-DZSTD_LEGACY_SUPPORT:BOOL=OFF" "-DZSTD_PROGRAMS_LINK_SHARED:BOOL=ON" ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontUseCmakeBuildDir = true; drvAttrs = { LDFLAGS = ""; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# Patch shebangs for playTests\npatchShebangs ../programs/zstdgrep\nctest -R playTests # The only relatively fast test.\nrunHook postCheck\n"; cmakeDir = "../build/cmake"; cmakeFlags = «repeated»; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontUseCmakeBuildDir = true; mesonFlags = [ ]; name = "zstd-1.5.2"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "CXXFLAGS=-Wno-elaborated-enum-base" "--docdir=share/doc/cmake-boot3.24.3" "--no-system-libs" "--" "-DCMAKE_CXX_COMPILER=c++" "-DCMAKE_C_COMPILER=cc" "-DCMAKE_AR=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/ar" "-DCMAKE_RANLIB=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/ranlib" "-DCMAKE_STRIP=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/strip" "-DCMAKE_USE_OPENSSL=OFF" "-DBUILD_CursesDialog=OFF" ]; configurePlatforms = [ ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontUseCmakeConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontUseCmakeConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "cmake-boot-3.24.3"; nativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/setup-hook.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/check-pc-files-hook.sh «repeated» ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/001-search-path.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/002-application-services.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/003-libuv-application-services.diff ]; pname = "cmake-boot"; preConfigure = "fixCmakeFiles .\nsubstituteInPlace Modules/Platform/UnixPaths.cmake \\\n  --subst-var-by libc_bin /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin \\\n  --subst-var-by libc_dev /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev \\\n  --subst-var-by libc_lib /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\n# CC_FOR_BUILD and CXX_FOR_BUILD are used to bootstrap cmake\nconfigureFlags=\"--parallel=\${NIX_BUILD_CORES:-1} CC=$CC_FOR_BUILD CXX=$CXX_FOR_BUILD $configureFlags\"\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/setup-hook.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/check-pc-files-hook.sh ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "cmake-3.24.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-tTqhD6gr/4TM21kGWSe3LTvuSfTYYmEkn8CYSzs2cpE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://cmake.org/files/v3.24/cmake-3.24.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "cmake-3.24.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/f0xrsnqbid1qzgxvr06af7m9k6l08z5g-cmake-3.24.3.tar.gz"; outputHash = "sha256-tTqhD6gr/4TM21kGWSe3LTvuSfTYYmEkn8CYSzs2cpE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://cmake.org/files/v3.24/cmake-3.24.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://cmake.org/files/v3.24/cmake-3.24.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.24.3"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "cmake-boot-3.24.3"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/l8qkdjzzyxii29yyvx0k5jm5d0p1cdjr-cmake-boot-3.24.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "cmake-boot"; preConfigure = "fixCmakeFiles .\nsubstituteInPlace Modules/Platform/UnixPaths.cmake \\\n  --subst-var-by libc_bin /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin \\\n  --subst-var-by libc_dev /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev \\\n  --subst-var-by libc_lib /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\n# CC_FOR_BUILD and CXX_FOR_BUILD are used to bootstrap cmake\nconfigureFlags=\"--parallel=\${NIX_BUILD_CORES:-1} CC=$CC_FOR_BUILD CXX=$CXX_FOR_BUILD $configureFlags\"\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHooks = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.24.3"; } «repeated» ]; outputs = [ "bin" "dev" "man" "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/compression/zstd/playtests-darwin.patch ]; pname = "zstd"; postPatch = "substituteInPlace build/cmake/CMakeLists.txt \\\n  --replace 'message(SEND_ERROR \"You need to build static library to build tests\")' \"\"\nsubstituteInPlace build/cmake/tests/CMakeLists.txt \\\n  --replace 'libzstd_static' 'libzstd_shared'\nsed -i \\\n  \"1aexport LD_LIBRARY_PATH=$PWD/build_/lib\" \\\n  tests/playTests.sh\n"; preConfigure = "mkdir -p build_ && cd $_\n"; preInstall = "mkdir -p $bin/bin\nsubstituteInPlace ../programs/zstdgrep \\\n  --replace \":-grep\" \":-/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep\" \\\n  --replace \":-zstdcat\" \":-$bin/bin/zstdcat\"\n\nsubstituteInPlace ../programs/zstdless \\\n  --replace \"zstdcat\" \"$bin/bin/zstdcat\"\ncp contrib/pzstd/pzstd $bin/bin/pzstd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-yJvhcysxcbUGuDOqe/TQ3Y5xyM2AUw6r1THSHOqmUy0="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.5.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/facebook/zstd/archive/v1.5.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/2ac7jy5m3cvwkc7k8x04r3l55mh9qffx-source"; outputHash = "sha256-yJvhcysxcbUGuDOqe/TQ3Y5xyM2AUw6r1THSHOqmUy0="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "facebook"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/facebook/zstd/archive/v1.5.2.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.5.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "zstd"; rev = "v1.5.2"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/facebook/zstd/archive/v1.5.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.5.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "zstd-1.5.2"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/jinzblwn2y93cbfpv3jw0pvw03jvbxy8-zstd-1.5.2-bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = «repeated»; pname = "zstd"; postPatch = "substituteInPlace build/cmake/CMakeLists.txt \\\n  --replace 'message(SEND_ERROR \"You need to build static library to build tests\")' \"\"\nsubstituteInPlace build/cmake/tests/CMakeLists.txt \\\n  --replace 'libzstd_static' 'libzstd_shared'\nsed -i \\\n  \"1aexport LD_LIBRARY_PATH=$PWD/build_/lib\" \\\n  tests/playTests.sh\n"; preConfigure = "mkdir -p build_ && cd $_\n"; preInstall = "mkdir -p $bin/bin\nsubstituteInPlace ../programs/zstdgrep \\\n  --replace \":-grep\" \":-/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep\" \\\n  --replace \":-zstdcat\" \":-$bin/bin/zstdcat\"\n\nsubstituteInPlace ../programs/zstdless \\\n  --replace \"zstdcat\" \"$bin/bin/zstdcat\"\ncp contrib/pzstd/pzstd $bin/bin/pzstd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "1.5.2"; }; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# Patch shebangs for playTests\npatchShebangs ../programs/zstdgrep\nctest -R playTests # The only relatively fast test.\nrunHook postCheck\n"; cmakeDir = "../build/cmake"; cmakeFlags = «repeated»; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontUseCmakeBuildDir = true; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "zstd-1.5.2"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/r4m8j7711wx9jwbj3mk6wzpqb4cd3sng-zstd-1.5.2-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "zstd"; postPatch = "substituteInPlace build/cmake/CMakeLists.txt \\\n  --replace 'message(SEND_ERROR \"You need to build static library to build tests\")' \"\"\nsubstituteInPlace build/cmake/tests/CMakeLists.txt \\\n  --replace 'libzstd_static' 'libzstd_shared'\nsed -i \\\n  \"1aexport LD_LIBRARY_PATH=$PWD/build_/lib\" \\\n  tests/playTests.sh\n"; preConfigure = "mkdir -p build_ && cd $_\n"; preInstall = "mkdir -p $bin/bin\nsubstituteInPlace ../programs/zstdgrep \\\n  --replace \":-grep\" \":-/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep\" \\\n  --replace \":-zstdcat\" \":-$bin/bin/zstdcat\"\n\nsubstituteInPlace ../programs/zstdless \\\n  --replace \"zstdcat\" \"$bin/bin/zstdcat\"\ncp contrib/pzstd/pzstd $bin/bin/pzstd\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "1.5.2"; } { NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; hardeningDisable = [ "format" ]; mesonFlags = [ ]; name = "sharutils-4.15.2"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "01-fix-heap-buffer-overflow-cve-2018-1000097.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "19g0sxc8g79aj5gd5idz5409311253jf2q8wqkasf0handdvsbxx"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://sources.debian.org/data/main/s/sharutils/1:4.15.2-2+deb9u1/debian/patches/01-fix-heap-buffer-overflow-cve-2018-1000097.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "01-fix-heap-buffer-overflow-cve-2018-1000097.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/szg677zzcqb34gi14yhmh25cyvmg3a6g-01-fix-heap-buffer-overflow-cve-2018-1000097.patch"; outputHash = "19g0sxc8g79aj5gd5idz5409311253jf2q8wqkasf0handdvsbxx"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://sources.debian.org/data/main/s/sharutils/1:4.15.2-2+deb9u1/debian/patches/01-fix-heap-buffer-overflow-cve-2018-1000097.patch"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://sources.debian.org/data/main/s/sharutils/1:4.15.2-2+deb9u1/debian/patches/01-fix-heap-buffer-overflow-cve-2018-1000097.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "02-fix-ftbfs-with-glibc-2.28.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "15kpjqnfs98n6irmkh8pw7masr08xala7gx024agv7zv14722vkc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://sources.debian.org/data/main/s/sharutils/1:4.15.2-4/debian/patches/02-fix-ftbfs-with-glibc-2.28.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "02-fix-ftbfs-with-glibc-2.28.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/vdw2q3ik790cwfig6308knaxnixbgz74-02-fix-ftbfs-with-glibc-2.28.patch"; outputHash = "15kpjqnfs98n6irmkh8pw7masr08xala7gx024agv7zv14722vkc"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://sources.debian.org/data/main/s/sharutils/1:4.15.2-4/debian/patches/02-fix-ftbfs-with-glibc-2.28.patch"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://sources.debian.org/data/main/s/sharutils/1:4.15.2-4/debian/patches/02-fix-ftbfs-with-glibc-2.28.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "sharutils-4.15.2-Fix-building-with-GCC-10.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0kfch1vm45lg237hr6fdv4b2lh5b1933k0fn8yj91gqm58svskvl"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://lists.gnu.org/archive/html/bug-gnu-utils/2020-01/txtDL8i6V6mUU.txt" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "sharutils-4.15.2-Fix-building-with-GCC-10.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/49a35gy6z5ycf099iwimbnzmlaif9i0a-sharutils-4.15.2-Fix-building-with-GCC-10.patch"; outputHash = "0kfch1vm45lg237hr6fdv4b2lh5b1933k0fn8yj91gqm58svskvl"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://lists.gnu.org/archive/html/bug-gnu-utils/2020-01/txtDL8i6V6mUU.txt"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://lists.gnu.org/archive/html/bug-gnu-utils/2020-01/txtDL8i6V6mUU.txt"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "sharutils-4.15.2-Do-not-include-lib-md5.c-into-src-shar.c.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0an8vfy3qj6sss9w0i4j8ilf7g5mbc7y13l644jy5bcm9przcjbd"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://lists.gnu.org/archive/html/bug-gnu-utils/2020-01/txt5Z_KZup0yN.txt" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "sharutils-4.15.2-Do-not-include-lib-md5.c-into-src-shar.c.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/zm66z7hl0wksvn2a37vm21nxj90ssvi9-sharutils-4.15.2-Do-not-include-lib-md5.c-into-src-shar.c.patch"; outputHash = "0an8vfy3qj6sss9w0i4j8ilf7g5mbc7y13l644jy5bcm9przcjbd"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://lists.gnu.org/archive/html/bug-gnu-utils/2020-01/txt5Z_KZup0yN.txt"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://lists.gnu.org/archive/html/bug-gnu-utils/2020-01/txt5Z_KZup0yN.txt"; urls = «repeated»; userHook = null; } ]; pname = "sharutils"; postPatch = "substituteInPlace tests/shar-1 --replace '\${SHAR}' '\${SHAR} -s submitter'\nsubstituteInPlace tests/shar-2 --replace '\${SHAR}' '\${SHAR} -s submitter'\n\nsubstituteInPlace intl/Makefile.in --replace \"AR = ar\" \"\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "sharutils-4.15.2.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "16isapn8f39lnffc3dp4dan05b7x6mnc76v6q5nn8ysxvvvwy19b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/sharutils/sharutils-4.15.2.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "sharutils-4.15.2.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4d60374av7kwvrkdm1098j1p6z07i6g2-sharutils-4.15.2.tar.xz"; outputHash = "16isapn8f39lnffc3dp4dan05b7x6mnc76v6q5nn8ysxvvvwy19b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/sharutils/sharutils-4.15.2.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/sharutils/sharutils-4.15.2.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.15.2"; }; drvPath = <CODE>; hardeningDisable = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "sharutils-4.15.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/afkr1a8bg2nr1ibvkza3y14f9hwfcd86-sharutils-4.15.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "sharutils"; postPatch = "substituteInPlace tests/shar-1 --replace '\${SHAR}' '\${SHAR} -s submitter'\nsubstituteInPlace tests/shar-2 --replace '\${SHAR}' '\${SHAR} -s submitter'\n\nsubstituteInPlace intl/Makefile.in --replace \"AR = ar\" \"\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "4.15.2"; } «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = true; installCheckTarget = "test"; mesonFlags = [ ]; name = "cracklib-2.9.7"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "cracklib"; postInstall = "make dict-local\n"; postPatch = "chmod +x util/cracklib-format\npatchShebangs util\n\nln -vs /nix/store/gx790ffsz8rnwhnnax4h75f344a4ddih-cracklib-words-2.9.7.gz dicts/\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "cracklib-2.9.7.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1rimpjsdnmw8f5b7k558cic41p2qy2n2yrlqp5vh7mp4162hk0py"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/cracklib/cracklib/releases/download/v2.9.7/cracklib-2.9.7.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "cracklib-2.9.7.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/qp5bcvdq466xdz9vvawbzr6mwix5qsbs-cracklib-2.9.7.tar.bz2"; outputHash = "1rimpjsdnmw8f5b7k558cic41p2qy2n2yrlqp5vh7mp4162hk0py"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/cracklib/cracklib/releases/download/v2.9.7/cracklib-2.9.7.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/cracklib/cracklib/releases/download/v2.9.7/cracklib-2.9.7.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.9.7"; }; drvPath = <CODE>; inputDerivation = <CODE>; installCheckTarget = "test"; mesonFlags = [ ]; meta = <CODE>; name = "cracklib-2.9.7"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/argvvdiavycb59hi1rpbgr3p1azm0163-cracklib-2.9.7"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "cracklib"; postInstall = "make dict-local\n"; postPatch = "chmod +x util/cracklib-format\npatchShebangs util\n\nln -vs /nix/store/gx790ffsz8rnwhnnax4h75f344a4ddih-cracklib-words-2.9.7.gz dicts/\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.9.7"; } { NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "make examples_c examples_cxx\n"; cmakeFlags = [ ]; configureFlags = [ "--enable-cxx" "--enable-compat185" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { NIX_HARDENING_ENABLE = «repeated»; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "make examples_c examples_cxx\n"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" ]; mesonFlags = [ ]; name = "db-4.8.30"; nativeBuildInputs = [ ]; outputs = [ "bin" "out" "dev" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/db/clang-4.8.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/db/CVE-2017-10140-4.8-cwd-db_config.patch ]; pname = "db"; postInstall = "rm -rf $out/docs\n"; preConfigure = "cd build_unix\nconfigureScript=../dist/configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "db-4.8.30.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0ampbl2f0hb1nix195kz1syrqqxpmvnvnfvphambj7xjrl3iljg0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://download.oracle.com/berkeley-db/db-4.8.30.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "db-4.8.30.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9kz8agh164kiklpvpfg2q7pigw961xsa-db-4.8.30.tar.gz"; outputHash = "0ampbl2f0hb1nix195kz1syrqqxpmvnvnfvphambj7xjrl3iljg0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://download.oracle.com/berkeley-db/db-4.8.30.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://download.oracle.com/berkeley-db/db-4.8.30.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "4.8.30"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "db-4.8.30"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/avbcwi7d1vwgzvmbxfh3n5hsc53w0qqy-db-4.8.30-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "db"; postInstall = "rm -rf $out/docs\n"; preConfigure = "cd build_unix\nconfigureScript=../dist/configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "4.8.30"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--disable-zos-remote" "--with-python" "--with-arm" "--with-aarch64" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "audit-2.8.5"; nativeBuildInputs = [ «repeated» { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = <CODE>; buildCommand = <CODE>; buildEnv = «repeated»; buildInputs = <CODE>; builder = <CODE>; checkCollisionContents = true; cmakeFlags = <CODE>; configureFlags = <CODE>; depsBuildBuild = <CODE>; depsBuildBuildPropagated = <CODE>; depsBuildTarget = <CODE>; depsBuildTargetPropagated = <CODE>; depsHostHost = <CODE>; depsHostHostPropagated = <CODE>; depsTargetTarget = <CODE>; depsTargetTargetPropagated = <CODE>; doCheck = <CODE>; doInstallCheck = <CODE>; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = <CODE>; buildCommand = <CODE>; buildInputs = <CODE>; builder = <CODE>; checkCollisionContents = true; cmakeFlags = <CODE>; configureFlags = <CODE>; depsBuildBuild = <CODE>; depsBuildBuildPropagated = <CODE>; depsBuildTarget = <CODE>; depsBuildTargetPropagated = <CODE>; depsHostHost = <CODE>; depsHostHostPropagated = <CODE>; depsTargetTarget = <CODE>; depsTargetTargetPropagated = <CODE>; doCheck = <CODE>; doInstallCheck = <CODE>; enableParallelBuilding = true; enableParallelChecking = <CODE>; extraPrefix = ""; ignoreCollisions = false; manifest = ""; mesonFlags = <CODE>; name = <CODE>; nativeBuildInputs = <CODE>; outputs = [ "out" ]; passAsFile = <CODE>; patches = <CODE>; pathsToLink = <CODE>; pkgs = <CODE>; postBuild = <CODE>; preferLocalBuild = true; propagatedBuildInputs = <CODE>; propagatedNativeBuildInputs = <CODE>; stdenv = «repeated»; strictDeps = <CODE>; system = <CODE>; userHook = <CODE>; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = <CODE>; env = <CODE>; executable = "python3.10"; extraPrefix = ""; hasDistutilsCxxPatch = false; ignoreCollisions = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; manifest = ""; mesonFlags = <CODE>; meta = <CODE>; name = <CODE>; nativeBuildInputs = <CODE>; out = <CODE>; outPath = <CODE>; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passAsFile = <CODE>; passthru = { buildEnv = «repeated»; env = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = { APScheduler = <CODE>; BTrees = <CODE>; Babel = <CODE>; BlinkStick = <CODE>; ColanderAlchemy = <CODE>; CommonMark = <CODE>; ConfigArgParse = <CODE>; EasyProcess = <CODE>; Fabric = <CODE>; FormEncode = <CODE>; GeoIP = <CODE>; GitPython = <CODE>; HAP-python = <CODE>; HTSeq = <CODE>; IMAPClient = <CODE>; JPype1 = <CODE>; JayDeBeApi = <CODE>; Kajiki = <CODE>; Keras = <CODE>; Logbook = <CODE>; MDP = <CODE>; Mako = <CODE>; Markups = <CODE>; MechanicalSoup = <CODE>; Nikola = <CODE>; Nuitka = <CODE>; PasteDeploy = <CODE>; Pmw = <CODE>; Pweave = <CODE>; PyChromecast = <CODE>; PyGithub = <CODE>; PyICU = <CODE>; PyLD = <CODE>; PyLTI = <CODE>; PyMVGLive = <CODE>; PyRSS2Gen = <CODE>; PyStemmer = <CODE>; Pyro4 = <CODE>; Pyro5 = <CODE>; Quandl = <CODE>; ROPGadget = <CODE>; Rtree = <CODE>; SPARQLWrapper = <CODE>; SQLAlchemy-ImageAttach = <CODE>; Theano = <CODE>; TheanoWithCuda = <CODE>; TheanoWithoutCuda = <CODE>; ViennaRNA = <CODE>; WSME = <CODE>; Wand = <CODE>; WazeRouteCalculator = <CODE>; XlsxWriter = <CODE>; Yapsy = <CODE>; aadict = <CODE>; aafigure = <CODE>; aardwolf = <CODE>; abodepy = <CODE>; absl-py = <CODE>; accupy = <CODE>; accuweather = <CODE>; acebinf = <CODE>; acme = <CODE>; acme-tiny = <CODE>; acoustics = <CODE>; acquire = <CODE>; actdiag = <CODE>; adafruit-io = <CODE>; adafruit-nrfutil = <CODE>; adafruit-platformdetect = <CODE>; adafruit-pureio = <CODE>; adal = <CODE>; adax = <CODE>; adax-local = <CODE>; adb-enhanced = <CODE>; adb-homeassistant = <CODE>; adb-shell = <CODE>; adblock = <CODE>; add-trailing-comma = <CODE>; addict = <CODE>; adext = <CODE>; adguardhome = <CODE>; adjusttext = <CODE>; adlfs = <CODE>; advantage-air = <CODE>; advocate = <CODE>; aemet-opendata = <CODE>; aenum = <CODE>; aeppl = <CODE>; aesara = <CODE>; aesedb = <CODE>; afdko = <CODE>; affine = <CODE>; afsapi = <CODE>; agate = <CODE>; agate-dbf = <CODE>; agate-excel = <CODE>; agate-sql = <CODE>; agent-py = <CODE>; aggdraw = <CODE>; ailment = <CODE>; aio-geojson-client = <CODE>; aio-geojson-generic-client = <CODE>; aio-geojson-geonetnz-quakes = <CODE>; aio-geojson-geonetnz-volcano = <CODE>; aio-geojson-nsw-rfs-incidents = <CODE>; aio-geojson-usgs-earthquakes = <CODE>; aio-georss-client = <CODE>; aio-georss-gdacs = <CODE>; aioairq = <CODE>; aioairzone = <CODE>; aioaladdinconnect = <CODE>; aioambient = <CODE>; aioamqp = <CODE>; aioapns = <CODE>; aioaseko = <CODE>; aioasuswrt = <CODE>; aioazuredevops = <CODE>; aiobiketrax = <CODE>; aioblescan = <CODE>; aiobotocore = <CODE>; aiobroadlink = <CODE>; aiocache = <CODE>; aiocoap = <CODE>; aioconsole = <CODE>; aiocontextvars = <CODE>; aiocron = <CODE>; aiocsv = <CODE>; aiocurrencylayer = <CODE>; aiodiscover = <CODE>; aiodns = <CODE>; aioeafm = <CODE>; aioeagle = <CODE>; aioecowitt = <CODE>; aioemonitor = <CODE>; aioesphomeapi = <CODE>; aioextensions = <CODE>; aiofile = <CODE>; aiofiles = <CODE>; aioflo = <CODE>; aioftp = <CODE>; aiogithubapi = <CODE>; aioguardian = <CODE>; aioh2 = <CODE>; aioharmony = <CODE>; aiohomekit = <CODE>; aiohttp = <CODE>; aiohttp-apispec = <CODE>; aiohttp-cors = <CODE>; aiohttp-jinja2 = <CODE>; aiohttp-openmetrics = <CODE>; aiohttp-remotes = <CODE>; aiohttp-retry = <CODE>; aiohttp-socks = <CODE>; aiohttp-swagger = <CODE>; aiohttp-wsgi = <CODE>; aiohue = <CODE>; aiohwenergy = <CODE>; aioimaplib = <CODE>; aioinflux = <CODE>; aioitertools = <CODE>; aiojobs = <CODE>; aiokafka = <CODE>; aiokef = <CODE>; aiolifx = <CODE>; aiolifx-connection = <CODE>; aiolifx-effects = <CODE>; aiolifx-themes = <CODE>; aiolimiter = <CODE>; aiolip = <CODE>; aiolivisi = <CODE>; aiolookin = <CODE>; aiolyric = <CODE>; aiomisc = <CODE>; aiomodernforms = <CODE>; aiomultiprocess = <CODE>; aiomusiccast = <CODE>; aiomysensors = <CODE>; aiomysql = <CODE>; aionanoleaf = <CODE>; aionotify = <CODE>; aionotion = <CODE>; aiooncue = <CODE>; aioopenexchangerates = <CODE>; aiopg = <CODE>; aioprocessing = <CODE>; aiopulse = <CODE>; aiopvapi = <CODE>; aiopvpc = <CODE>; aiopyarr = <CODE>; aiopylgtv = <CODE>; aioqsw = <CODE>; aioquic = <CODE>; aiorecollect = <CODE>; aioredis = <CODE>; aioresponses = <CODE>; aioridwell = <CODE>; aiorpcx = <CODE>; aiortm = <CODE>; aiorun = <CODE>; aiorwlock = <CODE>; aiosenseme = <CODE>; aiosenz = <CODE>; aioserial = <CODE>; aioshelly = <CODE>; aioshutil = <CODE>; aiosignal = <CODE>; aioskybell = <CODE>; aioslimproto = <CODE>; aiosmb = <CODE>; aiosmtpd = <CODE>; aiosmtplib = <CODE>; aiosqlite = <CODE>; aiosteamist = <CODE>; aiostream = <CODE>; aioswitcher = <CODE>; aiosyncthing = <CODE>; aiotractive = <CODE>; aiounifi = <CODE>; aiounittest = <CODE>; aiovlc = <CODE>; aiowatttime = <CODE>; aiowebostv = <CODE>; aioweenect = <CODE>; aiowinreg = <CODE>; aioymaps = <CODE>; aiozeroconf = <CODE>; airly = <CODE>; airthings-ble = <CODE>; airthings-cloud = <CODE>; airtouch4pyapi = <CODE>; ajpy = <CODE>; ajsonrpc = <CODE>; alabaster = <CODE>; aladdin-connect = <CODE>; alarmdecoder = <CODE>; ale-py = <CODE>; alectryon = <CODE>; alembic = <CODE>; algebraic-data-types = <CODE>; aliyun-python-sdk-cdn = <CODE>; aliyun-python-sdk-config = <CODE>; aliyun-python-sdk-core = <CODE>; aliyun-python-sdk-dbfs = <CODE>; aliyun-python-sdk-iot = <CODE>; aliyun-python-sdk-kms = <CODE>; aliyun-python-sdk-sts = <CODE>; allpairspy = <CODE>; allure-behave = <CODE>; allure-pytest = <CODE>; allure-python-commons = <CODE>; allure-python-commons-test = <CODE>; alpha-vantage = <CODE>; altair = <CODE>; amaranth = <CODE>; amaranth-boards = <CODE>; amaranth-soc = <CODE>; amarna = <CODE>; amazon-ion = <CODE>; amazon_kclpy = <CODE>; ambee = <CODE>; amberelectric = <CODE>; ambiclimate = <CODE>; amcrest = <CODE>; amiibo-py = <CODE>; amply = <CODE>; amqp = <CODE>; amqplib = <CODE>; amqtt = <CODE>; androguard = <CODE>; android-backup = <CODE>; androidtv = <CODE>; angr = <CODE>; angrcli = <CODE>; angrop = <CODE>; aniso8601 = <CODE>; annexremote = <CODE>; annoy = <CODE>; anonip = <CODE>; ansi = <CODE>; ansi2html = <CODE>; ansible = <CODE>; ansible-base = <CODE>; ansible-compat = <CODE>; ansible-core = <CODE>; ansible-doctor = <CODE>; ansible-kernel = <CODE>; ansible-later = <CODE>; ansible-lint = <CODE>; ansible-runner = <CODE>; ansicolor = <CODE>; ansicolors = <CODE>; ansiconv = <CODE>; ansimarkup = <CODE>; ansiwrap = <CODE>; antlr4-python3-runtime = <CODE>; antlr4_8-python3-runtime = <CODE>; antlr4_9-python3-runtime = <CODE>; anyascii = <CODE>; anybadge = <CODE>; anyconfig = <CODE>; anyio = <CODE>; anyjson = <CODE>; anytree = <CODE>; aocd = <CODE>; apache-airflow = <CODE>; apache-beam = <CODE>; apcaccess = <CODE>; apipkg = <CODE>; apispec = <CODE>; aplpy = <CODE>; appdirs = <CODE>; applicationinsights = <CODE>; appnope = <CODE>; apprise = <CODE>; approvaltests = <CODE>; appthreat-vulnerability-db = <CODE>; apptools = <CODE>; aprslib = <CODE>; apsw = <CODE>; apycula = <CODE>; aqipy-atmotech = <CODE>; aqualogic = <CODE>; arabic-reshaper = <CODE>; aranet4 = <CODE>; arc4 = <CODE>; arcam-fmj = <CODE>; archinfo = <CODE>; archspec = <CODE>; area = <CODE>; arelle = <CODE>; arelle-headless = <CODE>; aresponses = <CODE>; argcomplete = <CODE>; argh = <CODE>; argon2-cffi = <CODE>; argon2-cffi-bindings = <CODE>; argon2_cffi = <CODE>; argparse-addons = <CODE>; args = <CODE>; aria2p = <CODE>; ariadne = <CODE>; arnparse = <CODE>; arpeggio = <CODE>; arrayqueues = <CODE>; arris-tg2492lg = <CODE>; arrow = <CODE>; arviz = <CODE>; arxiv2bib = <CODE>; asana = <CODE>; ascii-magic = <CODE>; asciimatics = <CODE>; asciitree = <CODE>; asdf = <CODE>; asdf-standard = <CODE>; asdf-transform-schemas = <CODE>; ase = <CODE>; asf-search = <CODE>; asgi-csrf = <CODE>; asgineer = <CODE>; asgiref = <CODE>; asks = <CODE>; asmog = <CODE>; asn1 = <CODE>; asn1ate = <CODE>; asn1crypto = <CODE>; asn1tools = <CODE>; aspell-python = <CODE>; aspy-refactor-imports = <CODE>; aspy-yaml = <CODE>; assay = <CODE>; assertpy = <CODE>; asterisk-mbox = <CODE>; asteval = <CODE>; astor = <CODE>; astral = <CODE>; astroid = <CODE>; astropy = <CODE>; astropy-extension-helpers = <CODE>; astropy-healpix = <CODE>; astropy-helpers = <CODE>; astroquery = <CODE>; asttokens = <CODE>; astunparse = <CODE>; asyauth = <CODE>; async-dns = <CODE>; async-lru = <CODE>; async-modbus = <CODE>; async-timeout = <CODE>; async-upnp-client = <CODE>; async_generator = <CODE>; async_stagger = <CODE>; asyncclick = <CODE>; asynccmd = <CODE>; asyncio-dgram = <CODE>; asyncio-mqtt = <CODE>; asyncio-nats-client = <CODE>; asyncio-rlock = <CODE>; asyncio-throttle = <CODE>; asyncmy = <CODE>; asyncpg = <CODE>; asyncserial = <CODE>; asyncsleepiq = <CODE>; asyncssh = <CODE>; asyncstdlib = <CODE>; asynctest = <CODE>; asyncua = <CODE>; asyncwhois = <CODE>; asysocks = <CODE>; atc-ble = <CODE>; atenpdu = <CODE>; atlassian-python-api = <CODE>; atom = <CODE>; atomiclong = <CODE>; atomicwrites = <CODE>; atomicwrites-homeassistant = <CODE>; atomman = <CODE>; atpublic = <CODE>; atsim_potentials = <CODE>; attrdict = <CODE>; attrs = <CODE>; aubio = <CODE>; audible = <CODE>; audio-metadata = <CODE>; audioread = <CODE>; audiotools = <CODE>; augeas = <CODE>; augmax = <CODE>; auroranoaa = <CODE>; aurorapy = <CODE>; autarco = <CODE>; auth0-python = <CODE>; authcaptureproxy = <CODE>; authheaders = <CODE>; authlib = <CODE>; authres = <CODE>; autobahn = <CODE>; autocommand = <CODE>; autograd = <CODE>; autoit-ripper = <CODE>; autologging = <CODE>; automat = <CODE>; automate-home = <CODE>; autopage = <CODE>; autopep8 = <CODE>; av = <CODE>; avahi = <CODE>; avea = <CODE>; avion = <CODE>; avro = <CODE>; avro-python3 = <CODE>; avro3k = <CODE>; awacs = <CODE>; awesome-slugify = <CODE>; awesomeversion = <CODE>; awkward = <CODE>; awkward-cpp = <CODE>; awkward0 = <CODE>; aws-adfs = <CODE>; aws-lambda-builders = <CODE>; aws-sam-translator = <CODE>; aws-xray-sdk = <CODE>; awscrt = <CODE>; awsiotpythonsdk = <CODE>; awslambdaric = <CODE>; axis = <CODE>; azure-appconfiguration = <CODE>; azure-applicationinsights = <CODE>; azure-batch = <CODE>; azure-common = <CODE>; azure-containerregistry = <CODE>; azure-core = <CODE>; azure-cosmos = <CODE>; azure-cosmosdb-nspkg = <CODE>; azure-cosmosdb-table = <CODE>; azure-data-tables = <CODE>; azure-datalake-store = <CODE>; azure-eventgrid = <CODE>; azure-eventhub = <CODE>; azure-functions-devops-build = <CODE>; azure-graphrbac = <CODE>; azure-identity = <CODE>; azure-keyvault = <CODE>; azure-keyvault-administration = <CODE>; azure-keyvault-certificates = <CODE>; azure-keyvault-keys = <CODE>; azure-keyvault-nspkg = <CODE>; azure-keyvault-secrets = <CODE>; azure-loganalytics = <CODE>; azure-mgmt-advisor = <CODE>; azure-mgmt-apimanagement = <CODE>; azure-mgmt-appconfiguration = <CODE>; azure-mgmt-applicationinsights = <CODE>; azure-mgmt-authorization = <CODE>; azure-mgmt-batch = <CODE>; azure-mgmt-batchai = <CODE>; azure-mgmt-billing = <CODE>; azure-mgmt-botservice = <CODE>; azure-mgmt-cdn = <CODE>; azure-mgmt-cognitiveservices = <CODE>; azure-mgmt-commerce = <CODE>; azure-mgmt-common = <CODE>; azure-mgmt-compute = <CODE>; azure-mgmt-consumption = <CODE>; azure-mgmt-containerinstance = <CODE>; azure-mgmt-containerregistry = <CODE>; azure-mgmt-containerservice = <CODE>; azure-mgmt-core = <CODE>; azure-mgmt-cosmosdb = <CODE>; azure-mgmt-databoxedge = <CODE>; azure-mgmt-datafactory = <CODE>; azure-mgmt-datalake-analytics = <CODE>; azure-mgmt-datalake-nspkg = <CODE>; azure-mgmt-datalake-store = <CODE>; azure-mgmt-datamigration = <CODE>; azure-mgmt-deploymentmanager = <CODE>; azure-mgmt-devspaces = <CODE>; azure-mgmt-devtestlabs = <CODE>; azure-mgmt-dns = <CODE>; azure-mgmt-eventgrid = <CODE>; azure-mgmt-eventhub = <CODE>; azure-mgmt-extendedlocation = <CODE>; azure-mgmt-hanaonazure = <CODE>; azure-mgmt-hdinsight = <CODE>; azure-mgmt-imagebuilder = <CODE>; azure-mgmt-iotcentral = <CODE>; azure-mgmt-iothub = <CODE>; azure-mgmt-iothubprovisioningservices = <CODE>; azure-mgmt-keyvault = <CODE>; azure-mgmt-kusto = <CODE>; azure-mgmt-loganalytics = <CODE>; azure-mgmt-logic = <CODE>; azure-mgmt-machinelearningcompute = <CODE>; azure-mgmt-managedservices = <CODE>; azure-mgmt-managementgroups = <CODE>; azure-mgmt-managementpartner = <CODE>; azure-mgmt-maps = <CODE>; azure-mgmt-marketplaceordering = <CODE>; azure-mgmt-media = <CODE>; azure-mgmt-monitor = <CODE>; azure-mgmt-msi = <CODE>; azure-mgmt-netapp = <CODE>; azure-mgmt-network = <CODE>; azure-mgmt-notificationhubs = <CODE>; azure-mgmt-nspkg = <CODE>; azure-mgmt-policyinsights = <CODE>; azure-mgmt-powerbiembedded = <CODE>; azure-mgmt-privatedns = <CODE>; azure-mgmt-rdbms = <CODE>; azure-mgmt-recoveryservices = <CODE>; azure-mgmt-recoveryservicesbackup = <CODE>; azure-mgmt-redhatopenshift = <CODE>; azure-mgmt-redis = <CODE>; azure-mgmt-relay = <CODE>; azure-mgmt-reservations = <CODE>; azure-mgmt-resource = <CODE>; azure-mgmt-scheduler = <CODE>; azure-mgmt-search = <CODE>; azure-mgmt-security = <CODE>; azure-mgmt-servicebus = <CODE>; azure-mgmt-servicefabric = <CODE>; azure-mgmt-servicefabricmanagedclusters = <CODE>; azure-mgmt-servicelinker = <CODE>; azure-mgmt-signalr = <CODE>; azure-mgmt-sql = <CODE>; azure-mgmt-sqlvirtualmachine = <CODE>; azure-mgmt-storage = <CODE>; azure-mgmt-subscription = <CODE>; azure-mgmt-synapse = <CODE>; azure-mgmt-trafficmanager = <CODE>; azure-mgmt-web = <CODE>; azure-multiapi-storage = <CODE>; azure-nspkg = <CODE>; azure-servicebus = <CODE>; azure-servicefabric = <CODE>; azure-servicemanagement-legacy = <CODE>; azure-storage = <CODE>; azure-storage-blob = <CODE>; azure-storage-common = <CODE>; azure-storage-file = <CODE>; azure-storage-file-share = <CODE>; azure-storage-nspkg = <CODE>; azure-storage-queue = <CODE>; azure-synapse-accesscontrol = <CODE>; azure-synapse-artifacts = <CODE>; azure-synapse-managedprivateendpoints = <CODE>; azure-synapse-spark = <CODE>; b2sdk = <CODE>; babel = <CODE>; babelfish = <CODE>; babelgladeextractor = <CODE>; backcall = <CODE>; backoff = <CODE>; backports-cached-property = <CODE>; backports-datetime-fromisoformat = <CODE>; backports-entry-points-selectable = <CODE>; backports-shutil-which = <CODE>; backports-zoneinfo = <CODE>; backports_csv = <CODE>; backports_functools_lru_cache = <CODE>; backports_shutil_get_terminal_size = <CODE>; backports_tempfile = <CODE>; backports_unittest-mock = <CODE>; backports_weakref = <CODE>; bacpypes = <CODE>; bagit = <CODE>; banal = <CODE>; bandit = <CODE>; bap = <CODE>; baron = <CODE>; base36 = <CODE>; base58 = <CODE>; base58check = <CODE>; baseline = <CODE>; baselines = <CODE>; basemap = <CODE>; basemap-data = <CODE>; bash_kernel = <CODE>; bashlex = <CODE>; basiciw = <CODE>; batchgenerators = <CODE>; batchspawner = <CODE>; batinfo = <CODE>; bayesian-optimization = <CODE>; bayespy = <CODE>; bbox = <CODE>; bc-python-hcl2 = <CODE>; bcdoc = <CODE>; bcrypt = <CODE>; beaker = <CODE>; beancount = <CODE>; beancount_docverif = <CODE>; beanstalkc = <CODE>; beartype = <CODE>; beautifulsoup4 = <CODE>; beautifultable = <CODE>; bech32 = <CODE>; bedup = <CODE>; behave = <CODE>; bellows = <CODE>; beniget = <CODE>; bespon = <CODE>; betacode = <CODE>; betamax = <CODE>; betamax-matchers = <CODE>; betamax-serializers = <CODE>; betterproto = <CODE>; bibtexparser = <CODE>; bidict = <CODE>; bids-validator = <CODE>; biliass = <CODE>; billiard = <CODE>; bimmer-connected = <CODE>; binaryornot = <CODE>; bincopy = <CODE>; binho-host-adapter = <CODE>; binwalk = <CODE>; binwalk-full = <CODE>; biopython = <CODE>; bip_utils = <CODE>; biplist = <CODE>; bitarray = <CODE>; bitbox02 = <CODE>; bitcoin-price-api = <CODE>; bitcoin-utils-fork-minimal = <CODE>; bitcoinlib = <CODE>; bitcoinrpc = <CODE>; bite-parser = <CODE>; bitlist = <CODE>; bitmath = <CODE>; bitstring = <CODE>; bitstruct = <CODE>; bitvavo-aio = <CODE>; bizkaibus = <CODE>; bjoern = <CODE>; bkcharts = <CODE>; black = <CODE>; black-macchiato = <CODE>; bleach = <CODE>; bleach-allowlist = <CODE>; bleak = <CODE>; bleak-retry-connector = <CODE>; blebox-uniapi = <CODE>; bless = <CODE>; blessed = <CODE>; blessings = <CODE>; blinker = <CODE>; blinkpy = <CODE>; blis = <CODE>; block-io = <CODE>; blockchain = <CODE>; blockdiag = <CODE>; blockdiagcontrib-cisco = <CODE>; blocksat-cli = <CODE>; blspy = <CODE>; bluemaestro-ble = <CODE>; bluepy = <CODE>; bluepy-devices = <CODE>; bluetooth-adapters = <CODE>; bluetooth-auto-recovery = <CODE>; bluetooth-data-tools = <CODE>; bluetooth-sensor-state-data = <CODE>; blurhash = <CODE>; bme280spi = <CODE>; bme680 = <CODE>; bokeh = <CODE>; boltons = <CODE>; boltztrap2 = <CODE>; bond-api = <CODE>; bond-async = <CODE>; bonsai = <CODE>; boolean-py = <CODE>; booleanoperations = <CODE>; boost = <CODE>; boost-histogram = <CODE>; bootstrapped-pip = <CODE>; boschshcpy = <CODE>; boto = <CODE>; boto3 = <CODE>; botocore = <CODE>; bottle = <CODE>; bottleneck = <CODE>; boxx = <CODE>; bpycv = <CODE>; bpython = <CODE>; braceexpand = <CODE>; bracex = <CODE>; braintree = <CODE>; branca = <CODE>; bravado-core = <CODE>; bravia-tv = <CODE>; breathe = <CODE>; breezy = <CODE>; brelpy = <CODE>; broadlink = <CODE>; brother = <CODE>; brother-ql = <CODE>; brotli = <CODE>; brotlicffi = <CODE>; brotlipy = <CODE>; brottsplatskartan = <CODE>; browser-cookie3 = <CODE>; brunt = <CODE>; bsblan = <CODE>; bsddb3 = <CODE>; bsdiff4 = <CODE>; bson = <CODE>; bsuite = <CODE>; bt-proximity = <CODE>; bt_proximity = <CODE>; btchip = <CODE>; bthome-ble = <CODE>; btrfs = <CODE>; btrfsutil = <CODE>; btsocket = <CODE>; bucketstore = <CODE>; bugsnag = <CODE>; bugwarrior = <CODE>; bugz = <CODE>; bugzilla = <CODE>; buienradar = <CODE>; build = <CODE>; buildPythonApplication = <LAMBDA>; buildPythonPackage = <CODE>; buildSetupcfg = <CODE>; buildbot = <CODE>; buildbot-full = <CODE>; buildbot-pkg = <CODE>; buildbot-plugins = <CODE>; buildbot-ui = <CODE>; buildbot-worker = <CODE>; buildcatrust = { LANG = <CODE>; __ignoreNulls = true; all = <CODE>; args = <CODE>; buildInputs = <CODE>; builder = <CODE>; cmakeFlags = <CODE>; configureFlags = <CODE>; depsBuildBuild = <CODE>; depsBuildBuildPropagated = <CODE>; depsBuildTarget = <CODE>; depsBuildTargetPropagated = <CODE>; depsHostHost = <CODE>; depsHostHostPropagated = <CODE>; depsTargetTarget = <CODE>; depsTargetTargetPropagated = <CODE>; disabledTestPaths = <CODE>; disallowedReferences = <CODE>; dist = <CODE>; doCheck = <CODE>; doInstallCheck = <CODE>; drvAttrs = { LANG = <CODE>; __ignoreNulls = true; args = <CODE>; buildInputs = <CODE>; builder = <CODE>; cmakeFlags = <CODE>; configureFlags = <CODE>; depsBuildBuild = <CODE>; depsBuildBuildPropagated = <CODE>; depsBuildTarget = <CODE>; depsBuildTargetPropagated = <CODE>; depsHostHost = <CODE>; depsHostHostPropagated = <CODE>; depsTargetTarget = <CODE>; depsTargetTargetPropagated = <CODE>; disabledTestPaths = <CODE>; disallowedReferences = <CODE>; doCheck = <CODE>; doInstallCheck = <CODE>; mesonFlags = <CODE>; name = <CODE>; nativeBuildInputs = <CODE>; outputs = [ "out" "dist" ]; patches = <CODE>; pname = "buildcatrust"; postFixup = <CODE>; propagatedBuildInputs = <CODE>; propagatedNativeBuildInputs = <CODE>; pythonImportsCheck = <CODE>; src = <CODE>; stdenv = { __extraImpureHostDeps = <CODE>; all = <CODE>; allowedRequisites = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/builder.sh ]; bootstrapTools = «repeated»; buildPlatform = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cc = «repeated»; defaultBuildInputs = [ ]; defaultNativeBuildInputs = [ «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-docs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/make-symlinks-relative.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/compress-man-pages.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/strip.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/patch-shebangs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/prune-libtool-files.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/audit-tmpdir.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-systemd-user-units.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/multiple-outputs.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-sbin.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/move-lib64.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/set-source-date-epoch-to-latest.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/reproducible-builds.sh «repeated» ]; disallowedRequisites = «repeated»; drvAttrs = { allowedRequisites = «repeated»; args = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = «repeated»; initialPath = «repeated»; name = "stdenv-linux"; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; system = "aarch64-linux"; }; drvPath = <CODE>; extraBuildInputs = [ ]; extraNativeBuildInputs = «repeated»; extraSandboxProfile = ""; fetchurlBoot = <LAMBDA>; hasCC = true; hostPlatform = «repeated»; initialPath = «repeated»; is32bit = <CODE>; is64bit = <CODE>; isAarch32 = <CODE>; isAarch64 = <CODE>; isBSD = <CODE>; isBigEndian = <CODE>; isCygwin = <CODE>; isDarwin = <CODE>; isFreeBSD = <CODE>; isLinux = <CODE>; isMips = <CODE>; isOpenBSD = <CODE>; isSunOS = <CODE>; isi686 = <CODE>; isx86_32 = <CODE>; isx86_64 = <CODE>; meta = <CODE>; mkDerivation = <CODE>; name = "stdenv-linux"; out = { all = <CODE>; allowedRequisites = «repeated»; args = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; defaultBuildInputs = [ ]; defaultNativeBuildInputs = «repeated»; disallowedRequisites = «repeated»; drvAttrs = «repeated»; drvPath = <CODE>; initialPath = «repeated»; name = "stdenv-linux"; out = «repeated»; outPath = "/nix/store/arlb82anz496qkfxks2m9p9i86wr1p12-stdenv-linux"; outputName = "out"; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; system = "aarch64-linux"; type = "derivation"; }; outPath = "/nix/store/arlb82anz496qkfxks2m9p9i86wr1p12-stdenv-linux"; outputName = "out"; override = <CODE>; overrideDerivation = <CODE>; overrides = <LAMBDA>; passthru = <CODE>; preHook = "export NIX_ENFORCE_PURITY=\"\${NIX_ENFORCE_PURITY-1}\"\nexport NIX_ENFORCE_NO_NATIVE=\"\${NIX_ENFORCE_NO_NATIVE-1}\"\n\n\n"; setup = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/setup.sh; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; shellDryRun = <CODE>; shellPackage = <CODE>; system = <CODE>; targetPlatform = «repeated»; tests = <CODE>; type = "derivation"; }; strictDeps = true; system = <CODE>; userHook = <CODE>; version = "0.1.3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = <CODE>; meta = <CODE>; name = <CODE>; nativeBuildInputs = <CODE>; out = <CODE>; outPath = <CODE>; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <LAMBDA>; overrideDerivation = <CODE>; overridePythonAttrs = <CODE>; passthru = { pythonModule = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildEnv = «repeated»; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-gcc-arch=generic" "--enable-pax_emutramp" "--disable-exec-static-tramp" "--build=aarch64-unknown-linux-gnu" "--host=aarch64-unknown-linux-gnu" ]; configurePlatforms = [ "build" "host" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontStrip = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontStrip = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libffi-3.4.4"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { NIX_HARDENING_ENABLE = [ "fortify" "stackprotector" "pic" "strictoverflow" "relro" "bindnow" ]; TCLSH = "/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/bin/tclsh"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/g4c3jbhc8ag6db5py0xk2sicfy0hrpmw-tcl-package-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/g4c3jbhc8ag6db5py0xk2sicfy0hrpmw-tcl-package-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "tcl-package-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tcl-package-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/91sq8rf94d1zzw0qgsd3v95kk8nv56xk-tcl-package-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-tcl=/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/lib" "--with-tclinclude=/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/include" "--exec-prefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { NIX_HARDENING_ENABLE = «repeated»; TCLSH = "/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/bin/tclsh"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; hardeningDisable = [ "format" ]; mesonFlags = [ ]; name = "expect-5.45.4"; nativeBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/1qrnbw8xsww3vydd71lwfp32ylgx9i8g-make-wrapper.sh $out/nix-support/setup-hook\nprintWords /nix/store/dy5fxjsf0iknxxj6zz9fqx4x34fz1d7y-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/1qrnbw8xsww3vydd71lwfp32ylgx9i8g-make-wrapper.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/1qrnbw8xsww3vydd71lwfp32ylgx9i8g-make-wrapper.sh $out/nix-support/setup-hook\nprintWords /nix/store/dy5fxjsf0iknxxj6zz9fqx4x34fz1d7y-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/1qrnbw8xsww3vydd71lwfp32ylgx9i8g-make-wrapper.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { tests = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; shell = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-threads" "--mandir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/share/man" "--enable-man-symlinks" "--with-tzdata=no" "tcl_cv_strtod_unbroken=ok" "--enable-64bit" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "tcl-8.6.11"; nativeBuildInputs = [ ]; outputs = [ "out" "man" ]; patches = [ ]; pname = "tcl"; postInstall = "make install-private-headers\nln -s $out/bin/tclsh8.6 $out/bin/tclsh\nln -s $out/lib/libtcl8.6.so $out/lib/libtcl.so\n"; preConfigure = "cd unix\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "tcl8.6.11-src.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0n4211j80mxr6ql0xx52rig8r885rcbminfpjdb2qrw6hmk8c14c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/tcl/tcl8.6.11-src.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "tcl8.6.11-src.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/imk8brdjl0zms5n7d6vxl0iflklijkfq-tcl8.6.11-src.tar.gz"; outputHash = "0n4211j80mxr6ql0xx52rig8r885rcbminfpjdb2qrw6hmk8c14c"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/tcl/tcl8.6.11-src.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/tcl/tcl8.6.11-src.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "8.6.11"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; libPrefix = <CODE>; libdir = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tcl-8.6.11"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <LAMBDA>; passthru = { libPrefix = <CODE>; libdir = <CODE>; release = "8.6"; tclPackageHook = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/g4c3jbhc8ag6db5py0xk2sicfy0hrpmw-tcl-package-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "tcl-package-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = <CODE>; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; version = "8.6.11"; }; patches = [ ]; pname = "tcl"; postInstall = "make install-private-headers\nln -s $out/bin/tclsh8.6 $out/bin/tclsh\nln -s $out/lib/libtcl8.6.so $out/lib/libtcl.so\n"; preConfigure = "cd unix\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; release = "8.6"; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tclPackageHook = «repeated»; type = <CODE>; userHook = null; version = "8.6.11"; } ]; outputs = [ "out" "dev" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "0001-enable-cross-compilation.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1jwx2l1slidvcpahxbyqs942l81jd62rzbxliyd9lwysk38c8b6b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://raw.githubusercontent.com/buildroot/buildroot/c05e6aa361a4049eabd8b21eb64a34899ef83fc7/package/expect/0001-enable-cross-compilation.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "0001-enable-cross-compilation.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/j2d1ch2mx2j0cs55l55pxvxwya7jdlcr-0001-enable-cross-compilation.patch"; outputHash = "1jwx2l1slidvcpahxbyqs942l81jd62rzbxliyd9lwysk38c8b6b"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://raw.githubusercontent.com/buildroot/buildroot/c05e6aa361a4049eabd8b21eb64a34899ef83fc7/package/expect/0001-enable-cross-compilation.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://raw.githubusercontent.com/buildroot/buildroot/c05e6aa361a4049eabd8b21eb64a34899ef83fc7/package/expect/0001-enable-cross-compilation.patch"; urls = «repeated»; userHook = null; } { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/substitute/substitute-all.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "fix-cross-compilation.patch"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/misc/expect/fix-cross-compilation.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tcl = "/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/bin/tclsh"; userHook = null; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "fix-cross-compilation.patch"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/9vlmza54vir51nqk6yl2kx01443sppda-fix-cross-compilation.patch"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/misc/expect/fix-cross-compilation.patch; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tcl = "/nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/bin/tclsh"; type = "derivation"; userHook = null; } ]; pname = "expect"; postInstall = "tclWrapperArgs+=(--prefix PATH : /nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/bin)\n\n"; postPatch = "sed -i \"s,/bin/stty,$(type -p stty),g\" configure.in\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "expect5.45.4.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0d1cp5hggjl93xwc8h1y6adbnrvpkk0ywkd00inz9ndxn21xm9s9"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/expect/Expect/5.45.4/expect5.45.4.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "expect5.45.4.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/cq0s1r8b0ppzb6z7ny9v8pvsbslyy48h-expect5.45.4.tar.gz"; outputHash = "0d1cp5hggjl93xwc8h1y6adbnrvpkk0ywkd00inz9ndxn21xm9s9"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/expect/Expect/5.45.4/expect5.45.4.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/expect/Expect/5.45.4/expect5.45.4.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "5.45.4"; }; drvPath = <CODE>; hardeningDisable = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "expect-5.45.4"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/k0rinj109ah5ay566fsk8wdn1flznybv-expect-5.45.4-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "expect"; postInstall = "tclWrapperArgs+=(--prefix PATH : /nix/store/2caxyippx4yz646pm0ncga45xa8ahk4j-tcl-8.6.11/bin)\n\n"; postPatch = "sed -i \"s,/bin/stty,$(type -p stty),g\" configure.in\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "5.45.4"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "# Provide `runtest' with a log name, otherwise it tries to run\n# `whoami', which fails when in a chroot.\nLOGNAME=\"nix-build-daemon\" make check < /dev/zero\n"; cmakeFlags = [ ]; configureFlags = [ ]; configureScript = "../configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "# Provide `runtest' with a log name, otherwise it tries to run\n# `whoami', which fails when in a chroot.\nLOGNAME=\"nix-build-daemon\" make check < /dev/zero\n"; cmakeFlags = [ ]; configureFlags = [ ]; configureScript = "../configure"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; mesonFlags = [ ]; name = "dejagnu-1.6.3"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "dejagnu"; postInstall = "wrapProgram \"$out/bin/runtest\" \\\n  --prefix PATH \":\" \"/nix/store/zj0xql2dn7x4r93hshi1hkyjb1wqw1qx-expect-5.45.4/bin\"\n"; preConfigure = "mkdir build\ncd build\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "dejagnu-1.6.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1qx2cv6qkxbiqg87jh217jb62hk3s7dmcs4cz1llm2wmsynfznl7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/dejagnu/dejagnu-1.6.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "dejagnu-1.6.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/lhfgbqdaizrv41549mm458r900qqya8r-dejagnu-1.6.3.tar.gz"; outputHash = "1qx2cv6qkxbiqg87jh217jb62hk3s7dmcs4cz1llm2wmsynfznl7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/dejagnu/dejagnu-1.6.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/dejagnu/dejagnu-1.6.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.6.3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "dejagnu-1.6.3"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/rn68h0xj5cbilr469s67hrn75bl23yzc-dejagnu-1.6.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "dejagnu"; postInstall = "wrapProgram \"$out/bin/runtest\" \\\n  --prefix PATH \":\" \"/nix/store/zj0xql2dn7x4r93hshi1hkyjb1wqw1qx-expect-5.45.4/bin\"\n"; preConfigure = "mkdir build\ncd build\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.6.3"; } ]; outputs = [ "out" "dev" "man" "info" ]; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libffi-3.4.4.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-1mxWrSWags8qnfxAizK/XaUjcVALhHRff7i2RXEt9nY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libffi-3.4.4.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pgxpq0lmk4bd0yybaxkb82qlcjx55apn-libffi-3.4.4.tar.gz"; outputHash = "sha256-1mxWrSWags8qnfxAizK/XaUjcVALhHRff7i2RXEt9nY="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libffi/libffi/releases/download/v3.4.4/libffi-3.4.4.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.4.4"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libffi-3.4.4"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; dontStrip = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libffi-3.4.4"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { updateScript = <CODE>; }; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.4.4"; }; outPath = "/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "libffi"; preCheck = "# The tests use -O0 which is not compatible with -D_FORTIFY_SOURCE.\nNIX_HARDENING_ENABLE=\${NIX_HARDENING_ENABLE/fortify/}\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.4.4"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-libgdbm-compat" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "gdbm-1.23"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "gdbm"; postInstall = "install -dm755 $out/include/gdbm\n(\n  cd $out/include/gdbm\n  ln -s ../gdbm.h gdbm.h\n  ln -s ../ndbm.h ndbm.h\n  ln -s ../dbm.h  dbm.h\n)\n"; postPatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "gdbm-1.23.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-dLEIHSH/8TrkvXwW5dblBKTCb3zeHcoNljpIQXS7ys0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/gdbm/gdbm-1.23.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "gdbm-1.23.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/7zs9mp2nqnazrvchlf4bk06mlf7nw1rx-gdbm-1.23.tar.gz"; outputHash = "sha256-dLEIHSH/8TrkvXwW5dblBKTCb3zeHcoNljpIQXS7ys0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/gdbm/gdbm-1.23.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/gdbm/gdbm-1.23.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.23"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "gdbm-1.23"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "gdbm"; postInstall = "install -dm755 $out/include/gdbm\n(\n  cd $out/include/gdbm\n  ln -s ../gdbm.h gdbm.h\n  ln -s ../ndbm.h ndbm.h\n  ln -s ../dbm.h  dbm.h\n)\n"; postPatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.23"; } { NIX_CFLAGS_COMPILE = "-DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS3_TOKENIZER -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_STMT_SCANSTATUS -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SOUNDEX -DSQLITE_SECURE_DELETE -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_MAX_EXPR_DEPTH=10000"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-threadsafe" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { NIX_CFLAGS_COMPILE = "-DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS3_TOKENIZER -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_STMT_SCANSTATUS -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SOUNDEX -DSQLITE_SECURE_DELETE -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_MAX_EXPR_DEPTH=10000"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "sqlite-3.40.0"; nativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "debug" ]; patches = [ ]; pname = "sqlite"; postInstall = "# Do not contaminate dependent libtool-based projects with sqlite dependencies.\nsed -i $out/lib/libsqlite3.la -e \"s/dependency_libs=.*/dependency_libs=''/\"\n"; preBuild = "# Use pread(), pread64(), pwrite(), pwrite64() functions for better performance if they are available.\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread_pwrite_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread(0, NULL, 0, 0);\\n  pwrite(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD\"\nfi\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64\"\nelif cc -D_LARGEFILE64_SOURCE -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64 -D_LARGEFILE64_SOURCE\"\nfi\n\n# Necessary for FTS5 on Linux\nexport NIX_LDFLAGS=\"$NIX_LDFLAGS -lm\"\n\necho \"\"\necho \"NIX_CFLAGS_COMPILE = $NIX_CFLAGS_COMPILE\"\necho \"\"\n"; preConfigure = "patchShebangs configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "sqlite-autoconf-3400000.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-AzNVIHbScAx1NSJW6Rx4v1zWJJFYm6DGmu0KgYaJgOc="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://sqlite.org/2022/sqlite-autoconf-3400000.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "sqlite-autoconf-3400000.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/xs6wiiv1z8yk3d07g7sh1vbqrys7p09h-sqlite-autoconf-3400000.tar.gz"; outputHash = "sha256-AzNVIHbScAx1NSJW6Rx4v1zWJJFYm6DGmu0KgYaJgOc="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://sqlite.org/2022/sqlite-autoconf-3400000.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://sqlite.org/2022/sqlite-autoconf-3400000.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.40.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "sqlite-3.40.0"; nativeBuildInputs = «repeated»; out = { NIX_CFLAGS_COMPILE = "-DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS -DSQLITE_ENABLE_FTS3_TOKENIZER -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5 -DSQLITE_ENABLE_RTREE -DSQLITE_ENABLE_STMT_SCANSTATUS -DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SOUNDEX -DSQLITE_SECURE_DELETE -DSQLITE_MAX_VARIABLE_NUMBER=250000 -DSQLITE_MAX_EXPR_DEPTH=10000"; __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "sqlite-3.40.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "sqlite"; postInstall = "# Do not contaminate dependent libtool-based projects with sqlite dependencies.\nsed -i $out/lib/libsqlite3.la -e \"s/dependency_libs=.*/dependency_libs=''/\"\n"; preBuild = "# Use pread(), pread64(), pwrite(), pwrite64() functions for better performance if they are available.\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread_pwrite_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread(0, NULL, 0, 0);\\n  pwrite(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD\"\nfi\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64\"\nelif cc -D_LARGEFILE64_SOURCE -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64 -D_LARGEFILE64_SOURCE\"\nfi\n\n# Necessary for FTS5 on Linux\nexport NIX_LDFLAGS=\"$NIX_LDFLAGS -lm\"\n\necho \"\"\necho \"NIX_CFLAGS_COMPILE = $NIX_CFLAGS_COMPILE\"\necho \"\"\n"; preConfigure = "patchShebangs configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.40.0"; }; outPath = "/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "sqlite"; postInstall = "# Do not contaminate dependent libtool-based projects with sqlite dependencies.\nsed -i $out/lib/libsqlite3.la -e \"s/dependency_libs=.*/dependency_libs=''/\"\n"; preBuild = "# Use pread(), pread64(), pwrite(), pwrite64() functions for better performance if they are available.\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread_pwrite_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread(0, NULL, 0, 0);\\n  pwrite(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD\"\nfi\nif cc -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64\"\nelif cc -D_LARGEFILE64_SOURCE -Werror=implicit-function-declaration -x c - -o \"$TMPDIR/pread64_pwrite64_test\" <<< \\\n  $'#include <unistd.h>\\nint main()\\n{\\n  pread64(0, NULL, 0, 0);\\n  pwrite64(0, NULL, 0, 0);\\n  return 0;\\n}'; then\n  export NIX_CFLAGS_COMPILE=\"$NIX_CFLAGS_COMPILE -DUSE_PREAD64 -D_LARGEFILE64_SOURCE\"\nfi\n\n# Necessary for FTS5 on Linux\nexport NIX_LDFLAGS=\"$NIX_LDFLAGS -lm\"\n\necho \"\"\necho \"NIX_CFLAGS_COMPILE = $NIX_CFLAGS_COMPILE\"\necho \"\"\n"; preConfigure = "patchShebangs configure\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.40.0"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "readline-8.1p2"; nativeBuildInputs = [ ]; outputs = [ "out" "dev" "man" "doc" "info" ]; patchFlags = [ "-p0" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/readline/link-against-ncurses.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/readline/no-arch_only-6.3.patch { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "readline81-001"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0i4ikdqgcjnb40y2ss3lm09rq56zih5rzma3bib50dk3d1d4cak8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/readline/readline-8.1-patches/readline81-001" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "readline81-001"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/wkjh2dr3q35bwyd1rmzcqyw64jspvbl7-readline81-001"; outputHash = "0i4ikdqgcjnb40y2ss3lm09rq56zih5rzma3bib50dk3d1d4cak8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/readline/readline-8.1-patches/readline81-001"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/readline/readline-8.1-patches/readline81-001"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "readline81-002"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1p15sfx5xg5k4lam12lyd0givk7dfjddqpnb1jdp3c4clray0nz5"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/readline/readline-8.1-patches/readline81-002" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "readline81-002"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/l3nm4jqnxwq4qjn48aa72dbb6k0rwmf6-readline81-002"; outputHash = "1p15sfx5xg5k4lam12lyd0givk7dfjddqpnb1jdp3c4clray0nz5"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/readline/readline-8.1-patches/readline81-002"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/readline/readline-8.1-patches/readline81-002"; urls = «repeated»; userHook = null; } ]; pname = "readline"; propagatedBuildInputs = [ { CFLAGS = ""; __ignoreNulls = true; abiVersion = "6"; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--with-shared" "--without-debug" "--enable-pc-files" "--enable-symlinks" "--with-manpage-format=normal" "--disable-stripping" "--with-versioned-syms" "--enable-widec" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { CFLAGS = ""; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "ncurses-6.3-p20220507"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" "dev" "man" ]; patches = [ ]; patchver = "20220507"; pname = "ncurses"; postFixup = "# Determine what suffixes our libraries have\nsuffix=\"$(awk -F': ' 'f{print $3; f=0} /default library suffix/{f=1}' config.log)\"\nlibs=\"$(ls $dev/lib/pkgconfig | tr ' ' '\\n' | sed \"s,\\(.*\\)$suffix\\.pc,\\1,g\")\"\nsuffixes=\"$(echo \"$suffix\" | awk '{for (i=1; i < length($0); i++) {x=substr($0, i+1, length($0)-i); print x}}')\"\n\n# Get the path to the config util\ncfg=$(basename $dev/bin/ncurses*-config)\n\n# symlink the full suffixed include directory\nln -svf . $dev/include/ncurses$suffix\n\nfor newsuffix in $suffixes \"\"; do\n  # Create a non-abi versioned config util links\n  ln -svf $cfg $dev/bin/ncurses$newsuffix-config\n\n  # Allow for end users who #include <ncurses?w/*.h>\n  ln -svf . $dev/include/ncurses$newsuffix\n\n  for library in $libs; do\n    for dylibtype in so dll dylib; do\n      if [ -e \"$out/lib/lib\${library}$suffix.$dylibtype\" ]; then\n        ln -svf lib\${library}$suffix.$dylibtype $out/lib/lib$library$newsuffix.$dylibtype\n        ln -svf lib\${library}$suffix.$dylibtype.6 $out/lib/lib$library$newsuffix.$dylibtype.6\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib\${library}$suffix.$dylibtype $out/lib/libtinfo$newsuffix.$dylibtype\n          ln -svf lib\${library}$suffix.$dylibtype.6 $out/lib/libtinfo$newsuffix.$dylibtype.6\n        fi\n      fi\n    done\n    for statictype in a dll.a la; do\n      if [ -e \"$out/lib/lib\${library}$suffix.$statictype\" ]; then\n        ln -svf lib\${library}$suffix.$statictype $out/lib/lib$library$newsuffix.$statictype\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib\${library}$suffix.$statictype $out/lib/libtinfo$newsuffix.$statictype\n        fi\n      fi\n    done\n    ln -svf \${library}$suffix.pc $dev/lib/pkgconfig/$library$newsuffix.pc\n  done\ndone\n\n# move some utilities to $bin\n# these programs are used at runtime and don't really belong in $dev\nmoveToOutput \"bin/clear\" \"$out\"\nmoveToOutput \"bin/reset\" \"$out\"\nmoveToOutput \"bin/tabs\" \"$out\"\nmoveToOutput \"bin/tic\" \"$out\"\nmoveToOutput \"bin/tput\" \"$out\"\nmoveToOutput \"bin/tset\" \"$out\"\nmoveToOutput \"bin/captoinfo\" \"$out\"\nmoveToOutput \"bin/infotocap\" \"$out\"\nmoveToOutput \"bin/infocmp\" \"$out\"\n"; preConfigure = "export PKG_CONFIG_LIBDIR=\"$dev/lib/pkgconfig\"\nmkdir -p \"$PKG_CONFIG_LIBDIR\"\nconfigureFlagsArray+=(\n  \"--libdir=$out/lib\"\n  \"--includedir=$dev/include\"\n  \"--bindir=$dev/bin\"\n  \"--mandir=$man/share/man\"\n  \"--with-pkg-config-libdir=$PKG_CONFIG_LIBDIR\"\n)\n"; preFixup = "rm \"$out\"/lib/*.a\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "ncurses-6.3-20220507.tgz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "02y4n4my5qqhw3fdhdjv1zc9xpyglzlzmzjwq2zcwbwv738255ja"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://invisible-island.net/archives/ncurses/current/ncurses-6.3-20220507.tgz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "ncurses-6.3-20220507.tgz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/0xiwj5b1vsxpzvqw2y16x86ya4k2f36p-ncurses-6.3-20220507.tgz"; outputHash = "02y4n4my5qqhw3fdhdjv1zc9xpyglzlzmzjwq2zcwbwv738255ja"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://invisible-island.net/archives/ncurses/current/ncurses-6.3-20220507.tgz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://invisible-island.net/archives/ncurses/current/ncurses-6.3-20220507.tgz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; ver = "6.3"; version = "6.3-p20220507"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; ldflags = "-lncurses"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "ncurses-6.3-p20220507"; nativeBuildInputs = «repeated»; out = { CFLAGS = ""; __ignoreNulls = true; abiVersion = "6"; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; ldflags = "-lncurses"; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "ncurses-6.3-p20220507"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { abiVersion = "6"; ldflags = "-lncurses"; unicodeSupport = true; }; patches = [ ]; patchver = "20220507"; pname = "ncurses"; postFixup = "# Determine what suffixes our libraries have\nsuffix=\"$(awk -F': ' 'f{print $3; f=0} /default library suffix/{f=1}' config.log)\"\nlibs=\"$(ls $dev/lib/pkgconfig | tr ' ' '\\n' | sed \"s,\\(.*\\)$suffix\\.pc,\\1,g\")\"\nsuffixes=\"$(echo \"$suffix\" | awk '{for (i=1; i < length($0); i++) {x=substr($0, i+1, length($0)-i); print x}}')\"\n\n# Get the path to the config util\ncfg=$(basename $dev/bin/ncurses*-config)\n\n# symlink the full suffixed include directory\nln -svf . $dev/include/ncurses$suffix\n\nfor newsuffix in $suffixes \"\"; do\n  # Create a non-abi versioned config util links\n  ln -svf $cfg $dev/bin/ncurses$newsuffix-config\n\n  # Allow for end users who #include <ncurses?w/*.h>\n  ln -svf . $dev/include/ncurses$newsuffix\n\n  for library in $libs; do\n    for dylibtype in so dll dylib; do\n      if [ -e \"$out/lib/lib\${library}$suffix.$dylibtype\" ]; then\n        ln -svf lib\${library}$suffix.$dylibtype $out/lib/lib$library$newsuffix.$dylibtype\n        ln -svf lib\${library}$suffix.$dylibtype.6 $out/lib/lib$library$newsuffix.$dylibtype.6\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib\${library}$suffix.$dylibtype $out/lib/libtinfo$newsuffix.$dylibtype\n          ln -svf lib\${library}$suffix.$dylibtype.6 $out/lib/libtinfo$newsuffix.$dylibtype.6\n        fi\n      fi\n    done\n    for statictype in a dll.a la; do\n      if [ -e \"$out/lib/lib\${library}$suffix.$statictype\" ]; then\n        ln -svf lib\${library}$suffix.$statictype $out/lib/lib$library$newsuffix.$statictype\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib\${library}$suffix.$statictype $out/lib/libtinfo$newsuffix.$statictype\n        fi\n      fi\n    done\n    ln -svf \${library}$suffix.pc $dev/lib/pkgconfig/$library$newsuffix.pc\n  done\ndone\n\n# move some utilities to $bin\n# these programs are used at runtime and don't really belong in $dev\nmoveToOutput \"bin/clear\" \"$out\"\nmoveToOutput \"bin/reset\" \"$out\"\nmoveToOutput \"bin/tabs\" \"$out\"\nmoveToOutput \"bin/tic\" \"$out\"\nmoveToOutput \"bin/tput\" \"$out\"\nmoveToOutput \"bin/tset\" \"$out\"\nmoveToOutput \"bin/captoinfo\" \"$out\"\nmoveToOutput \"bin/infotocap\" \"$out\"\nmoveToOutput \"bin/infocmp\" \"$out\"\n"; preConfigure = "export PKG_CONFIG_LIBDIR=\"$dev/lib/pkgconfig\"\nmkdir -p \"$PKG_CONFIG_LIBDIR\"\nconfigureFlagsArray+=(\n  \"--libdir=$out/lib\"\n  \"--includedir=$dev/include\"\n  \"--bindir=$dev/bin\"\n  \"--mandir=$man/share/man\"\n  \"--with-pkg-config-libdir=$PKG_CONFIG_LIBDIR\"\n)\n"; preFixup = "rm \"$out\"/lib/*.a\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; unicodeSupport = true; userHook = null; ver = "6.3"; version = "6.3-p20220507"; }; outPath = "/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; patchver = "20220507"; pname = "ncurses"; postFixup = "# Determine what suffixes our libraries have\nsuffix=\"$(awk -F': ' 'f{print $3; f=0} /default library suffix/{f=1}' config.log)\"\nlibs=\"$(ls $dev/lib/pkgconfig | tr ' ' '\\n' | sed \"s,\\(.*\\)$suffix\\.pc,\\1,g\")\"\nsuffixes=\"$(echo \"$suffix\" | awk '{for (i=1; i < length($0); i++) {x=substr($0, i+1, length($0)-i); print x}}')\"\n\n# Get the path to the config util\ncfg=$(basename $dev/bin/ncurses*-config)\n\n# symlink the full suffixed include directory\nln -svf . $dev/include/ncurses$suffix\n\nfor newsuffix in $suffixes \"\"; do\n  # Create a non-abi versioned config util links\n  ln -svf $cfg $dev/bin/ncurses$newsuffix-config\n\n  # Allow for end users who #include <ncurses?w/*.h>\n  ln -svf . $dev/include/ncurses$newsuffix\n\n  for library in $libs; do\n    for dylibtype in so dll dylib; do\n      if [ -e \"$out/lib/lib\${library}$suffix.$dylibtype\" ]; then\n        ln -svf lib\${library}$suffix.$dylibtype $out/lib/lib$library$newsuffix.$dylibtype\n        ln -svf lib\${library}$suffix.$dylibtype.6 $out/lib/lib$library$newsuffix.$dylibtype.6\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib\${library}$suffix.$dylibtype $out/lib/libtinfo$newsuffix.$dylibtype\n          ln -svf lib\${library}$suffix.$dylibtype.6 $out/lib/libtinfo$newsuffix.$dylibtype.6\n        fi\n      fi\n    done\n    for statictype in a dll.a la; do\n      if [ -e \"$out/lib/lib\${library}$suffix.$statictype\" ]; then\n        ln -svf lib\${library}$suffix.$statictype $out/lib/lib$library$newsuffix.$statictype\n        if [ \"ncurses\" = \"$library\" ]\n        then\n          # make libtinfo symlinks\n          ln -svf lib\${library}$suffix.$statictype $out/lib/libtinfo$newsuffix.$statictype\n        fi\n      fi\n    done\n    ln -svf \${library}$suffix.pc $dev/lib/pkgconfig/$library$newsuffix.pc\n  done\ndone\n\n# move some utilities to $bin\n# these programs are used at runtime and don't really belong in $dev\nmoveToOutput \"bin/clear\" \"$out\"\nmoveToOutput \"bin/reset\" \"$out\"\nmoveToOutput \"bin/tabs\" \"$out\"\nmoveToOutput \"bin/tic\" \"$out\"\nmoveToOutput \"bin/tput\" \"$out\"\nmoveToOutput \"bin/tset\" \"$out\"\nmoveToOutput \"bin/captoinfo\" \"$out\"\nmoveToOutput \"bin/infotocap\" \"$out\"\nmoveToOutput \"bin/infocmp\" \"$out\"\n"; preConfigure = "export PKG_CONFIG_LIBDIR=\"$dev/lib/pkgconfig\"\nmkdir -p \"$PKG_CONFIG_LIBDIR\"\nconfigureFlagsArray+=(\n  \"--libdir=$out/lib\"\n  \"--includedir=$dev/include\"\n  \"--bindir=$dev/bin\"\n  \"--mandir=$man/share/man\"\n  \"--with-pkg-config-libdir=$PKG_CONFIG_LIBDIR\"\n)\n"; preFixup = "rm \"$out\"/lib/*.a\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; unicodeSupport = true; userHook = null; ver = "6.3"; version = "6.3-p20220507"; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "readline-8.1.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "00ibp0n9crbwx15k9vvckq5wsipw98b1px8pd8i34chy2gpb9kpq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/readline/readline-8.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "readline-8.1.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/g640j3x8z0ykqyjbn2ag5r3952075ynq-readline-8.1.tar.gz"; outputHash = "00ibp0n9crbwx15k9vvckq5wsipw98b1px8pd8i34chy2gpb9kpq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/readline/readline-8.1.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/readline/readline-8.1.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; upstreamPatches = [ «repeated» «repeated» ]; userHook = null; version = "8.1p2"; }; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "readline-8.1p2"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "readline-8.1p2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "readline"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; upstreamPatches = «repeated»; userHook = null; version = "8.1p2"; }; outPath = "/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = «repeated»; patches = «repeated»; pname = "readline"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; upstreamPatches = «repeated»; userHook = null; version = "8.1p2"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "shared" "--libdir=lib" "--openssldir=etc/ssl" "enable-ktls" "no-afalgeng" ]; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontAddStaticConfigureFlags = true; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ "MANDIR=$(man)/share/man" "MANSUFFIX=ssl" ]; mesonFlags = [ ]; name = "openssl-3.0.7"; nativeBuildInputs = [ «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "man" "doc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/3.0/nix-ssl-cert-file.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/3.0/openssl-disable-kernel-detection.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/openssl/use-etc-ssl-certs.patch ]; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\ncat /nix/store/s90m3nvb1vzsp4vcpckl1q9f3rll2a3z-legacy.cnf > $etc/etc/ssl/openssl.cnf\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "openssl-3.0.7.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-gwSdBComDmlvYkBqxcCL9wb9hDg/lFzyG9YentlcOW4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.openssl.org/source/openssl-3.0.7.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "openssl-3.0.7.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/y8svc7bs4ah28j9zg2z3lwyk12v8zkc8-openssl-3.0.7.tar.gz"; outputHash = "sha256-gwSdBComDmlvYkBqxcCL9wb9hDg/lFzyG9YentlcOW4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.openssl.org/source/openssl-3.0.7.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.openssl.org/source/openssl-3.0.7.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.0.7"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = <CODE>; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; configureScript = "./config"; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; doc = <CODE>; dontAddStaticConfigureFlags = true; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "openssl-3.0.7"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\ncat /nix/store/s90m3nvb1vzsp4vcpckl1q9f3rll2a3z-legacy.cnf > $etc/etc/ssl/openssl.cnf\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.0.7"; }; outPath = "/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "openssl"; postFixup = "# Check to make sure the main output and the static runtime dependencies\n# don't depend on perl\nif grep -r '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0' $out $etc; then\n  echo \"Found an erroneous dependency on perl ^^^\" >&2\n  exit 1\nfi\n"; postInstall = "# If we're building dynamic libraries, then don't install static\n# libraries.\nif [ -n \"$(echo $out/lib/*.so $out/lib/*.dylib $out/lib/*.dll)\" ]; then\n    rm \"$out/lib/\"*.a\nfi\n\n# 'etc' is a separate output on static builds only.\netc=$out\nsubstituteInPlace $out/bin/c_rehash --replace /nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl \"/usr/bin/env perl\"\nmkdir -p $bin\nmv $out/bin $bin/bin\n\nmkdir $dev\nmv $out/include $dev/\n\n# remove dependency on Perl at runtime\nrm -r $etc/etc/ssl/misc\n\nrmdir $etc/etc/ssl/{certs,private}\n\ncat /nix/store/s90m3nvb1vzsp4vcpckl1q9f3rll2a3z-legacy.cnf > $etc/etc/ssl/openssl.cnf\n"; postPatch = "patchShebangs Configure\nsubstituteInPlace config --replace '/usr/bin/env' '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/env'\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setOutputFlags = false; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.0.7"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "--with-lto" "--enable-loadable-sqlite-extensions" "--with-openssl=/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" "--with-tzpath=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-3.10.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/mimetypes.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = { available = <CODE>; broken = false; changelog = <CODE>; description = "A high-level dynamically-typed programming language"; homepage = "https://www.python.org"; insecure = <CODE>; license = { deprecated = false; free = true; fullName = "Python Software Foundation License version 2"; redistributable = <CODE>; shortName = "psfl"; spdxId = "Python-2.0"; url = "https://spdx.org/licenses/Python-2.0.html"; }; longDescription = "Python is a remarkably powerful dynamic programming language that\nis used in a wide variety of application domains. Some of its key\ndistinguishing features include: clear, readable syntax; strong\nintrospection capabilities; intuitive object orientation; natural\nexpression of procedural code; full modularity, supporting\nhierarchical packages; exception-based error handling; and very\nhigh level dynamic data types.\n"; maintainers = [ <CODE> ]; name = <CODE>; outputsToInstall = [ "out" ]; platforms = [ "aarch64-linux" "armv5tel-linux" "armv6l-linux" "armv7a-linux" "armv7l-linux" "i686-linux" "m68k-linux" "microblaze-linux" "microblazeel-linux" "mipsel-linux" "mips64el-linux" "powerpc64-linux" "powerpc64le-linux" "riscv32-linux" "riscv64-linux" "s390-linux" "s390x-linux" "x86_64-linux" "x86_64-darwin" "i686-darwin" "aarch64-darwin" "armv7a-darwin" ]; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = "out"; outputs = «repeated»; override = { __functionArgs = <CODE>; __functor = <LAMBDA>; }; overrideAttrs = <LAMBDA>; overrideDerivation = <CODE>; passthru = { buildEnv = «repeated»; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = «repeated»; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "--with-lto" "--enable-loadable-sqlite-extensions" "--with-openssl=/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" "--with-tzpath=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-3.10.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/mimetypes.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = <CODE>; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = <CODE>; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = <CODE>; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "3.10.9"; withPackages = <CODE>; }; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <LAMBDA>; }; patches = «repeated»; pkgs = «repeated»; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "3.10.9"; withPackages = <LAMBDA>; }; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = <CODE>; pname = "buildcatrust"; postFixup = <CODE>; propagatedBuildInputs = <CODE>; propagatedNativeBuildInputs = <CODE>; pythonImportsCheck = <CODE>; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = <CODE>; stdenv = «repeated»; strictDeps = true; system = <CODE>; type = "derivation"; updateScript = <CODE>; userHook = <CODE>; version = "0.1.3"; }; bumps = <CODE>; bunch = <CODE>; bundlewrap = <CODE>; bwapy = <CODE>; bx-python = <CODE>; bytecode = <CODE>; bz2file = <CODE>; cachecontrol = <CODE>; cached-property = <CODE>; cachelib = <CODE>; cachetools = <CODE>; cachey = <CODE>; cachy = <CODE>; cadquery = <CODE>; caffe = <CODE>; caffeWithCuda = <CODE>; caio = <CODE>; cairo-lang = <CODE>; cairocffi = <CODE>; cairosvg = <CODE>; caldav = <CODE>; callPackage = <CODE>; callee = <CODE>; calmjs-parse = <CODE>; calver = <CODE>; camel-converter = <CODE>; can = <CODE>; canmatrix = <CODE>; canonicaljson = <CODE>; canopen = <CODE>; capstone = <CODE>; capturer = <CODE>; carbon = <CODE>; carrot = <CODE>; cart = <CODE>; cartopy = <CODE>; casa-formats-io = <CODE>; casbin = <CODE>; case = <CODE>; cassandra-driver = <CODE>; castepxbin = <CODE>; casttube = <CODE>; catalogue = <CODE>; catboost = <CODE>; cattrs = <CODE>; cbeams = <CODE>; cbor = <CODE>; cbor2 = <CODE>; cccolutils = <CODE>; cchardet = <CODE>; cdcs = <CODE>; celery = <CODE>; celery-redbeat = <CODE>; cement = <CODE>; censys = <CODE>; cepa = <CODE>; cerberus = <CODE>; cert-chain-resolver = <CODE>; certauth = <CODE>; certbot = <CODE>; certbot-dns-cloudflare = <CODE>; certbot-dns-google = <CODE>; certbot-dns-inwx = <CODE>; certbot-dns-rfc2136 = <CODE>; certbot-dns-route53 = <CODE>; certifi = <CODE>; certipy = <CODE>; certomancer = <CODE>; certvalidator = <CODE>; cexprtk = <CODE>; cffi = <CODE>; cffsubr = <CODE>; cfgv = <CODE>; cfn-flip = <CODE>; cfn-lint = <CODE>; cfscrape = <CODE>; cftime = <CODE>; cgen = <CODE>; cgroup-utils = <CODE>; chacha20poly1305 = <CODE>; chacha20poly1305-reuseable = <CODE>; chai = <CODE>; chainer = <CODE>; chainmap = <CODE>; chalice = <CODE>; chameleon = <CODE>; channels = <CODE>; channels-redis = <CODE>; characteristic = <CODE>; chardet = <CODE>; charset-normalizer = <CODE>; chart-studio = <CODE>; chat-downloader = <CODE>; check-manifest = <CODE>; cheetah3 = <CODE>; cheroot = <CODE>; cherrypy = <CODE>; chess = <CODE>; chevron = <CODE>; chex = <CODE>; chia-rs = <CODE>; chiabip158 = <CODE>; chiapos = <CODE>; chiavdf = <CODE>; chirpstack-api = <CODE>; chispa = <CODE>; chromaprint = <CODE>; ci-info = <CODE>; ci-py = <CODE>; cinemagoer = <CODE>; circuit-webhook = <CODE>; circuitbreaker = <CODE>; cirq = <CODE>; cirq-aqt = <CODE>; cirq-core = <CODE>; cirq-google = <CODE>; cirq-ionq = <CODE>; cirq-pasqal = <CODE>; cirq-rigetti = <CODE>; cirq-web = <CODE>; ciscoconfparse = <CODE>; ciscomobilityexpress = <CODE>; ciso8601 = <CODE>; citeproc-py = <CODE>; cjkwrap = <CODE>; ckcc-protocol = <CODE>; claripy = <CODE>; class-registry = <CODE>; classify-imports = <CODE>; cld2-cffi = <CODE>; cle = <CODE>; cleo = <CODE>; clevercsv = <CODE>; clf = <CODE>; cli-helpers = <CODE>; click = <CODE>; click-command-tree = <CODE>; click-completion = <CODE>; click-configfile = <CODE>; click-datetime = <CODE>; click-default-group = <CODE>; click-didyoumean = <CODE>; click-help-colors = <CODE>; click-log = <CODE>; click-option-group = <CODE>; click-plugins = <CODE>; click-repl = <CODE>; click-shell = <CODE>; click-spinner = <CODE>; click-threading = <CODE>; clickclick = <CODE>; clickgen = <CODE>; clickhouse-cityhash = <CODE>; clickhouse-cli = <CODE>; clickhouse-driver = <CODE>; cliff = <CODE>; clifford = <CODE>; cligj = <CODE>; clikit = <CODE>; clint = <CODE>; clintermission = <CODE>; clip = <CODE>; clize = <CODE>; clldutils = <CODE>; cloudflare = <CODE>; cloudpickle = <CODE>; cloudscraper = <CODE>; cloudsmith-api = <CODE>; cloudsplaining = <CODE>; cloup = <CODE>; clustershell = <CODE>; clvm = <CODE>; clvm-rs = <CODE>; clvm-tools = <CODE>; clvm-tools-rs = <CODE>; cma = <CODE>; cmarkgfm = <CODE>; cmd2 = <CODE>; cmdline = <CODE>; cmigemo = <CODE>; cmsis-pack-manager = <CODE>; cmsis-svd = <CODE>; cntk = <CODE>; cnvkit = <CODE>; co2signal = <CODE>; coapthon3 = <CODE>; cock = <CODE>; coconut = <CODE>; cocotb = <CODE>; cocotb-bus = <CODE>; codecov = <CODE>; codepy = <CODE>; codespell = <CODE>; cogapp = <CODE>; coincurve = <CODE>; coinmetrics-api-client = <CODE>; colander = <CODE>; collections-extended = <CODE>; colorama = <CODE>; colorcet = <CODE>; colorclass = <CODE>; colored = <CODE>; colored-traceback = <CODE>; coloredlogs = <CODE>; colorful = <CODE>; colorlog = <CODE>; colorlover = <CODE>; colormath = <CODE>; colorspacious = <CODE>; colorthief = <CODE>; colorzero = <CODE>; colour = <CODE>; cometblue-lite = <CODE>; commandparse = <CODE>; commentjson = <CODE>; commoncode = <CODE>; compiledb = <CODE>; compreffor = <CODE>; concurrent-log-handler = <CODE>; conda = <CODE>; condaInstallHook = <CODE>; condaUnpackHook = <CODE>; confection = <CODE>; configargparse = <CODE>; configclass = <CODE>; confight = <CODE>; configobj = <CODE>; configparser = <CODE>; configshell = <CODE>; configupdater = <CODE>; confluent-kafka = <CODE>; confuse = <CODE>; connect-box = <CODE>; connection-pool = <CODE>; connexion = <CODE>; connio = <CODE>; cons = <CODE>; consonance = <CODE>; constantly = <CODE>; construct = <CODE>; construct-classes = <CODE>; consul = <CODE>; container-inspector = <CODE>; contexter = <CODE>; contextlib2 = <CODE>; contexttimer = <CODE>; convertdate = <CODE>; cookiecutter = <CODE>; cookies = <CODE>; coordinates = <CODE>; coqpit = <CODE>; coreapi = <CODE>; coreschema = <CODE>; cornice = <CODE>; coronavirus = <CODE>; corsair-scan = <CODE>; cot = <CODE>; covCore = <CODE>; coverage = <CODE>; coveralls = <CODE>; cozy = <CODE>; cppe = <CODE>; cppheaderparser = <CODE>; cppy = <CODE>; cpyparsing = <CODE>; cram = <CODE>; cramjam = <CODE>; crashtest = <CODE>; crate = <CODE>; crayons = <CODE>; crc16 = <CODE>; crc32c = <CODE>; crccheck = <CODE>; crcmod = <CODE>; credstash = <CODE>; criticality-score = <CODE>; crocoddyl = <CODE>; cron-descriptor = <CODE>; croniter = <CODE>; cronsim = <CODE>; crossplane = <CODE>; crownstone-cloud = <CODE>; crownstone-core = <CODE>; crownstone-sse = <CODE>; crownstone-uart = <CODE>; cryptacular = <CODE>; cryptg = <CODE>; cryptography = <CODE>; cryptography_vectors = <CODE>; cryptolyzer = <CODE>; cryptoparser = <CODE>; crysp = <CODE>; crytic-compile = <CODE>; csrmesh = <CODE>; css-html-js-minify = <CODE>; css-parser = <CODE>; csscompressor = <CODE>; cssmin = <CODE>; cssselect = <CODE>; cssselect2 = <CODE>; cssutils = <CODE>; csvw = <CODE>; cucumber-tag-expressions = <CODE>; cufflinks = <CODE>; cupy = <CODE>; curio = <CODE>; curtsies = <CODE>; curve25519-donna = <CODE>; cvelib = <CODE>; cvss = <CODE>; cvxopt = <CODE>; cvxpy = <CODE>; cwcwidth = <CODE>; cx_Freeze = <CODE>; cx_oracle = <CODE>; cxxfilt = <CODE>; cycler = <CODE>; cyclonedx-python-lib = <CODE>; cymem = <CODE>; cypari2 = <CODE>; cypherpunkpay = <CODE>; cysignals = <CODE>; cython = <CODE>; cython_3 = <CODE>; cytoolz = <CODE>; d2to1 = <CODE>; dacite = <CODE>; daemonize = <CODE>; daemonocle = <CODE>; dalle-mini = <CODE>; daphne = <CODE>; dasbus = <CODE>; dash = <CODE>; dash-core-components = <CODE>; dash-html-components = <CODE>; dash-renderer = <CODE>; dash-table = <CODE>; dask = <CODE>; dask-gateway = <CODE>; dask-gateway-server = <CODE>; dask-glm = <CODE>; dask-image = <CODE>; dask-jobqueue = <CODE>; dask-ml = <CODE>; dask-mpi = <CODE>; dask-xgboost = <CODE>; dask-yarn = <CODE>; databases = <CODE>; databricks-cli = <CODE>; databricks-connect = <CODE>; databricks-sql-connector = <CODE>; dataclasses-json = <CODE>; dataclasses-serialization = <CODE>; datadiff = <CODE>; datadog = <CODE>; datafusion = <CODE>; datamodeldict = <CODE>; datapoint = <CODE>; dataset = <CODE>; datasets = <CODE>; datasette = <CODE>; datasette-publish-fly = <CODE>; datasette-template-sql = <CODE>; datashader = <CODE>; datashape = <CODE>; datatable = <CODE>; datauri = <CODE>; dateparser = <CODE>; dateutil = <CODE>; dateutils = <CODE>; datrie = <CODE>; dawg-python = <CODE>; db-dtypes = <CODE>; dbf = <CODE>; dbfread = <CODE>; dbus-client-gen = <CODE>; dbus-fast = <CODE>; dbus-next = <CODE>; dbus-python = <CODE>; dbus-python-client-gen = <CODE>; dbus-signature-pyparsing = <CODE>; dbutils = <CODE>; dcmstack = <CODE>; ddt = <CODE>; deal = <CODE>; deal-solver = <CODE>; deap = <CODE>; debian = <CODE>; debian-inspector = <CODE>; debtcollector = <CODE>; debts = <CODE>; debuglater = <CODE>; debugpy = <CODE>; decli = <CODE>; decopatch = <CODE>; decorator = <CODE>; deemix = <CODE>; deep-chainmap = <CODE>; deep-translator = <CODE>; deep_merge = <CODE>; deepdiff = <CODE>; deepdish = <CODE>; deepmerge = <CODE>; deeptoolsintervals = <CODE>; deepwave = <CODE>; deezer-py = <CODE>; deezer-python = <CODE>; defcon = <CODE>; deform = <CODE>; defusedxml = <CODE>; delegator-py = <CODE>; delorean = <CODE>; deltachat = <CODE>; deluge-client = <CODE>; demetriek = <CODE>; demjson = <CODE>; demjson3 = <CODE>; dendropy = <CODE>; denonavr = <CODE>; dependency-injector = <CODE>; deploykit = <CODE>; deprecated = <CODE>; deprecation = <CODE>; derpconf = <CODE>; descartes = <CODE>; desktop-notifier = <CODE>; detect-secrets = <CODE>; detox = <CODE>; devito = <CODE>; devolo-home-control-api = <CODE>; devolo-plc-api = <CODE>; devpi-common = <CODE>; devtools = <CODE>; dftfit = <CODE>; diagrams = <CODE>; diceware = <CODE>; dicom2nifti = <CODE>; dict2xml = <CODE>; dictdiffer = <CODE>; dictionaries = <CODE>; dictpath = <CODE>; dicttoxml = <CODE>; dicttoxml2 = <CODE>; diff-cover = <CODE>; diff-match-patch = <CODE>; diff_cover = <CODE>; digi-xbee = <CODE>; digital-ocean = <CODE>; dill = <CODE>; dinghy = <CODE>; dingz = <CODE>; diofant = <CODE>; dipy = <CODE>; directv = <CODE>; dirty-equals = <CODE>; disabled = <CODE>; disabledIf = <CODE>; discid = <CODE>; discogs-client = <CODE>; discogs_client = <CODE>; discordpy = <CODE>; discovery30303 = <CODE>; diskcache = <CODE>; dissect = <CODE>; dissect-cim = <CODE>; dissect-clfs = <CODE>; dissect-cstruct = <CODE>; dissect-esedb = <CODE>; dissect-etl = <CODE>; dissect-eventlog = <CODE>; dissect-evidence = <CODE>; dissect-extfs = <CODE>; dissect-fat = <CODE>; dissect-ffs = <CODE>; dissect-hypervisor = <CODE>; dissect-ntfs = <CODE>; dissect-ole = <CODE>; dissect-regf = <CODE>; dissect-shellitem = <CODE>; dissect-sql = <CODE>; dissect-target = <CODE>; dissect-thumbcache = <CODE>; dissect-util = <CODE>; dissect-vmfs = <CODE>; dissect-volume = <CODE>; dissect-xfs = <CODE>; dissononce = <CODE>; distlib = <CODE>; distorm3 = <CODE>; distrax = <CODE>; distributed = <CODE>; distro = <CODE>; distutils_extra = <CODE>; dj-database-url = <CODE>; dj-email-url = <CODE>; dj-rest-auth = <CODE>; dj-search-url = <CODE>; django = <CODE>; django-allauth = <CODE>; django-annoying = <CODE>; django-anymail = <CODE>; django-appconf = <CODE>; django-auth-ldap = <CODE>; django-autocomplete-light = <CODE>; django-cache-url = <CODE>; django-cacheops = <CODE>; django-celery-beat = <CODE>; django-celery-email = <CODE>; django-cleanup = <CODE>; django-compressor = <CODE>; django-configurations = <CODE>; django-cors-headers = <CODE>; django-crispy-forms = <CODE>; django-cryptography = <CODE>; django-csp = <CODE>; django-debug-toolbar = <CODE>; django-discover-runner = <CODE>; django-dynamic-preferences = <CODE>; django-encrypted-model-fields = <CODE>; django-environ = <CODE>; django-extensions = <CODE>; django-filter = <CODE>; django-formtools = <CODE>; django-graphiql-debug-toolbar = <CODE>; django-gravatar2 = <CODE>; django-guardian = <CODE>; django-haystack = <CODE>; django-hcaptcha = <CODE>; django-health-check = <CODE>; django-ipware = <CODE>; django-jinja = <CODE>; django-js-asset = <CODE>; django-js-reverse = <CODE>; django-logentry-admin = <CODE>; django-mailman3 = <CODE>; django-maintenance-mode = <CODE>; django-model-utils = <CODE>; django-modelcluster = <CODE>; django-mptt = <CODE>; django-multiselectfield = <CODE>; django-oauth-toolkit = <CODE>; django-otp = <CODE>; django-paintstore = <CODE>; django-pglocks = <CODE>; django-picklefield = <CODE>; django-polymorphic = <CODE>; django-postgresql-netfields = <CODE>; django-prometheus = <CODE>; django-q = <CODE>; django-ranged-response = <CODE>; django-raster = <CODE>; django-redis = <CODE>; django-rest-auth = <CODE>; django-rest-polymorphic = <CODE>; django-reversion = <CODE>; django-rq = <CODE>; django-sampledatahelper = <CODE>; django-scopes = <CODE>; django-sesame = <CODE>; django-simple-captcha = <CODE>; django-sites = <CODE>; django-sr = <CODE>; django-statici18n = <CODE>; django-storages = <CODE>; django-stubs = <CODE>; django-stubs-ext = <CODE>; django-tables2 = <CODE>; django-taggit = <CODE>; django-tastypie = <CODE>; django-timezone-field = <CODE>; django-versatileimagefield = <CODE>; django-webpack-loader = <CODE>; django-widget-tweaks = <CODE>; django_2 = <CODE>; django_3 = <CODE>; django_4 = <CODE>; django_appconf = <CODE>; django_classytags = <CODE>; django_colorful = <CODE>; django_compat = <CODE>; django_contrib_comments = <CODE>; django_environ = <CODE>; django_extensions = <CODE>; django_guardian = <CODE>; django_hijack = <CODE>; django_hijack_admin = <CODE>; django_modelcluster = <CODE>; django_nose = <CODE>; django_polymorphic = <CODE>; django_redis = <CODE>; django_reversion = <CODE>; django_silk = <CODE>; django_tagging = <CODE>; django_taggit = <CODE>; django_treebeard = <CODE>; djangoql = <CODE>; djangorestframework = <CODE>; djangorestframework-camel-case = <CODE>; djangorestframework-dataclasses = <CODE>; djangorestframework-guardian = <CODE>; djangorestframework-jwt = <CODE>; djangorestframework-recursive = <CODE>; djangorestframework-simplejwt = <CODE>; djmail = <CODE>; dkimpy = <CODE>; dlib = <CODE>; dlinfo = <CODE>; dlms-cosem = <CODE>; dlx = <CODE>; dm-env = <CODE>; dm-haiku = <CODE>; dm-sonnet = <CODE>; dm-tree = <CODE>; dmenu-python = <CODE>; dnachisel = <CODE>; dnfile = <CODE>; dns = <CODE>; dnslib = <CODE>; dnspython = <CODE>; doc8 = <CODE>; docformatter = <CODE>; docker = <CODE>; docker-py = <CODE>; docker_pycreds = <CODE>; dockerfile-parse = <CODE>; dockerpty = <CODE>; dockerspawner = <CODE>; docloud = <CODE>; docopt = <CODE>; docopt-ng = <CODE>; docplex = <CODE>; docrep = <CODE>; docstring-parser = <CODE>; docstring-to-markdown = <CODE>; doctest-ignore-unicode = <CODE>; docutils = <CODE>; docx2python = <CODE>; docx2txt = <CODE>; dodgy = <CODE>; dogpile-cache = <CODE>; dogpile-core = <CODE>; dogpile_cache = <CODE>; dogtail = <CODE>; doit = <CODE>; doit-py = <CODE>; domeneshop = <CODE>; dominate = <CODE>; doorbirdpy = <CODE>; dopy = <CODE>; dot2tex = <CODE>; dotmap = <CODE>; dotty-dict = <CODE>; downloader-cli = <CODE>; dparse = <CODE>; dparse2 = <CODE>; dpath = <CODE>; dpcontracts = <CODE>; dpkt = <CODE>; dragonfly = <CODE>; dremel3dpy = <CODE>; drf-jwt = <CODE>; drf-nested-routers = <CODE>; drf-spectacular = <CODE>; drf-spectacular-sidecar = <CODE>; drf-writable-nested = <CODE>; drf-yasg = <CODE>; drivelib = <CODE>; drms = <CODE>; dropbox = <CODE>; ds-store = <CODE>; ds4drv = <CODE>; dsinternals = <CODE>; dsmr-parser = <CODE>; dtlssocket = <CODE>; ducc0 = <CODE>; duckdb = <CODE>; duckdb-engine = <CODE>; duecredit = <CODE>; duet = <CODE>; dufte = <CODE>; dugong = <CODE>; dulwich = <CODE>; dunamai = <CODE>; dungeon-eos = <CODE>; duo-client = <CODE>; durus = <CODE>; dvc-data = <CODE>; dvc-objects = <CODE>; dvc-render = <CODE>; dvc-task = <CODE>; dvclive = <CODE>; dwdwfsapi = <CODE>; dyn = <CODE>; dynalite-devices = <CODE>; dynd = <CODE>; eagle100 = <CODE>; easy-thumbnails = <CODE>; easydict = <CODE>; easygui = <CODE>; easyocr = <CODE>; easywatch = <CODE>; ebaysdk = <CODE>; ec2instanceconnectcli = <CODE>; eccodes = <CODE>; ecdsa = <CODE>; ecoaliface = <CODE>; ecos = <CODE>; ecpy = <CODE>; ecs-logging = <CODE>; ed25519 = <CODE>; ed25519-blake2b = <CODE>; edalize = <CODE>; editables = <CODE>; editdistance = <CODE>; editdistance-s = <CODE>; editorconfig = <CODE>; edward = <CODE>; eebrightbox = <CODE>; effect = <CODE>; eggBuildHook = <CODE>; eggInstallHook = <CODE>; eggUnpackHook = <CODE>; eggdeps = <CODE>; eigenpy = <CODE>; einops = <CODE>; eiswarnung = <CODE>; elastic-apm = <CODE>; elasticsearch = <CODE>; elasticsearch-dsl = <CODE>; elasticsearchdsl = <CODE>; elegy = <CODE>; elementpath = <CODE>; elevate = <CODE>; elgato = <CODE>; eliot = <CODE>; eliqonline = <CODE>; elkm1-lib = <CODE>; elmax = <CODE>; elmax-api = <CODE>; email-validator = <CODE>; email_validator = <CODE>; emailthreads = <CODE>; embrace = <CODE>; emcee = <CODE>; emoji = <CODE>; empty-files = <CODE>; empy = <CODE>; emulated-roku = <CODE>; emv = <CODE>; enaml = <CODE>; enamlx = <CODE>; energyflip-client = <CODE>; energyflow = <CODE>; enhancements = <CODE>; enlighten = <CODE>; enocean = <CODE>; enrich = <CODE>; entrance = <CODE>; entrance-with-router-features = <CODE>; entry-points-txt = <CODE>; entrypoint2 = <CODE>; entrypoints = <CODE>; enturclient = <CODE>; enum-compat = <CODE>; enum34 = <CODE>; env-canada = <CODE>; environmental-override = <CODE>; environs = <CODE>; envisage = <CODE>; envoy-reader = <CODE>; envoy-utils = <CODE>; envs = <CODE>; enzyme = <CODE>; epc = <CODE>; ephem = <CODE>; ephemeral-port-reserve = <CODE>; epson-projector = <CODE>; eradicate = <CODE>; escapism = <CODE>; esprima = <CODE>; et_xmlfile = <CODE>; etcd = <CODE>; ete3 = <CODE>; etebase = <CODE>; etebase-server = <CODE>; etelemetry = <CODE>; eternalegypt = <CODE>; etesync = <CODE>; eth-abi = <CODE>; eth-account = <CODE>; eth-hash = <CODE>; eth-keyfile = <CODE>; eth-keys = <CODE>; eth-rlp = <CODE>; eth-typing = <CODE>; eth-utils = <CODE>; etils = <CODE>; etuples = <CODE>; ev3dev2 = <CODE>; evdev = <CODE>; eve = <CODE>; eventlet = <CODE>; events = <CODE>; evernote = <CODE>; evohome-async = <CODE>; evtx = <CODE>; ewmh = <CODE>; example-robot-data = <CODE>; exceptiongroup = <CODE>; exchangelib = <CODE>; exdown = <CODE>; execnet = <CODE>; executing = <CODE>; executor = <CODE>; exif = <CODE>; exifread = <CODE>; expects = <CODE>; expecttest = <CODE>; expiringdict = <CODE>; explorerscript = <CODE>; exrex = <CODE>; extractcode = <CODE>; extractcode-7z = <CODE>; extractcode-libarchive = <CODE>; extras = <CODE>; extruct = <CODE>; eyeD3 = <CODE>; ezdxf = <CODE>; ezyrb = <CODE>; f90nml = <CODE>; faadelays = <CODE>; fabulous = <CODE>; face = <CODE>; face-recognition = <CODE>; face-recognition-models = <CODE>; face_recognition = <CODE>; face_recognition_models = <CODE>; facebook-sdk = <CODE>; facedancer = <CODE>; factory_boy = <CODE>; faiss = <CODE>; fake-useragent = <CODE>; fake_factory = <CODE>; faker = <CODE>; fakeredis = <CODE>; falcon = <CODE>; faraday-agent-parameters-types = <CODE>; faraday-plugins = <CODE>; fastapi = <CODE>; fastapi-mail = <CODE>; fastavro = <CODE>; fastbencode = <CODE>; fastcache = <CODE>; fastcore = <CODE>; fastdiff = <CODE>; fastdtw = <CODE>; fastecdsa = <CODE>; fasteners = <CODE>; fastentrypoints = <CODE>; fastimport = <CODE>; fastjet = <CODE>; fastjsonschema = <CODE>; fastnlo_toolkit = <CODE>; fastnumbers = <CODE>; fastpair = <CODE>; fastparquet = <CODE>; fastpbkdf2 = <CODE>; fastprogress = <CODE>; fastrlock = <CODE>; fasttext = <CODE>; faulthandler = <CODE>; favicon = <CODE>; fb-re2 = <CODE>; fe25519 = <CODE>; feedgen = <CODE>; feedgenerator = <CODE>; feedparser = <CODE>; fenics = <CODE>; fetchPypi = { __functionArgs = <CODE>; __functor = <LAMBDA>; override = <CODE>; }; ffcv = <CODE>; ffmpeg-progress-yield = <CODE>; ffmpeg-python = <CODE>; fiblary3-fork = <CODE>; fido2 = <CODE>; fields = <CODE>; file-read-backwards = <CODE>; filebrowser_safe = <CODE>; filebytes = <CODE>; filecheck = <CODE>; filelock = <CODE>; filemagic = <CODE>; filetype = <CODE>; filterpy = <CODE>; finalfusion = <CODE>; findimports = <CODE>; findpython = <CODE>; fingerprints = <CODE>; finitude = <CODE>; fints = <CODE>; fiona = <CODE>; fipy = <CODE>; fire = <CODE>; fireflyalgorithm = <CODE>; firetv = <CODE>; first = <CODE>; fitbit = <CODE>; fivem-api = <CODE>; fixerio = <CODE>; fixtures = <CODE>; fjaraskupan = <CODE>; flake8 = <CODE>; flake8-blind-except = <CODE>; flake8-bugbear = <CODE>; flake8-debugger = <CODE>; flake8-docstrings = <CODE>; flake8-future-import = <CODE>; flake8-import-order = <CODE>; flake8-length = <CODE>; flake8-polyfill = <CODE>; flaky = <CODE>; flametree = <CODE>; flammkuchen = <CODE>; flashtext = <CODE>; flask = <CODE>; flask-admin = <CODE>; flask-api = <CODE>; flask-appbuilder = <CODE>; flask-autoindex = <CODE>; flask-babel = <CODE>; flask-babelex = <CODE>; flask-basicauth = <CODE>; flask-bcrypt = <CODE>; flask-bootstrap = <CODE>; flask-caching = <CODE>; flask-common = <CODE>; flask-compress = <CODE>; flask-cors = <CODE>; flask-gravatar = <CODE>; flask-httpauth = <CODE>; flask-jwt-extended = <CODE>; flask-limiter = <CODE>; flask-login = <CODE>; flask-mailman = <CODE>; flask-mongoengine = <CODE>; flask-openid = <CODE>; flask-paginate = <CODE>; flask-paranoid = <CODE>; flask-pymongo = <CODE>; flask-restful = <CODE>; flask-restplus = <CODE>; flask-restx = <CODE>; flask-reverse-proxy-fix = <CODE>; flask-seasurf = <CODE>; flask-security-too = <CODE>; flask-session = <CODE>; flask-silk = <CODE>; flask-socketio = <CODE>; flask-sockets = <CODE>; flask-sqlalchemy = <CODE>; flask-sslify = <CODE>; flask-swagger = <CODE>; flask-swagger-ui = <CODE>; flask-talisman = <CODE>; flask-testing = <CODE>; flask-versioned = <CODE>; flask-wtf = <CODE>; flask_assets = <CODE>; flask_elastic = <CODE>; flask_login = <CODE>; flask_mail = <CODE>; flask_marshmallow = <CODE>; flask_migrate = <CODE>; flask_principal = <CODE>; flask_script = <CODE>; flask_sqlalchemy = <CODE>; flask_testing = <CODE>; flask_wtf = <CODE>; flaskbabel = <CODE>; flatbuffers = <CODE>; flatdict = <CODE>; flatten-dict = <CODE>; flax = <CODE>; fleep = <CODE>; flexmock = <CODE>; flickrapi = <CODE>; flipr-api = <CODE>; flit = <CODE>; flit-core = <CODE>; flit-scm = <CODE>; flitBuildHook = <CODE>; flow-record = <CODE>; flower = <CODE>; flowlogs_reader = <CODE>; fluent-logger = <CODE>; flufl_bounce = <CODE>; flufl_i18n = <CODE>; flufl_lock = <CODE>; flux-led = <CODE>; flynt = <CODE>; fn = <CODE>; fnvhash = <CODE>; folium = <CODE>; fontforge = <CODE>; fontmake = <CODE>; fontmath = <CODE>; fontparts = <CODE>; fontpens = <CODE>; fonttools = <CODE>; foobot-async = <CODE>; foolscap = <CODE>; forbiddenfruit = <CODE>; fordpass = <CODE>; forecast-solar = <CODE>; formbox = <CODE>; fortiosapi = <CODE>; foundationdb51 = <CODE>; foundationdb52 = <CODE>; foundationdb60 = <CODE>; foundationdb61 = <CODE>; fountains = <CODE>; foxdot = <CODE>; fpdf = <CODE>; fpylll = <CODE>; fpyutils = <CODE>; fqdn = <CODE>; freebox-api = <CODE>; freetype-py = <CODE>; freezegun = <CODE>; frigidaire = <CODE>; frilouz = <CODE>; fritzconnection = <CODE>; fritzprofiles = <CODE>; frozendict = <CODE>; frozenlist = <CODE>; fs = <CODE>; fs-s3fs = <CODE>; fsspec = <CODE>; ftfy = <CODE>; ftputil = <CODE>; func-timeout = <CODE>; funcparserlib = <CODE>; funcsigs = <CODE>; functools32 = <CODE>; functorch = <CODE>; funcy = <CODE>; furl = <CODE>; furo = <CODE>; fuse = <CODE>; fusepy = <CODE>; future = <CODE>; future-fstrings = <CODE>; future-typing = <CODE>; fuzzyfinder = <CODE>; fuzzywuzzy = <CODE>; fvs = <CODE>; fx2 = <CODE>; g2pkk = <CODE>; galario = <CODE>; galois = <CODE>; gamble = <CODE>; gaphas = <CODE>; garages-amsterdam = <CODE>; garminconnect = <CODE>; garminconnect-aio = <CODE>; garminconnect-ha = <CODE>; gast = <CODE>; gatt = <CODE>; gattlib = <CODE>; gb-io = <CODE>; gbinder-python = <CODE>; gbulb = <CODE>; gcal-sync = <CODE>; gcovr = <CODE>; gcs-oauth2-boto-plugin = <CODE>; gcsfs = <CODE>; gdal = <CODE>; gdata = <CODE>; gdcm = <CODE>; gdown = <CODE>; gdtoolkit = <CODE>; ge25519 = <CODE>; geant4 = <CODE>; geeknote = <CODE>; gehomesdk = <CODE>; gekitchen = <CODE>; gemfileparser = <CODE>; genanki = <CODE>; generic = <CODE>; geniushub-client = <CODE>; genome-collector = <CODE>; genpy = <CODE>; genshi = <CODE>; gensim = <CODE>; gentools = <CODE>; genzshcomp = <CODE>; geoalchemy2 = <CODE>; geocachingapi = <CODE>; geographiclib = <CODE>; geoip2 = <CODE>; geojson = <CODE>; geojson-client = <CODE>; geomet = <CODE>; geometric = <CODE>; geopandas = <CODE>; geopy = <CODE>; georss-client = <CODE>; georss-generic-client = <CODE>; georss-ign-sismologia-client = <CODE>; georss-ingv-centro-nazionale-terremoti-client = <CODE>; georss-nrcan-earthquakes-client = <CODE>; georss-qld-bushfire-alert-client = <CODE>; georss-tfs-incidents-client = <CODE>; georss-wa-dfes-client = <CODE>; get-video-properties = <CODE>; getkey = <CODE>; getmac = <CODE>; gevent = <CODE>; gevent-socketio = <CODE>; gevent-websocket = <CODE>; geventhttpclient = <CODE>; gflags = <CODE>; ghapi = <CODE>; ghdiff = <CODE>; ghp-import = <CODE>; ghrepo-stats = <CODE>; gibberish-detector = <CODE>; gidgethub = <CODE>; gigalixir = <CODE>; gin-config = <CODE>; gios = <CODE>; gipc = <CODE>; gistyc = <CODE>; git-annex-adapter = <CODE>; git-filter-repo = <CODE>; git-revise = <CODE>; git-sweep = <CODE>; gitdb = <CODE>; gitdb2 = <CODE>; github-to-sqlite = <CODE>; github-webhook = <CODE>; github3_py = <CODE>; gitpython = <CODE>; glad = <CODE>; glances = <CODE>; glances-api = <CODE>; glasgow = <CODE>; glcontext = <CODE>; glean-parser = <CODE>; glean-sdk = <CODE>; glfw = <CODE>; glob2 = <CODE>; globre = <CODE>; globus-sdk = <CODE>; glom = <CODE>; glymur = <CODE>; glyphslib = <CODE>; gmpy = <CODE>; gmpy2 = <CODE>; gntp = <CODE>; gnureadline = <CODE>; goalzero = <CODE>; goobook = <CODE>; goocalendar = <CODE>; goodwe = <CODE>; google-api-core = <CODE>; google-api-python-client = <CODE>; google-apitools = <CODE>; google-auth = <CODE>; google-auth-httplib2 = <CODE>; google-auth-oauthlib = <CODE>; google-cloud-access-context-manager = <CODE>; google-cloud-appengine-logging = <CODE>; google-cloud-asset = <CODE>; google-cloud-audit-log = <CODE>; google-cloud-automl = <CODE>; google-cloud-bigquery = <CODE>; google-cloud-bigquery-datatransfer = <CODE>; google-cloud-bigquery-logging = <CODE>; google-cloud-bigquery-storage = <CODE>; google-cloud-bigtable = <CODE>; google-cloud-compute = <CODE>; google-cloud-container = <CODE>; google-cloud-core = <CODE>; google-cloud-datacatalog = <CODE>; google-cloud-dataproc = <CODE>; google-cloud-datastore = <CODE>; google-cloud-dlp = <CODE>; google-cloud-dns = <CODE>; google-cloud-error-reporting = <CODE>; google-cloud-firestore = <CODE>; google-cloud-iam = <CODE>; google-cloud-iam-logging = <CODE>; google-cloud-iot = <CODE>; google-cloud-kms = <CODE>; google-cloud-language = <CODE>; google-cloud-logging = <CODE>; google-cloud-monitoring = <CODE>; google-cloud-org-policy = <CODE>; google-cloud-os-config = <CODE>; google-cloud-pubsub = <CODE>; google-cloud-redis = <CODE>; google-cloud-resource-manager = <CODE>; google-cloud-runtimeconfig = <CODE>; google-cloud-secret-manager = <CODE>; google-cloud-securitycenter = <CODE>; google-cloud-spanner = <CODE>; google-cloud-speech = <CODE>; google-cloud-storage = <CODE>; google-cloud-tasks = <CODE>; google-cloud-testutils = <CODE>; google-cloud-texttospeech = <CODE>; google-cloud-trace = <CODE>; google-cloud-translate = <CODE>; google-cloud-videointelligence = <CODE>; google-cloud-vision = <CODE>; google-cloud-websecurityscanner = <CODE>; google-compute-engine = <CODE>; google-crc32c = <CODE>; google-i18n-address = <CODE>; google-nest-sdm = <CODE>; google-pasta = <CODE>; google-re2 = <CODE>; google-reauth = <CODE>; google-resumable-media = <CODE>; google_api_python_client = <CODE>; googleapis-common-protos = <CODE>; googleapis_common_protos = <CODE>; googlemaps = <CODE>; googletrans = <CODE>; gorilla = <CODE>; govee-ble = <CODE>; goveelights = <CODE>; gpapi = <CODE>; gpaw = <CODE>; gpgme = <CODE>; gphoto2 = <CODE>; gpiozero = <CODE>; gplaycli = <CODE>; gprof2dot = <CODE>; gps3 = <CODE>; gpsoauth = <CODE>; gpt-2-simple = <CODE>; gpustat = <CODE>; gpxpy = <CODE>; gpy = <CODE>; gpyopt = <CODE>; gql = <CODE>; gradient = <CODE>; gradient-utils = <CODE>; gradient_statsd = <CODE>; grammalecte = <CODE>; grandalf = <CODE>; graph-tool = <CODE>; grapheme = <CODE>; graphene = <CODE>; graphene-django = <CODE>; graphite-web = <CODE>; graphite_api = <CODE>; graphite_beacon = <CODE>; graphql-core = <CODE>; graphql-relay = <CODE>; graphql-server-core = <CODE>; graphql-subscription-manager = <CODE>; graphqlclient = <CODE>; graphtage = <CODE>; graphviz = <CODE>; grappelli_safe = <CODE>; graspologic = <CODE>; greatfet = <CODE>; greeclimate = <CODE>; green = <CODE>; greeneye-monitor = <CODE>; greenlet = <CODE>; gremlinpython = <CODE>; grequests = <CODE>; gridnet = <CODE>; griffe = <CODE>; grip = <CODE>; groestlcoin_hash = <CODE>; growattserver = <CODE>; grpc-google-iam-v1 = <CODE>; grpc_google_iam_v1 = <CODE>; grpcio = <CODE>; grpcio-gcp = <CODE>; grpcio-status = <CODE>; grpcio-tools = <CODE>; grpclib = <CODE>; gruut = <CODE>; gruut-ipa = <CODE>; gsd = <CODE>; gspread = <CODE>; gssapi = <CODE>; gst-python = <CODE>; gtfs-realtime-bindings = <CODE>; gtimelog = <CODE>; gtts = <CODE>; gtts-token = <CODE>; gudhi = <CODE>; guessit = <CODE>; guestfs = <CODE>; gumath = <CODE>; gunicorn = <CODE>; guppy3 = <CODE>; gurobipy = <CODE>; guzzle_sphinx_theme = <CODE>; gviz-api = <CODE>; gvm-tools = <CODE>; gym = <CODE>; gym-notices = <CODE>; gyp = <CODE>; h11 = <CODE>; h2 = <CODE>; h3 = <CODE>; h5netcdf = <CODE>; h5py = <CODE>; h5py-mpi = <CODE>; ha-av = <CODE>; ha-ffmpeg = <CODE>; ha-philipsjs = <CODE>; habanero = <CODE>; habitipy = <CODE>; hachoir = <CODE>; hacking = <CODE>; hahomematic = <CODE>; halo = <CODE>; halohome = <CODE>; handout = <CODE>; hangups = <CODE>; hap-python = <CODE>; hasPythonModule = <LAMBDA>; hass-nabucasa = <CODE>; hatasmota = <CODE>; hatch-fancy-pypi-readme = <CODE>; hatch-nodejs-version = <CODE>; hatch-vcs = <CODE>; hatchling = <CODE>; haversine = <CODE>; hawkauthlib = <CODE>; hbmqtt = <CODE>; hcloud = <CODE>; hcs_utils = <CODE>; hdate = <CODE>; hdbscan = <CODE>; hdfs = <CODE>; hdlparse = <CODE>; hdmedians = <CODE>; headerparser = <CODE>; heapdict = <CODE>; heatshrink2 = <CODE>; heatzypy = <CODE>; helpdev = <CODE>; helper = <CODE>; hepmc3 = <CODE>; hepunits = <CODE>; here-routing = <CODE>; here-transit = <CODE>; herepy = <CODE>; hetzner = <CODE>; heudiconv = <CODE>; hexbytes = <CODE>; hexdump = <CODE>; hg-commitsigs = <CODE>; hg-evolve = <CODE>; hg-git = <CODE>; hglib = <CODE>; hickle = <CODE>; hid = <CODE>; hidapi = <CODE>; hieroglyph = <CODE>; hijri-converter = <CODE>; hikvision = <CODE>; hiredis = <CODE>; hiro = <CODE>; hiyapyco = <CODE>; hjson = <CODE>; hkavr = <CODE>; hkdf = <CODE>; hlk-sw16 = <CODE>; hmmlearn = <CODE>; hocr-tools = <CODE>; hole = <CODE>; holidays = <CODE>; holoviews = <CODE>; home-assistant-bluetooth = <CODE>; homeassistant-pyozw = <CODE>; homeconnect = <CODE>; homematicip = <CODE>; homepluscontrol = <CODE>; hoomd-blue = <CODE>; hopcroftkarp = <CODE>; howdoi = <CODE>; hpack = <CODE>; hpccm = <CODE>; hs-dbus-signature = <CODE>; hsaudiotag3k = <CODE>; hsluv = <CODE>; hstspreload = <CODE>; html-sanitizer = <CODE>; html-text = <CODE>; html2text = <CODE>; html5-parser = <CODE>; html5lib = <CODE>; htmllaundry = <CODE>; htmlmin = <CODE>; httmock = <CODE>; http-ece = <CODE>; http-message-signatures = <CODE>; http-parser = <CODE>; http-sfv = <CODE>; httpagentparser = <CODE>; httpauth = <CODE>; httpbin = <CODE>; httpcore = <CODE>; httpie = <CODE>; httpie-ntlm = <CODE>; httplib2 = <CODE>; httpretty = <CODE>; httpserver = <CODE>; httpsig = <CODE>; httptools = <CODE>; httpx = <CODE>; httpx-ntlm = <CODE>; httpx-socks = <CODE>; huawei-lte-api = <CODE>; huey = <CODE>; hug = <CODE>; huggingface-hub = <CODE>; huisbaasje-client = <CODE>; humanfriendly = <CODE>; humanize = <CODE>; humblewx = <CODE>; hupper = <CODE>; huum = <CODE>; hvac = <CODE>; hvplot = <CODE>; hwi = <CODE>; hy = <CODE>; hydra = <CODE>; hydra-check = <CODE>; hydrawiser = <CODE>; hydrus-api = <CODE>; hypchat = <CODE>; hypercorn = <CODE>; hyperframe = <CODE>; hyperion-py = <CODE>; hyperkitty = <CODE>; hyperlink = <CODE>; hyperopt = <CODE>; hypothesis = <CODE>; hypothesis-auto = <CODE>; hypothesmith = <CODE>; hyppo = <CODE>; hyrule = <CODE>; i-pi = <CODE>; i2c-tools = <CODE>; i2csense = <CODE>; i3-py = <CODE>; i3ipc = <CODE>; iapws = <CODE>; iaqualink = <CODE>; ibeacon-ble = <CODE>; ibis = <CODE>; ibis-framework = <CODE>; ibm-cloud-sdk-core = <CODE>; ibm-watson = <CODE>; ical = <CODE>; icalendar = <CODE>; icecream = <CODE>; icmplib = <CODE>; icnsutil = <CODE>; icoextract = <CODE>; icontract = <CODE>; ics = <CODE>; idasen = <CODE>; identify = <CODE>; idna = <CODE>; idna-ssl = <CODE>; ifaddr = <CODE>; ifconfig-parser = <CODE>; ifcopenshell = <CODE>; ignite = <CODE>; igraph = <CODE>; ihatemoney = <CODE>; ijson = <CODE>; ilua = <CODE>; image-go-nord = <CODE>; image-match = <CODE>; imagecodecs-lite = <CODE>; imagecorruptions = <CODE>; imageio = <CODE>; imageio-ffmpeg = <CODE>; imagesize = <CODE>; imantics = <CODE>; imap-tools = <CODE>; imapclient = <CODE>; imaplib2 = <CODE>; imbalanced-learn = <CODE>; imdbpy = <CODE>; img2pdf = <CODE>; imgaug = <CODE>; imgsize = <CODE>; iminuit = <CODE>; immutabledict = <CODE>; immutables = <CODE>; impacket = <CODE>; importlab = <CODE>; importlib-metadata = <CODE>; importlib-resources = <CODE>; importmagic = <CODE>; imread = <CODE>; imutils = <CODE>; in-place = <CODE>; incomfort-client = <CODE>; incremental = <CODE>; infinity = <CODE>; inflect = <CODE>; inflection = <CODE>; influxdb = <CODE>; influxdb-client = <CODE>; influxgraph = <CODE>; inform = <CODE>; iniconfig = <CODE>; inifile = <CODE>; iniparse = <CODE>; injector = <CODE>; inkbird-ble = <CODE>; inkex = <CODE>; inotify = <CODE>; inotify-simple = <CODE>; inotifyrecursive = <CODE>; inquirer = <CODE>; inscriptis = <CODE>; insegel = <CODE>; installer = <CODE>; insteon-frontend-home-assistant = <CODE>; intake = <CODE>; intake-parquet = <CODE>; intbitset = <CODE>; intelhex = <CODE>; intellifire4py = <CODE>; intensity-normalization = <CODE>; internetarchive = <CODE>; interruptingcow = <CODE>; intervaltree = <CODE>; into-dbus-python = <CODE>; intreehooks = <CODE>; invisible-watermark = <CODE>; invocations = <CODE>; invoke = <CODE>; iocapture = <CODE>; iodata = <CODE>; ionhash = <CODE>; iotawattpy = <CODE>; iowait = <CODE>; ipaddr = <CODE>; ipaddress = <CODE>; ipdb = <CODE>; ipdbplugin = <CODE>; ipfshttpclient = <CODE>; iptools = <CODE>; ipwhl = <CODE>; ipy = <CODE>; ipydatawidgets = <CODE>; ipykernel = <CODE>; ipympl = <CODE>; ipyparallel = <CODE>; ipython = <CODE>; ipython-sql = <CODE>; ipython_genutils = <CODE>; ipyvue = <CODE>; ipyvuetify = <CODE>; ipywidgets = <CODE>; irc = <CODE>; ircrobots = <CODE>; ircstates = <CODE>; irctokens = <CODE>; isPy27 = <CODE>; isPy310 = <CODE>; isPy311 = <CODE>; isPy37 = <CODE>; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = <CODE>; isPyPy = <CODE>; isbnlib = <CODE>; islpy = <CODE>; ismartgate = <CODE>; iso-639 = <CODE>; iso3166 = <CODE>; iso4217 = <CODE>; iso8601 = <CODE>; isodate = <CODE>; isoduration = <CODE>; isort = <CODE>; isosurfaces = <CODE>; isounidecode = <CODE>; isoweek = <CODE>; itanium-demangler = <CODE>; itanium_demangler = <CODE>; itemadapter = <CODE>; itemdb = <CODE>; itemloaders = <CODE>; iterm2 = <CODE>; itsdangerous = <CODE>; itunespy = <CODE>; itypes = <CODE>; j2cli = <CODE>; jaconv = <CODE>; jaeger-client = <CODE>; jamo = <CODE>; janus = <CODE>; jaraco-context = <CODE>; jaraco-test = <CODE>; jaraco_classes = <CODE>; jaraco_collections = <CODE>; jaraco_functools = <CODE>; jaraco_itertools = <CODE>; jaraco_logging = <CODE>; jaraco_stream = <CODE>; jaraco_text = <CODE>; jarowinkler = <CODE>; javaobj-py3 = <CODE>; javaproperties = <CODE>; jax = <CODE>; jaxlib = <CODE>; jaxlib-bin = <CODE>; jaxlib-build = <CODE>; jaxlibWithCuda = <CODE>; jaxlibWithoutCuda = <CODE>; jc = <CODE>; jdatetime = <CODE>; jdcal = <CODE>; jedi = <CODE>; jedi-language-server = <CODE>; jeepney = <CODE>; jellyfin-apiclient-python = <CODE>; jellyfish = <CODE>; jenkins-job-builder = <CODE>; jenkinsapi = <CODE>; jieba = <CODE>; jinja2 = <CODE>; jinja2-git = <CODE>; jinja2-time = <CODE>; jinja2_pluralize = <CODE>; jinja2_time = <CODE>; jira = <CODE>; jmespath = <CODE>; jmp = <CODE>; joblib = <CODE>; johnnycanencrypt = <CODE>; josepy = <CODE>; journalwatch = <CODE>; jplephem = <CODE>; jproperties = <CODE>; jpylyzer = <CODE>; jq = <CODE>; js2py = <CODE>; jsbeautifier = <CODE>; jschema-to-python = <CODE>; jsmin = <CODE>; json-home-client = <CODE>; json-logging = <CODE>; json-merge-patch = <CODE>; json-rpc = <CODE>; json-schema-for-humans = <CODE>; json-stream = <CODE>; json-tricks = <CODE>; json5 = <CODE>; jsonconversion = <CODE>; jsondate = <CODE>; jsondiff = <CODE>; jsonfield = <CODE>; jsonlines = <CODE>; jsonmerge = <CODE>; jsonnet = <CODE>; jsonpatch = <CODE>; jsonpath = <CODE>; jsonpath-ng = <CODE>; jsonpath_rw = <CODE>; jsonpickle = <CODE>; jsonpointer = <CODE>; jsonref = <CODE>; jsonrpc-async = <CODE>; jsonrpc-base = <CODE>; jsonrpc-websocket = <CODE>; jsonrpclib-pelix = <CODE>; jsons = <CODE>; jsonschema = <CODE>; jsonschema-spec = <CODE>; jsonschema_3 = <CODE>; jsonstreams = <CODE>; jstyleson = <CODE>; jug = <CODE>; junit-xml = <CODE>; junitparser = <CODE>; junos-eznc = <CODE>; jupyter = <CODE>; jupyter-book = <CODE>; jupyter-c-kernel = <CODE>; jupyter-cache = <CODE>; jupyter-client = <CODE>; jupyter-lsp = <CODE>; jupyter-packaging = <CODE>; jupyter-repo2docker = <CODE>; jupyter-server-mathjax = <CODE>; jupyter-sphinx = <CODE>; jupyter-telemetry = <CODE>; jupyter_client = <CODE>; jupyter_console = <CODE>; jupyter_core = <CODE>; jupyter_server = <CODE>; jupyterhub = <CODE>; jupyterhub-ldapauthenticator = <CODE>; jupyterhub-systemdspawner = <CODE>; jupyterhub-tmpauthenticator = <CODE>; jupyterlab = <CODE>; jupyterlab-git = <CODE>; jupyterlab-lsp = <CODE>; jupyterlab-pygments = <CODE>; jupyterlab-widgets = <CODE>; jupyterlab_launcher = <CODE>; jupyterlab_server = <CODE>; jupytext = <CODE>; justbackoff = <CODE>; justbases = <CODE>; justbytes = <CODE>; justnimbus = <CODE>; jwcrypto = <CODE>; jxmlease = <CODE>; k5test = <CODE>; kaa-base = <CODE>; kaa-metadata = <CODE>; kafka-python = <CODE>; kaggle = <CODE>; kaitaistruct = <CODE>; kaldi-active-grammar = <CODE>; kanidm = <CODE>; kaptan = <CODE>; karton-asciimagic = <CODE>; karton-autoit-ripper = <CODE>; karton-classifier = <CODE>; karton-config-extractor = <CODE>; karton-core = <CODE>; karton-dashboard = <CODE>; karton-mwdb-reporter = <CODE>; karton-yaramatcher = <CODE>; kazoo = <CODE>; kbcstorage = <CODE>; kconfiglib = <CODE>; keep = <CODE>; keepalive = <CODE>; keepkey = <CODE>; keepkey_agent = <CODE>; kegtron-ble = <CODE>; keras = <CODE>; keras-applications = <CODE>; keras-preprocessing = <CODE>; kerberos = <CODE>; keyboard = <CODE>; keyring = <CODE>; keyrings-alt = <CODE>; keyrings-cryptfile = <CODE>; keyrings-google-artifactregistry-auth = <CODE>; keystone-engine = <CODE>; keystoneauth1 = <CODE>; keyutils = <CODE>; kicad = <CODE>; kinparse = <CODE>; kiss-headers = <CODE>; kitchen = <CODE>; kivy = <CODE>; kivy-garden = <CODE>; kiwisolver = <CODE>; klaus = <CODE>; klein = <CODE>; kmapper = <CODE>; kml2geojson = <CODE>; kmsxx = <CODE>; knack = <CODE>; kombu = <CODE>; konnected = <CODE>; korean-lunar-calendar = <CODE>; krakenex = <CODE>; kubernetes = <CODE>; labelbox = <CODE>; labgrid = <CODE>; labmath = <CODE>; lammps-cython = <CODE>; langcodes = <CODE>; langdetect = <CODE>; language-data = <CODE>; language-tags = <CODE>; lark = <CODE>; latexcodec = <CODE>; latexify-py = <CODE>; launchpadlib = <CODE>; laundrify-aio = <CODE>; lazr-restfulclient = <CODE>; lazr-uri = <CODE>; lazr_config = <CODE>; lazr_delegates = <CODE>; lazy = <CODE>; lazy-object-proxy = <CODE>; lazy_import = <CODE>; lc7001 = <CODE>; lcov_cobertura = <CODE>; ldap = <CODE>; ldap3 = <CODE>; ldapdomaindump = <CODE>; ldappool = <CODE>; ldaptor = <CODE>; leather = <CODE>; leb128 = <CODE>; led-ble = <CODE>; ledger = <CODE>; ledger_agent = <CODE>; ledgerblue = <CODE>; ledgerwallet = <CODE>; lektor = <CODE>; leveldb = <CODE>; levenshtein = <CODE>; lexid = <CODE>; lhapdf = <CODE>; lib = <CODE>; libagent = <CODE>; libais = <CODE>; libarchive-c = <CODE>; libarcus = <CODE>; libasyncns = <CODE>; libcloud = <CODE>; libcst = <CODE>; libevdev = <CODE>; libfdt = <CODE>; libgpiod = <CODE>; libgpuarray = <CODE>; libiio = <CODE>; libkeepass = <CODE>; liblarch = <CODE>; liblzfse = <CODE>; libmodulemd = <CODE>; libmr = <CODE>; libnacl = <CODE>; libpurecool = <CODE>; libpwquality = <CODE>; libpyfoscam = <CODE>; libpyvivotek = <CODE>; libredwg = <CODE>; librepo = <CODE>; librosa = <CODE>; librouteros = <CODE>; libsass = <CODE>; libsavitar = <CODE>; libselinux = <CODE>; libsixel = <CODE>; libsoundtouch = <CODE>; libthumbor = <CODE>; libtmux = <CODE>; libtorrent-rasterbar = <CODE>; libusb1 = <CODE>; libusbsio = <CODE>; libversion = <CODE>; libvirt = <CODE>; libxml2 = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "--with-lto" "--enable-loadable-sqlite-extensions" "--with-openssl=/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" "--with-tzpath=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-3.10.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/mimetypes.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = <CODE>; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "--with-lto" "--enable-loadable-sqlite-extensions" "--with-openssl=/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" "--with-tzpath=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-3.10.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/mimetypes.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = <CODE>; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = <CODE>; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = <CODE>; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "3.10.9"; withPackages = <CODE>; }; pythonModule = «repeated»; pythonOlder = <LAMBDA>; pythonPath = <CODE>; pythonVersion = "3.10"; requiredPythonModules = <CODE>; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonModule = «repeated»; pythonOlder = <LAMBDA>; pythonPath = <CODE>; pythonVersion = "3.10"; requiredPythonModules = <CODE>; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.10.9"; withPackages = <CODE>; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--exec-prefix=/02qcpld1y6xhs5gz9bchpxaw0xdhmsp5dv88lh25r2ss44kh8dxz" "--disable-static" "--enable-shared" "--without-icu" "--with-python" "PYTHON=/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = <CODE>; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "pythondir=\"/16f85nn0fvs5r3pq0vgpg1jy8p59db0fs7kglwjp9dwdkygd4vbk/lib/python3.10/site-packages\"" "pyexecdir=\"/16f85nn0fvs5r3pq0vgpg1jy8p59db0fs7kglwjp9dwdkygd4vbk/lib/python3.10/site-packages\"" ]; mesonFlags = [ ]; name = "libxml2-2.10.3"; nativeBuildInputs = [ «repeated» «repeated» ]; outputMan = "bin"; outputs = [ "bin" "dev" "out" "doc" "py" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/libxml2/utf8-xmlErrorFuncHandler.patch ]; pname = "libxml2"; postFixup = "moveToOutput bin/xml2-config \"$dev\"\nmoveToOutput lib/xml2Conf.sh \"$dev\"\n"; preCheck = [ ]; preConfigure = "MACOSX_DEPLOYMENT_TARGET=10.16\n"; preInstall = "substituteInPlace python/libxml2mod.la --replace \"$dev/lib/python3.10/site-packages\" \"$py/lib/python3.10/site-packages\"\n"; propagatedBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/81gwh57vnrm6qpw3gxmdmrjsp26dxi7p-find-xml-catalogs.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/81gwh57vnrm6qpw3gxmdmrjsp26dxi7p-find-xml-catalogs.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/f0zxxqpkd3xvaw6qjvgsri9ffl94b7hd-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libxml2-2.10.3.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "XSzD14vsPb4hKp1/pimtolp9qSivQyyTBg/1wX7iipw="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnome/sources/libxml2/2.10/libxml2-2.10.3.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libxml2-2.10.3.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/h85zjmnyjivcqq8zgl2l71cq8f1q1sdb-libxml2-2.10.3.tar.xz"; outputHash = "XSzD14vsPb4hKp1/pimtolp9qSivQyyTBg/1wX7iipw="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnome/sources/libxml2/2.10/libxml2-2.10.3.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnome/sources/libxml2/2.10/libxml2-2.10.3.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.10.3"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "libxml2-2.10.3"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/dkwz8743m4s52lgpsyzqiv3zc1xp3xa2-libxml2-2.10.3-py"; outputMan = "bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; pythonSupport = true; requiredPythonModules = <CODE>; updateScript = <CODE>; version = "2.10.3"; }; patches = «repeated»; pname = "libxml2"; postFixup = "moveToOutput bin/xml2-config \"$dev\"\nmoveToOutput lib/xml2Conf.sh \"$dev\"\n"; preCheck = [ ]; preConfigure = "MACOSX_DEPLOYMENT_TARGET=10.16\n"; preInstall = "substituteInPlace python/libxml2mod.la --replace \"$dev/lib/python3.10/site-packages\" \"$py/lib/python3.10/site-packages\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; py = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; pythonSupport = true; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "2.10.3"; }; libxslt = <CODE>; license-expression = <CODE>; lief = <CODE>; life360 = <CODE>; lightgbm = <CODE>; lightning = <CODE>; lightparam = <CODE>; lightwave = <CODE>; lightwave2 = <CODE>; lima = <CODE>; limiter = <CODE>; limitlessled = <CODE>; limits = <CODE>; limnoria = <CODE>; line_profiler = <CODE>; linecache2 = <CODE>; lingua = <CODE>; linkify-it-py = <CODE>; linode = <CODE>; linode-api = <CODE>; linuxfd = <CODE>; liquidctl = <CODE>; lirc = <CODE>; littleutils = <CODE>; livelossplot = <CODE>; livereload = <CODE>; livestreamer = <CODE>; livestreamer-curses = <CODE>; lizard = <CODE>; llfuse = <CODE>; llvmlite = <CODE>; lmdb = <CODE>; lml = <CODE>; lmnotify = <CODE>; lmtpd = <CODE>; loca = <CODE>; localimport = <CODE>; localstack = <CODE>; localstack-client = <CODE>; localstack-ext = <CODE>; localzone = <CODE>; locationsharinglib = <CODE>; locket = <CODE>; lockfile = <CODE>; log-symbols = <CODE>; logfury = <CODE>; logging-journald = <CODE>; logi-circle = <CODE>; logical-unification = <CODE>; logilab-common = <CODE>; logilab-constraint = <CODE>; logilab_astng = <CODE>; logilab_common = <CODE>; logster = <CODE>; loguru = <CODE>; logutils = <CODE>; logzero = <CODE>; lomond = <CODE>; loo-py = <CODE>; loopy = <CODE>; losant-rest = <CODE>; lrcalc-python = <CODE>; lru-dict = <CODE>; lsassy = <CODE>; luddite = <CODE>; ludios_wpull = <CODE>; luftdaten = <CODE>; luhn = <CODE>; lupa = <CODE>; lupupy = <CODE>; luxor = <CODE>; luxtronik = <CODE>; lxmf = <CODE>; lxml = <CODE>; lyricwikia = <CODE>; lz4 = <CODE>; lzstring = <CODE>; m2crypto = <CODE>; m2r = <CODE>; m3u8 = <CODE>; mac-vendor-lookup = <CODE>; mac_alias = <CODE>; macfsevents = <CODE>; macropy = <CODE>; maestral = <CODE>; magic = <CODE>; magic-wormhole = <CODE>; magic-wormhole-mailbox-server = <CODE>; magic-wormhole-transit-relay = <CODE>; magicgui = <CODE>; mahotas = <CODE>; mail-parser = <CODE>; mailcap-fix = <CODE>; mailchecker = <CODE>; mailchimp = <CODE>; mailman = <CODE>; mailman-hyperkitty = <CODE>; mailman-web = <CODE>; mailmanclient = <CODE>; mailsuite = <CODE>; makePythonHook = <CODE>; makePythonPath = <CODE>; makefun = <CODE>; malduck = <CODE>; managesieve = <CODE>; manhole = <CODE>; manifestparser = <CODE>; manimpango = <CODE>; manticore = <CODE>; manuel = <CODE>; mapbox = <CODE>; mapbox-earcut = <CODE>; mariadb = <CODE>; marisa = <CODE>; marisa-trie = <CODE>; markdown = <CODE>; markdown-include = <CODE>; markdown-it-py = <CODE>; markdown-macros = <CODE>; markdown2 = <CODE>; markdownify = <CODE>; markdownsuperscript = <CODE>; markerlib = <CODE>; markups = <CODE>; markupsafe = <CODE>; marshmallow = <CODE>; marshmallow-dataclass = <CODE>; marshmallow-enum = <CODE>; marshmallow-oneofschema = <CODE>; marshmallow-polyfield = <CODE>; marshmallow-sqlalchemy = <CODE>; mask-rcnn = <CODE>; masky = <CODE>; mastodon-py = <CODE>; mat2 = <CODE>; matchpy = <CODE>; mathlibtools = <CODE>; matlink-gpapi = <CODE>; matplotlib = <CODE>; matplotlib-inline = <CODE>; matrix-api-async = <CODE>; matrix-client = <CODE>; matrix-common = <CODE>; matrix-nio = <CODE>; mattermostdriver = <CODE>; mautrix = <CODE>; mautrix-appservice = <CODE>; maxcube-api = <CODE>; maxminddb = <CODE>; maya = <CODE>; mayavi = <CODE>; mbddns = <CODE>; mccabe = <CODE>; mcstatus = <CODE>; md-toc = <CODE>; md2gemini = <CODE>; mdformat = <CODE>; mdit-py-plugins = <CODE>; mdurl = <CODE>; mdutils = <CODE>; mdx-truly-sane-lists = <CODE>; measurement = <CODE>; meater-python = <CODE>; mecab-python3 = <CODE>; mechanicalsoup = <CODE>; mechanize = <CODE>; mediafile = <CODE>; mediapy = <CODE>; meilisearch = <CODE>; meinheld = <CODE>; meld3 = <CODE>; memcached = <CODE>; memory-allocator = <CODE>; memory_profiler = <CODE>; mercantile = <CODE>; mercurial = <CODE>; mergedb = <CODE>; mergedeep = <CODE>; mergedict = <CODE>; merkletools = <CODE>; meross-iot = <CODE>; mesa = <CODE>; meshio = <CODE>; meshlabxml = <CODE>; meshtastic = <CODE>; meson = <CODE>; meson-python = <CODE>; mesonpep517 = <CODE>; messagebird = <CODE>; metakernel = <CODE>; metar = <CODE>; meteoalertapi = <CODE>; meteocalc = <CODE>; meteofrance-api = <CODE>; mezzanine = <CODE>; mf2py = <CODE>; micawber = <CODE>; micloud = <CODE>; microdata = <CODE>; midiutil = <CODE>; mido = <CODE>; migen = <CODE>; milc = <CODE>; milksnake = <CODE>; mill-local = <CODE>; millheater = <CODE>; minexr = <CODE>; miniaudio = <CODE>; minidb = <CODE>; minidump = <CODE>; minikanren = <CODE>; minikerberos = <CODE>; minimock = <CODE>; mininet-python = <CODE>; minio = <CODE>; miniupnpc = <CODE>; misaka = <CODE>; misoc = <CODE>; mistletoe = <CODE>; mistune = <CODE>; mistune_0_8 = <CODE>; mistune_2_0 = <CODE>; mitmproxy = <CODE>; mitmproxy-wireguard = <CODE>; mitogen = <CODE>; mixpanel = <CODE>; mizani = <CODE>; mkdocs = <CODE>; mkdocs-autorefs = <CODE>; mkdocs-drawio-exporter = <CODE>; mkdocs-exclude = <CODE>; mkdocs-gitlab = <CODE>; mkdocs-jupyter = <CODE>; mkdocs-macros = <CODE>; mkdocs-material = <CODE>; mkdocs-material-extensions = <CODE>; mkdocs-minify = <CODE>; mkdocs-redirects = <CODE>; mkdocs-swagger-ui-tag = <CODE>; mkdocstrings = <CODE>; mkdocstrings-python = <CODE>; mkl-service = <CODE>; ml-collections = <CODE>; mlflow = <CODE>; mlrose = <CODE>; mlt = <CODE>; mlxtend = <CODE>; mmh3 = <CODE>; mmpython = <CODE>; mne-python = <CODE>; mnemonic = <CODE>; mnist = <CODE>; moat-ble = <CODE>; mock = <CODE>; mock-open = <CODE>; mock-services = <CODE>; mocket = <CODE>; mockito = <CODE>; mockupdb = <CODE>; modeled = <CODE>; moderngl = <CODE>; moderngl-window = <CODE>; modestmaps = <CODE>; mohawk = <CODE>; moku = <CODE>; monai = <CODE>; monero = <CODE>; mongodict = <CODE>; mongoengine = <CODE>; mongomock = <CODE>; monkeyhex = <CODE>; monosat = <CODE>; monotonic = <CODE>; monty = <CODE>; moonraker-api = <CODE>; more-itertools = <CODE>; more-properties = <CODE>; moretools = <CODE>; morphys = <CODE>; mortgage = <CODE>; motionblinds = <CODE>; motioneye-client = <CODE>; moto = <CODE>; motor = <CODE>; mouseinfo = <CODE>; moviepy = <CODE>; mox = <CODE>; mox3 = <CODE>; mpd2 = <CODE>; mpi4py = <CODE>; mpldatacursor = <CODE>; mplfinance = <CODE>; mplleaflet = <CODE>; mpmath = <CODE>; mpv = <CODE>; mpyq = <CODE>; mrkd = <CODE>; ms-active-directory = <CODE>; ms-cv = <CODE>; msal = <CODE>; msal-extensions = <CODE>; msgpack = <CODE>; msgpack-numpy = <CODE>; msgraph-core = <CODE>; msgspec = <CODE>; msldap = <CODE>; msoffcrypto-tool = <CODE>; msrest = <CODE>; msrestazure = <CODE>; mss = <CODE>; mt-940 = <CODE>; mujson = <CODE>; mullvad-api = <CODE>; mulpyplexer = <CODE>; multi_key_dict = <CODE>; multidict = <CODE>; multimethod = <CODE>; multipart = <CODE>; multipledispatch = <CODE>; multiprocess = <CODE>; multiset = <CODE>; multitasking = <CODE>; munch = <CODE>; munkres = <CODE>; murmurhash = <CODE>; musicbrainzngs = <CODE>; mutag = <CODE>; mutagen = <CODE>; mutatormath = <CODE>; mutesync = <CODE>; mutf8 = <CODE>; mutmut = <CODE>; mwclient = <CODE>; mwdblib = <CODE>; mwoauth = <CODE>; mwparserfromhell = <CODE>; mxnet = <CODE>; myfitnesspal = <CODE>; mygpoclient = <CODE>; myhdl = <CODE>; myhome = <CODE>; myjwt = <CODE>; mypy = <CODE>; mypy-boto3-builder = <CODE>; mypy-boto3-s3 = <CODE>; mypy-extensions = <CODE>; mypy-protobuf = <CODE>; mysql-connector = <CODE>; mysqlclient = <CODE>; myst-docutils = <CODE>; myst-nb = <CODE>; myst-parser = <CODE>; nad-receiver = <CODE>; nagiosplugin = <CODE>; name-that-hash = <CODE>; namedlist = <CODE>; nameparser = <CODE>; names = <CODE>; nampa = <CODE>; nanoleaf = <CODE>; nanomsg-python = <CODE>; nanotime = <CODE>; napalm = <CODE>; napalm-hp-procurve = <CODE>; napari = <CODE>; napari-console = <CODE>; napari-npe2 = <CODE>; napari-plugin-engine = <CODE>; napari-svg = <CODE>; nasdaq-data-link = <CODE>; nats-py = <CODE>; nats-python = <CODE>; natsort = <CODE>; naturalsort = <CODE>; nbclassic = <CODE>; nbclient = <CODE>; nbconflux = <CODE>; nbconvert = <CODE>; nbdime = <CODE>; nbformat = <CODE>; nbmerge = <CODE>; nbsmoke = <CODE>; nbsphinx = <CODE>; nbval = <CODE>; nbxmpp = <CODE>; nc-dnsapi = <CODE>; ncclient = <CODE>; nclib = <CODE>; ndg-httpsclient = <CODE>; ndjson = <CODE>; ndms2-client = <CODE>; ndspy = <CODE>; ndtypes = <CODE>; nengo = <CODE>; neo = <CODE>; neo4j = <CODE>; nessclient = <CODE>; nest-asyncio = <CODE>; nested-lookup = <CODE>; nestedtext = <CODE>; net2grid = <CODE>; netaddr = <CODE>; netcdf4 = <CODE>; netdata = <CODE>; netdisco = <CODE>; netifaces = <CODE>; netio = <CODE>; netmap = <CODE>; netmiko = <CODE>; nettigo-air-monitor = <CODE>; netutils = <CODE>; networkx = <CODE>; neuron = <CODE>; neuron-mpi = <CODE>; neuronpy = <CODE>; nevow = <CODE>; newScope = <CODE>; newversion = <CODE>; nexia = <CODE>; nextcloudmonitor = <CODE>; nextcord = <CODE>; nextdns = <CODE>; nftables = <CODE>; nghttp2 = <CODE>; niaaml = <CODE>; niaarm = <CODE>; niapy = <CODE>; nibabel = <CODE>; nibe = <CODE>; nidaqmx = <CODE>; niko-home-control = <CODE>; nilearn = <CODE>; niluclient = <CODE>; nimfa = <CODE>; nine = <CODE>; nipy = <CODE>; nipype = <CODE>; nitime = <CODE>; nitpick = <CODE>; nitransforms = <CODE>; nix-kernel = <CODE>; nix-prefetch-github = <CODE>; nixpkgs = <CODE>; nixpkgs-pytools = <CODE>; nkdfu = <CODE>; nltk = <CODE>; nmapthon2 = <CODE>; nnpdf = <CODE>; nocasedict = <CODE>; nocaselist = <CODE>; node-semver = <CODE>; nodeenv = <CODE>; nodepy-runtime = <CODE>; noise = <CODE>; noiseprotocol = <CODE>; nomadnet = <CODE>; normality = <CODE>; nose = <CODE>; nose-cov = <CODE>; nose-cover3 = <CODE>; nose-cprof = <CODE>; nose-exclude = <CODE>; nose-pattern-exclude = <CODE>; nose-randomly = <CODE>; nose-timer = <CODE>; nose2 = <CODE>; nose_progressive = <CODE>; nose_warnings_filters = <CODE>; nosejs = <CODE>; nosexcover = <CODE>; notebook = <CODE>; notebook-shim = <CODE>; notedown = <CODE>; notifications-python-client = <CODE>; notify-events = <CODE>; notify-py = <CODE>; notify2 = <CODE>; notifymuch = <CODE>; notmuch = <CODE>; notmuch2 = <CODE>; nototools = <CODE>; notus-scanner = <CODE>; nplusone = <CODE>; npyscreen = <CODE>; nsapi = <CODE>; nsz = <CODE>; ntc-templates = <CODE>; ntlm-auth = <CODE>; ntplib = <CODE>; nulltype = <CODE>; num2words = <CODE>; numba = <CODE>; numba-scipy = <CODE>; numbaWithCuda = <CODE>; numcodecs = <CODE>; numdifftools = <CODE>; numericalunits = <CODE>; numexpr = <CODE>; numpy = <CODE>; numpy-stl = <CODE>; numpydoc = <CODE>; numpyro = <CODE>; nunavut = <CODE>; nutils = <CODE>; nvchecker = <CODE>; nvidia-ml-py = <CODE>; nwdiag = <CODE>; nxt-python = <CODE>; oasatelematics = <CODE>; oath = <CODE>; oauth = <CODE>; oauth2 = <CODE>; oauth2client = <CODE>; oauthenticator = <CODE>; oauthlib = <CODE>; obfsproxy = <CODE>; objax = <CODE>; objgraph = <CODE>; obspy = <CODE>; oci = <CODE>; ocifs = <CODE>; ocrmypdf = <CODE>; od = <CODE>; odfpy = <CODE>; oemthermostat = <CODE>; offtrac = <CODE>; ofxclient = <CODE>; ofxhome = <CODE>; ofxparse = <CODE>; ofxtools = <CODE>; olefile = <CODE>; oletools = <CODE>; omegaconf = <CODE>; omnikinverter = <CODE>; omnilogic = <CODE>; ondilo = <CODE>; onetimepad = <CODE>; onetimepass = <CODE>; onkyo-eiscp = <CODE>; online-judge-api-client = <CODE>; online-judge-tools = <CODE>; onlykey-solo-python = <CODE>; onnx = <CODE>; onnxconverter-common = <CODE>; onnxruntime = <CODE>; onvif-zeep-async = <CODE>; oocsi = <CODE>; open-garage = <CODE>; open-meteo = <CODE>; openai = <CODE>; openai-whisper = <CODE>; openant = <CODE>; openapi-core = <CODE>; openapi-schema-validator = <CODE>; openapi-spec-validator = <CODE>; openbabel-bindings = <CODE>; opencensus = <CODE>; opencv3 = <CODE>; opencv4 = <CODE>; openerz-api = <CODE>; openevsewifi = <CODE>; openhomedevice = <CODE>; openidc-client = <CODE>; openmm = <CODE>; openpaperwork-core = <CODE>; openpaperwork-gtk = <CODE>; openpyxl = <CODE>; openrazer = <CODE>; openrazer-daemon = <CODE>; openrouteservice = <CODE>; opensensemap-api = <CODE>; opensfm = <CODE>; openshift = <CODE>; opensimplex = <CODE>; openstackdocstheme = <CODE>; openstacksdk = <CODE>; openstep-plist = <CODE>; opentimestamps = <CODE>; opentracing = <CODE>; openturns = <CODE>; openvino = <CODE>; openwebifpy = <CODE>; openwrt-luci-rpc = <CODE>; openwrt-ubus-rpc = <CODE>; opsdroid_get_image_size = <CODE>; opt-einsum = <CODE>; optax = <CODE>; optuna = <CODE>; opuslib = <CODE>; opytimark = <CODE>; oralb-ble = <CODE>; ordered-set = <CODE>; ordereddict = <CODE>; orderedmultidict = <CODE>; orderedset = <CODE>; orjson = <CODE>; orm = <CODE>; ormar = <CODE>; ortools = <CODE>; orvibo = <CODE>; os-service-types = <CODE>; osc = <CODE>; osc-lib = <CODE>; oscpy = <CODE>; oscrypto = <CODE>; oset = <CODE>; oslo-concurrency = <CODE>; oslo-config = <CODE>; oslo-context = <CODE>; oslo-db = <CODE>; oslo-i18n = <CODE>; oslo-log = <CODE>; oslo-serialization = <CODE>; oslo-utils = <CODE>; oslotest = <CODE>; osmnx = <CODE>; osmpythontools = <CODE>; ospd = <CODE>; osqp = <CODE>; oss2 = <CODE>; ossfs = <CODE>; outcome = <CODE>; overly = <CODE>; overpy = <CODE>; override = <CODE>; overrideDerivation = <CODE>; overrideScope = <CODE>; ovh = <CODE>; ovmfvartool = <CODE>; ovoenergy = <CODE>; owslib = <CODE>; oyaml = <CODE>; p1monitor = <CODE>; pa-ringbuffer = <CODE>; packages = <CODE>; packageurl-python = <CODE>; packaging = <CODE>; packbits = <CODE>; packet-python = <CODE>; pad4pi = <CODE>; pafy = <CODE>; pagelabels = <CODE>; paho-mqtt = <CODE>; palace = <CODE>; palettable = <CODE>; pallets-sphinx-themes = <CODE>; pam = <CODE>; pamela = <CODE>; pamqp = <CODE>; panacotta = <CODE>; panasonic-viera = <CODE>; pandas = <CODE>; pandas-datareader = <CODE>; pandas-stubs = <CODE>; pandoc-attributes = <CODE>; pandoc-xnos = <CODE>; pandocfilters = <CODE>; panel = <CODE>; panflute = <CODE>; papermill = <CODE>; paperwork-backend = <CODE>; paperwork-shell = <CODE>; papis = <CODE>; papis-python-rofi = <CODE>; param = <CODE>; parameter-expansion-patched = <CODE>; parameterized = <CODE>; paramiko = <CODE>; paramz = <CODE>; paranoid-crypto = <CODE>; parfive = <CODE>; parquet = <CODE>; parse = <CODE>; parse-type = <CODE>; parsedatetime = <CODE>; parsedmarc = <CODE>; parsel = <CODE>; parsimonious = <CODE>; parsley = <CODE>; parso = <CODE>; parsy = <CODE>; partd = <CODE>; particle = <CODE>; parts = <CODE>; parver = <CODE>; passlib = <CODE>; paste = <CODE>; pastedeploy = <CODE>; pastel = <CODE>; pastescript = <CODE>; patator = <CODE>; patch = <CODE>; patch-ng = <CODE>; path = <CODE>; path-and-address = <CODE>; pathable = <CODE>; pathlib = <CODE>; pathlib2 = <CODE>; pathos = <CODE>; pathpy = <CODE>; pathspec = <CODE>; pathtools = <CODE>; pathvalidate = <CODE>; pathy = <CODE>; patiencediff = <CODE>; patool = <CODE>; patrowl4py = <CODE>; patsy = <CODE>; paver = <CODE>; paypalrestsdk = <CODE>; pbkdf2 = <CODE>; pbr = <CODE>; pc-ble-driver-py = <CODE>; pcapy-ng = <CODE>; pcodedmp = <CODE>; pcpp = <CODE>; pdf2image = <CODE>; pdfkit = <CODE>; pdfminer = <CODE>; pdfminer-six = <CODE>; pdfposter = <CODE>; pdfrw = <CODE>; pdftotext = <CODE>; pdfx = <CODE>; pdm-pep517 = <CODE>; pdoc = <CODE>; pdoc3 = <CODE>; pdunehd = <CODE>; peaqevcore = <CODE>; pebble = <CODE>; pecan = <CODE>; peco = <CODE>; peewee = <CODE>; pefile = <CODE>; pelican = <CODE>; pencompy = <CODE>; pendulum = <CODE>; pep257 = <CODE>; pep440 = <CODE>; pep517 = <CODE>; pep8 = <CODE>; pep8-naming = <CODE>; peppercorn = <CODE>; percol = <CODE>; perfplot = <CODE>; periodictable = <CODE>; persim = <CODE>; persistent = <CODE>; persisting-theory = <CODE>; pescea = <CODE>; pex = <CODE>; pexif = <CODE>; pexpect = <CODE>; pg8000 = <CODE>; pgcli = <CODE>; pglast = <CODE>; pgpdump = <CODE>; pgpy = <CODE>; pgsanity = <CODE>; pgspecial = <CODE>; phe = <CODE>; phik = <CODE>; phone-modem = <CODE>; phonemizer = <CODE>; phonenumbers = <CODE>; phonopy = <CODE>; phpserialize = <CODE>; phx-class-registry = <CODE>; pi1wire = <CODE>; piccata = <CODE>; piccolo-theme = <CODE>; pick = <CODE>; pickleshare = <CODE>; picobox = <CODE>; picos = <CODE>; pid = <CODE>; piep = <CODE>; piexif = <CODE>; pijuice = <CODE>; pika = <CODE>; pika-pool = <CODE>; pikepdf = <CODE>; pilkit = <CODE>; pillow = <CODE>; pillow-simd = <CODE>; pillowfight = <CODE>; pims = <CODE>; pinboard = <CODE>; pinocchio = <CODE>; pint = <CODE>; pint-pandas = <CODE>; pip = <CODE>; pip-api = <CODE>; pip-requirements-parser = <CODE>; pip-tools = <CODE>; pipBuildHook = <CODE>; pipInstallHook = <CODE>; pipdate = <CODE>; pipdeptree = <CODE>; pipenv-poetry-migrate = <CODE>; pipx = <CODE>; pivy = <CODE>; pixcat = <CODE>; pixelmatch = <CODE>; pkce = <CODE>; pkgconfig = <CODE>; pkginfo = <CODE>; pkginfo2 = <CODE>; pkgs = <CODE>; pkuseg = <CODE>; pkutils = <CODE>; plac = <CODE>; plaid-python = <CODE>; plantuml = <CODE>; plantuml-markdown = <CODE>; plaster = <CODE>; plaster-pastedeploy = <CODE>; platformdirs = <CODE>; playsound = <CODE>; playwright = <CODE>; plexapi = <CODE>; plexauth = <CODE>; plexwebsocket = <CODE>; plfit = <CODE>; plone-testing = <CODE>; plotext = <CODE>; plotly = <CODE>; plotnine = <CODE>; pluggy = <CODE>; pluginbase = <CODE>; plugincode = <CODE>; plugnplay = <CODE>; plugwise = <CODE>; plum-py = <CODE>; plumbum = <CODE>; plux = <CODE>; ply = <CODE>; plyer = <CODE>; plyfile = <CODE>; plyplus = <CODE>; plyvel = <CODE>; pmsensor = <CODE>; pocket = <CODE>; podcastparser = <CODE>; podcats = <CODE>; poetry = <CODE>; poetry-core = <CODE>; poetry-dynamic-versioning = <CODE>; poetry-plugin-export = <CODE>; poetry-semver = <CODE>; poetry2conda = <CODE>; poezio = <CODE>; polarizationsolver = <CODE>; polars = <CODE>; polib = <CODE>; policy-sentry = <CODE>; policyuniverse = <CODE>; polyline = <CODE>; pomegranate = <CODE>; pontos = <CODE>; pony = <CODE>; ponywhoosh = <CODE>; pooch = <CODE>; pook = <CODE>; poolsense = <CODE>; poppler-qt5 = <CODE>; portalocker = <CODE>; portend = <CODE>; portpicker = <CODE>; posix_ipc = <CODE>; poster3 = <CODE>; postorius = <CODE>; pot = <CODE>; potentials = <CODE>; potr = <CODE>; power = <CODE>; powerline = <CODE>; powerline-mem-segment = <CODE>; powerlineMemSegment = <CODE>; pox = <CODE>; poyo = <CODE>; ppdeep = <CODE>; ppft = <CODE>; pplpy = <CODE>; pprintpp = <CODE>; pproxy = <CODE>; ppscore = <CODE>; pq = <CODE>; prance = <CODE>; praw = <CODE>; prawcore = <CODE>; prayer-times-calculator = <CODE>; pre-commit-hooks = <CODE>; precis-i18n = <CODE>; prefixed = <CODE>; preggy = <CODE>; premailer = <CODE>; preprocess-cancellation = <CODE>; preshed = <CODE>; pretend = <CODE>; prettytable = <CODE>; primecountpy = <CODE>; primer3 = <CODE>; priority = <CODE>; prison = <CODE>; privacyidea = <CODE>; privacyidea-ldap-proxy = <CODE>; proboscis = <CODE>; process-tests = <CODE>; prodict = <CODE>; proglog = <CODE>; progress = <CODE>; progressbar = <CODE>; progressbar2 = <CODE>; progressbar33 = <CODE>; prometheus-client = <CODE>; prometheus-flask-exporter = <CODE>; prometheus_client = <CODE>; promise = <CODE>; prompt-toolkit = <CODE>; prompt_toolkit = <CODE>; property-manager = <CODE>; protego = <CODE>; proto-plus = <CODE>; protobuf = <CODE>; protobuf3 = <CODE>; protobuf3-to-dict = <CODE>; proton-client = <CODE>; protonup = <CODE>; protonup-ng = <CODE>; protonvpn-nm-lib = <CODE>; prov = <CODE>; prox-tv = <CODE>; proxmoxer = <CODE>; proxy-py = <CODE>; proxy_tools = <CODE>; psautohint = <CODE>; pscript = <CODE>; psd-tools = <CODE>; psrpcore = <CODE>; psutil = <CODE>; psutil-home-assistant = <CODE>; psycopg = <CODE>; psycopg2 = <CODE>; psycopg2cffi = <CODE>; psygnal = <CODE>; ptable = <CODE>; ptest = <CODE>; ptpython = <CODE>; ptyprocess = <CODE>; publicsuffix = <CODE>; publicsuffix2 = <CODE>; pubnub = <CODE>; pubnubsub-handler = <CODE>; pudb = <CODE>; pulp = <CODE>; pulsectl = <CODE>; pulumi = <CODE>; pulumi-aws = <CODE>; pulumi-aws-native = <CODE>; pulumi-azure-native = <CODE>; pulumi-random = <CODE>; pur = <CODE>; pure-cdb = <CODE>; pure-eval = <CODE>; pure-pcapy3 = <CODE>; pure-python-adb = <CODE>; pure-python-adb-homeassistant = <CODE>; puremagic = <CODE>; purepng = <CODE>; purl = <CODE>; push-receiver = <CODE>; pushbullet = <CODE>; pushbullet-py = <CODE>; pushover-complete = <CODE>; pvlib = <CODE>; pvo = <CODE>; pwntools = <CODE>; pxml = <CODE>; py = <CODE>; py-air-control = <CODE>; py-air-control-exporter = <CODE>; py-bip39-bindings = <CODE>; py-canary = <CODE>; py-cid = <CODE>; py-cpuinfo = <CODE>; py-deprecate = <CODE>; py-desmume = <CODE>; py-dmidecode = <CODE>; py-ecc = <CODE>; py-eth-sig-utils = <CODE>; py-libzfs = <CODE>; py-lru-cache = <CODE>; py-multiaddr = <CODE>; py-multibase = <CODE>; py-multicodec = <CODE>; py-multihash = <CODE>; py-nextbusnext = <CODE>; py-nightscout = <CODE>; py-radix = <CODE>; py-sneakers = <CODE>; py-sonic = <CODE>; py-sr25519-bindings = <CODE>; py-synologydsm-api = <CODE>; py-tes = <CODE>; py-tree-sitter = <CODE>; py-ubjson = <CODE>; py-vapid = <CODE>; py-zabbix = <CODE>; py17track = <CODE>; py2bit = <CODE>; py3buddy = <CODE>; py3exiv2 = <CODE>; py3rijndael = <CODE>; py3status = <CODE>; py3to2 = <CODE>; py4j = <CODE>; pyGtkGlade = <CODE>; pyRFC3339 = <CODE>; pySmartDL = <CODE>; py_scrypt = <CODE>; py_stringmatching = <CODE>; pyacoustid = <CODE>; pyads = <CODE>; pyaehw4a1 = <CODE>; pyaes = <CODE>; pyaftership = <CODE>; pyahocorasick = <CODE>; pyairnow = <CODE>; pyairvisual = <CODE>; pyalgotrade = <CODE>; pyalmond = <CODE>; pyamg = <CODE>; pyaml = <CODE>; pyannotate = <CODE>; pyarlo = <CODE>; pyarr = <CODE>; pyarrow = <CODE>; pyasn = <CODE>; pyasn1 = <CODE>; pyasn1-modules = <CODE>; pyatag = <CODE>; pyathena = <CODE>; pyatmo = <CODE>; pyatome = <CODE>; pyatspi = <CODE>; pyatv = <CODE>; pyaudio = <CODE>; pyaussiebb = <CODE>; pyautogui = <CODE>; pyavm = <CODE>; pyaxmlparser = <CODE>; pybalboa = <CODE>; pybase64 = <CODE>; pybids = <CODE>; pybigwig = <CODE>; pybind11 = <CODE>; pybindgen = <CODE>; pyblackbird = <CODE>; pyblake2 = <CODE>; pyblock = <CODE>; pybluez = <CODE>; pybotvac = <CODE>; pybravia = <CODE>; pybrowserid = <CODE>; pybtex = <CODE>; pybtex-docutils = <CODE>; pybullet = <CODE>; pycairo = <CODE>; pycallgraph = <CODE>; pycangjie = <CODE>; pycapnp = <CODE>; pycaption = <CODE>; pycares = <CODE>; pycarwings2 = <CODE>; pycategories = <CODE>; pycdio = <CODE>; pycec = <CODE>; pycep-parser = <CODE>; pycfdns = <CODE>; pycflow2dot = <CODE>; pycfmodel = <CODE>; pychannels = <CODE>; pychart = <CODE>; pychef = <CODE>; pychm = <CODE>; pycketcasts = <CODE>; pyclimacell = <CODE>; pyclip = <CODE>; pyclipper = <CODE>; pycm = <CODE>; pycmarkgfm = <CODE>; pycocotools = <CODE>; pycodestyle = <CODE>; pycognito = <CODE>; pycoin = <CODE>; pycollada = <CODE>; pycomfoconnect = <CODE>; pycontracts = <CODE>; pycontrol4 = <CODE>; pycoolmasternet-async = <CODE>; pycosat = <CODE>; pycotap = <CODE>; pycountry = <CODE>; pycparser = <CODE>; pycrc = <CODE>; pycritty = <CODE>; pycron = <CODE>; pycrypto = <CODE>; pycryptodome = <CODE>; pycryptodome-test-vectors = <CODE>; pycryptodomex = <CODE>; pycsdr = <CODE>; pyct = <CODE>; pyctr = <CODE>; pycuda = <CODE>; pycups = <CODE>; pycurl = <CODE>; pycxx = <CODE>; pydaikin = <CODE>; pydal = <CODE>; pydanfossair = <CODE>; pydantic = <CODE>; pydash = <CODE>; pydata-sphinx-theme = <CODE>; pydbus = <CODE>; pydeck = <CODE>; pydeconz = <CODE>; pydelijn = <CODE>; pydenticon = <CODE>; pydeps = <CODE>; pydes = <CODE>; pydevccu = <CODE>; pydevd = <CODE>; pydexcom = <CODE>; pydicom = <CODE>; pydigiham = <CODE>; pydispatcher = <CODE>; pydmd = <CODE>; pydns = <CODE>; pydocstyle = <CODE>; pydocumentdb = <CODE>; pydoods = <CODE>; pydot = <CODE>; pydrive = <CODE>; pydrive2 = <CODE>; pydroid-ipcam = <CODE>; pydsdl = <CODE>; pydub = <CODE>; pyduke-energy = <CODE>; pydy = <CODE>; pydyf = <CODE>; pyeapi = <CODE>; pyebus = <CODE>; pyechonest = <CODE>; pyeclib = <CODE>; pyeconet = <CODE>; pyecowitt = <CODE>; pyedimax = <CODE>; pyee = <CODE>; pyefergy = <CODE>; pyeight = <CODE>; pyelftools = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; installCheckPhase = "patchelf --set-interpreter \"$(cat $NIX_CC/nix-support/dynamic-linker)\" test/external_tools/readelf\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 test/all_tests.py\n"; mesonFlags = [ ]; name = "python3.10-pyelftools-0.28"; nativeBuildInputs = [ { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "--with-lto" "--enable-loadable-sqlite-extensions" "--with-openssl=/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" "--with-tzpath=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-3.10.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/mimetypes.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = { available = <CODE>; broken = <CODE>; changelog = <CODE>; description = "A high-level dynamically-typed programming language"; homepage = "https://www.python.org"; insecure = <CODE>; license = «repeated»; longDescription = "Python is a remarkably powerful dynamic programming language that\nis used in a wide variety of application domains. Some of its key\ndistinguishing features include: clear, readable syntax; strong\nintrospection capabilities; intuitive object orientation; natural\nexpression of procedural code; full modularity, supporting\nhierarchical packages; exception-based error handling; and very\nhigh level dynamic data types.\n"; maintainers = [ <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = [ "aarch64-linux" "armv5tel-linux" "armv6l-linux" "armv7a-linux" "armv7l-linux" "i686-linux" "m68k-linux" "microblaze-linux" "microblazeel-linux" "mipsel-linux" "mips64el-linux" "powerpc64-linux" "powerpc64le-linux" "riscv32-linux" "riscv64-linux" "s390-linux" "s390x-linux" "x86_64-linux" "x86_64-darwin" "i686-darwin" "aarch64-darwin" "armv7a-darwin" ]; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildEnv = <CODE>; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-ensurepip" "--with-system-expat" "--with-system-ffi" "--enable-shared" "--with-lto" "--enable-loadable-sqlite-extensions" "--with-openssl=/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev" "CFLAGS=-I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include" "LIBS=-L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib" "ac_cv_func_lchmod=no" "--with-tzpath=/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/share/zoneinfo" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = false; doInstallCheck = false; drvAttrs = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python3-3.10.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/asyncio-deprecation.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.10/no-ldconfig.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/virtualenv-permissions.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/mimetypes.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/darwin-libutil.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.8/0001-On-all-posix-systems-not-just-Darwin-set-LDSHARED-if.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/cpython/3.7/fix-finding-headers-when-cross-compiling.patch ]; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; setupHook = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/zi0m9pfmvy5lw89x7a8x674rm99i8qiq-setup-hook.sh hook.sh\nsubstituteAllInPlace hook.sh\nmv hook.sh $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-setup-hook.sh"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/93h5860jap2cslhs8gl6k21hbaqnx0ha-python-setup-hook.sh"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Python-3.10.9.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5mcv4205qdwzm8cxdcz39ysgv6wvia57-Python-3.10.9.tar.xz"; outputHash = "sha256-WuA+MIJgFkuro5kh/bTb+ObQPYI1qTnUWCsz8LXkaoM="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.10.9"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = <CODE>; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { buildEnv = <CODE>; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; pkgs = <CODE>; pythonAtLeast = <LAMBDA>; pythonAttr = <CODE>; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = <CODE>; pythonForBuild = <CODE>; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "3.10.9"; withPackages = <CODE>; }; pythonModule = «repeated»; pythonOlder = <LAMBDA>; pythonPath = <CODE>; pythonVersion = "3.10"; requiredPythonModules = [ «repeated» ]; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <CODE>; }; patches = «repeated»; pkgs = <CODE>; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonModule = «repeated»; pythonOlder = <LAMBDA>; pythonPath = <CODE>; pythonVersion = "3.10"; requiredPythonModules = «repeated»; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "3.10.9"; withPackages = <CODE>; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; executable = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; magicalSedExpression = "1 {\n  :r\n  /\\\\$|,$/{N;br}\n  /__future__|^ |^ *(#.*)?$/{n;br}\n  /^[a-z]?'\"'''\"'/ {\n  /'\"'''\"''\"'''\"'|'\"'''\"'.*'\"'''\"'/{n;br}\n  :q1; n; /^'\"'''\"'/{n;br}; /'\"'''\"'/{n;br}; bq1\n}\n/^[a-z]?\"\"\"/ {\n  /\"\"\"\"\"\"|\"\"\".*\"\"\"/{n;br}\n  :q2; n; /^\"\"\"/{n;br}; /\"\"\"/{n;br}; bq2\n}\n/^[a-z]?\"/ {\n  /\"\"|\".*[^\\\\]\"/{n;br}\n  :q3; n; /^\"/{n;br}; /[^\\\\]\"/{n;br}; bq3\n}\n/^[a-z]?'\"'\"'/ {\n  /'\"'\"''\"'\"'|'\"'\"'.*[^\\\\]'\"'\"'/{n;br}\n  :q4; n; /^'\"'\"'/{n;br}; /[^\\\\]'\"'\"'/{n;br}; bq4\n}\n\n  /^[^# ]/i import sys;import site;import functools;sys.argv[0] = '\"'$(readlink -f \"$f\")'\"';functools.reduce(lambda k, p: site.addsitedir(p, k), ['\"$([ -n \"$program_PYTHONPATH\" ] && (echo \"'$program_PYTHONPATH'\" | sed \"s|:|','|g\") || true)\"'], site._init_pathinfo());\n}\n"; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; python = «repeated»; pythonHost = { CPPFLAGS = "-I/nix/store/wx6jm8nq75q2h3nmc2wwb9kg7aihlwqs-zlib-1.2.13-dev/include -I/nix/store/lhhpcpw8kidzmz6sdiwhrdlyvyw49xj7-bzip2-1.0.8-dev/include -I/nix/store/kxhz3nid6sxplw231qwx4pb7v74fw3qi-expat-2.5.0-dev/include -I/nix/store/a1ifsja6ij8a355wgznhi1ldn21zml6d-xz-5.2.9-dev/include -I/nix/store/2sd8bjqndh83yvaxc6ib8xlkc71agm7m-libffi-3.4.4-dev/include -I/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/include -I/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/include -I/nix/store/88bywy19dwq2f1z0qha8m716v7yfzgbd-sqlite-3.40.0-dev/include -I/nix/store/csrclaa7z04b6pxhl5x1sq3cjwngqcm7-readline-8.1p2-dev/include -I/nix/store/2lmnkpd3jj37rla2y3rqaynpk8i9kw7l-ncurses-6.3-p20220507-dev/include -I/nix/store/6jm65p8ibj9ylwjkn78f7n8y9f8gccy3-openssl-3.0.7-dev/include -I/nix/store/i9s53w8pd79whlr1iddqap3bcz0nxzqj-tzdata-2022g-dev/include"; LDFLAGS = "-L/nix/store/xvijqfrbdqib8kacy4rvj04rn1yk416k-zlib-1.2.13/lib -L/nix/store/z9dinrp80jqkkn3sx4mzwla5hn2gl875-bzip2-1.0.8/lib -L/nix/store/jqwqfkk1rryw6jf1pj5xilmlm3al30qs-expat-2.5.0/lib -L/nix/store/x1xsqnps3czk161vqmcc39p6i7s6ql46-xz-5.2.9/lib -L/nix/store/nwwrv69cj3v05sgw10shvyn2nil3znd5-libffi-3.4.4/lib -L/nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33/lib -L/nix/store/4688lxn43ymv03lanmc5kx4116mbdlhf-gdbm-1.23/lib -L/nix/store/wl88slxkmcnbwij0gd3hpb8z7p9blshn-sqlite-3.40.0/lib -L/nix/store/blmlqc7mzn41p3ykhnd9nzpcvwq8mwzv-readline-8.1p2/lib -L/nix/store/cy5fla3qvshpzy0s2zir9bvm28h0bhiw-ncurses-6.3-p20220507/lib -L/nix/store/ssf0hscpqmiccf0yixcp77hws5a3kbnf-openssl-3.0.7/lib -L/nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g/lib"; LIBS = "-lcrypt"; NIX_LDFLAGS = "-lgcc_s"; PYTHONHASHSEED = 0; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildEnv = <CODE>; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; isPy2 = <CODE>; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = «repeated»; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = «repeated»; patches = «repeated»; pkgs = <CODE>; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonModule = «repeated»; pythonOlder = <LAMBDA>; pythonPath = <CODE>; pythonVersion = "3.10"; requiredPythonModules = «repeated»; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = "derivation"; userHook = null; version = "3.10.9"; withPackages = <CODE>; }; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; inputDerivation = <CODE>; magicalSedExpression = "1 {\n  :r\n  /\\\\$|,$/{N;br}\n  /__future__|^ |^ *(#.*)?$/{n;br}\n  /^[a-z]?'\"'''\"'/ {\n  /'\"'''\"''\"'''\"'|'\"'''\"'.*'\"'''\"'/{n;br}\n  :q1; n; /^'\"'''\"'/{n;br}; /'\"'''\"'/{n;br}; bq1\n}\n/^[a-z]?\"\"\"/ {\n  /\"\"\"\"\"\"|\"\"\".*\"\"\"/{n;br}\n  :q2; n; /^\"\"\"/{n;br}; /\"\"\"/{n;br}; bq2\n}\n/^[a-z]?\"/ {\n  /\"\"|\".*[^\\\\]\"/{n;br}\n  :q3; n; /^\"/{n;br}; /[^\\\\]\"/{n;br}; bq3\n}\n/^[a-z]?'\"'\"'/ {\n  /'\"'\"''\"'\"'|'\"'\"'.*[^\\\\]'\"'\"'/{n;br}\n  :q4; n; /^'\"'\"'/{n;br}; /[^\\\\]'\"'\"'/{n;br}; bq4\n}\n\n  /^[^# ]/i import sys;import site;import functools;sys.argv[0] = '\"'$(readlink -f \"$f\")'\"';functools.reduce(lambda k, p: site.addsitedir(p, k), ['\"$([ -n \"$program_PYTHONPATH\" ] && (echo \"'$program_PYTHONPATH'\" | sed \"s|:|','|g\") || true)\"'], site._init_pathinfo());\n}\n"; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/rx3xc2phi4sj5c9adixal7jhkfr1j61b-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; python = «repeated»; pythonHost = «repeated»; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/5i52qzkl1v58wvnk1rc6jbx2qnd503wp-ensure-newer-sources-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/5i52qzkl1v58wvnk1rc6jbx2qnd503wp-ensure-newer-sources-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/lxal7pw65qb88f9jkxai7yr56a8zjj2n-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/3fdnyn6y1zajx0y4pqya2nqrvjspkqzg-python-remove-tests-dir-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/3fdnyn6y1zajx0y4pqya2nqrvjspkqzg-python-remove-tests-dir-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/3fdnyn6y1zajx0y4pqya2nqrvjspkqzg-python-remove-tests-dir-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/3fdnyn6y1zajx0y4pqya2nqrvjspkqzg-python-remove-tests-dir-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-remove-tests-dir-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-remove-tests-dir-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/28wa04qqrf2rq4nf93jd1pfxa8qada8h-python-remove-tests-dir-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/i28r7lhgz3chfj2vgff6igjjfhand637-python-catch-conflicts-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/i28r7lhgz3chfj2vgff6igjjfhand637-python-catch-conflicts-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; catchConflicts = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/catch_conflicts/catch_conflicts.py; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/i28r7lhgz3chfj2vgff6igjjfhand637-python-catch-conflicts-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/i28r7lhgz3chfj2vgff6igjjfhand637-python-catch-conflicts-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; catchConflicts = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/catch_conflicts/catch_conflicts.py; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-catch-conflicts-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuptools = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-setuptools-65.3.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/k1ghspzg0mjcx44wp1q2fj7dzr1m1w17-python-remove-bin-bytecode-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/k1ghspzg0mjcx44wp1q2fj7dzr1m1w17-python-remove-bin-bytecode-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-remove-bin-bytecode-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-remove-bin-bytecode-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/5nrxvm47lgbpshhfr5i49ng9dara2mb1-python-remove-bin-bytecode-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/yba6blmr9dj1j9x42v8i4d1ix4cvdh5l-python-imports-check-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/yba6blmr9dj1j9x42v8i4d1ix4cvdh5l-python-imports-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/yba6blmr9dj1j9x42v8i4d1ix4cvdh5l-python-imports-check-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/yba6blmr9dj1j9x42v8i4d1ix4cvdh5l-python-imports-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-imports-check-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-imports-check-hook.sh"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/0i13srqas6lmfhl8z5pj5aj5igdrck7z-python-imports-check-hook.sh"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ga8k6dwwpvsgglv8gdlqnjlxlm288ma0-python-namespaces-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/ga8k6dwwpvsgglv8gdlqnjlxlm288ma0-python-namespaces-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ga8k6dwwpvsgglv8gdlqnjlxlm288ma0-python-namespaces-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/ga8k6dwwpvsgglv8gdlqnjlxlm288ma0-python-namespaces-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; findutils = «repeated»; mesonFlags = [ ]; name = "python-namespaces-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; findutils = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-namespaces-hook.sh"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/2fi7nsd4rrhanih7l701k36bfjj25rgf-python-namespaces-hook.sh"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontUsePipInstall = true; dontUseSetuptoolsBuild = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; dontUsePipInstall = true; dontUseSetuptoolsBuild = true; installPhase = "export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0\n# Give folders a known name\nmv pip* pip\nmv setuptools* setuptools\nmv wheel* wheel\n# Set up PYTHONPATH. The above folders need to be on PYTHONPATH\n# $out is where we are installing to and takes precedence\nexport PYTHONPATH=\"$out/lib/python3.10/site-packages:$(pwd)/pip/src:$(pwd)/setuptools:$(pwd)/setuptools/pkg_resources:$(pwd)/wheel:$PYTHONPATH\"\n\necho \"Building setuptools wheel...\"\npushd setuptools\nrm pyproject.toml\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 -m pip install --no-build-isolation --no-index --prefix=$out  --ignore-installed --no-dependencies --no-cache .\npopd\n\necho \"Building wheel wheel...\"\npushd wheel\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 -m pip install --no-build-isolation --no-index --prefix=$out  --ignore-installed --no-dependencies --no-cache .\npopd\n\necho \"Building pip wheel...\"\npushd pip\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 -m pip install --no-build-isolation --no-index --prefix=$out  --ignore-installed --no-dependencies --no-cache .\npopd\n"; mesonFlags = [ ]; name = "python3.10-bootstrapped-pip-22.2.2"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "pip"; postPatch = "mkdir -p $out/bin\n# Remove vendored Windows PE binaries\n# Note: These are unused but make the package unreproducible.\nfind -type f -name '*.exe' -delete\n"; propagatedBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\nprintWords  > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\nprintWords  > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pip-install-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pip-install-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/8xwwzgf6m5fw945hzbivwlrnhzy0h0sn-pip-install-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\nprintWords   > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\nprintWords   > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "setuptools-setup-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "setuptools-setup-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/4xb8g1bjb2g4z8c4k7id48z6g27v7j8k-setuptools-setup-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; propagatedNativeBuildInputs = [ ]; sourceRoot = "."; srcs = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "wheel-0.37.1-source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-JlTmUPY3yo/uROyd3nW1dJa23zbLhgQTwcmqZkPOrHs="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/0.37.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\ncd $out\nmv tests/testdata/unicode.dist/unicodedist/åäö_日本語.py \\\n  tests/testdata/unicode.dist/unicodedist/æɐø_日本價.py\npatch -p1 < /nix/store/7bsjh2y3fzb5sbfd3knclm53gr5naqrr-0001-tests-Rename-a-a-o-_-.py-_-.py.patch\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/pypa/wheel/archive/0.37.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "wheel-0.37.1-source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/3dki8ikais8yg1npyrznzd39vpg66d79-wheel-0.37.1-source"; outputHash = "sha256-JlTmUPY3yo/uROyd3nW1dJa23zbLhgQTwcmqZkPOrHs="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "pypa"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/pypa/wheel/archive/0.37.1.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/0.37.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\ncd $out\nmv tests/testdata/unicode.dist/unicodedist/åäö_日本語.py \\\n  tests/testdata/unicode.dist/unicodedist/æɐø_日本價.py\npatch -p1 < /nix/store/7bsjh2y3fzb5sbfd3knclm53gr5naqrr-0001-tests-Rename-a-a-o-_-.py-_-.py.patch\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "wheel"; rev = "0.37.1"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/pypa/wheel/archive/0.37.1.tar.gz"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "pip-22.2.2-source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-SLjmxFUFmvgy8E8kxfc6lxxCRo+GN4L77pqkWkRR8aE="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/22.2.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/pypa/pip/archive/22.2.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "pip-22.2.2-source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/a859qkahn9df557sbvi4nl18clpqdwsa-pip-22.2.2-source"; outputHash = "sha256-SLjmxFUFmvgy8E8kxfc6lxxCRo+GN4L77pqkWkRR8aE="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "pypa"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/pypa/pip/archive/22.2.2.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/22.2.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "pip"; rev = "22.2.2"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/pypa/pip/archive/22.2.2.tar.gz"; urls = «repeated»; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 setup.py egg_info\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 setup.py sdist --formats=gztar\n\n# Here we untar the sdist and retar it in order to control the timestamps\n# of all the files included\ntar -xzf dist/setuptools-65.3.0.post0.tar.gz -C dist/\ntar -czf dist/setuptools-65.3.0-sdist.tar.gz -C dist/ --mtime=\"@$SOURCE_DATE_EPOCH\" --sort=name setuptools-65.3.0.post0\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 setup.py egg_info\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 setup.py sdist --formats=gztar\n\n# Here we untar the sdist and retar it in order to control the timestamps\n# of all the files included\ntar -xzf dist/setuptools-65.3.0.post0.tar.gz -C dist/\ntar -czf dist/setuptools-65.3.0-sdist.tar.gz -C dist/ --mtime=\"@$SOURCE_DATE_EPOCH\" --sort=name setuptools-65.3.0.post0\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installPhase = "echo \"Moving sdist...\"\nmv dist/setuptools-65.3.0-sdist.tar.gz $out\n"; mesonFlags = [ ]; name = "setuptools-65.3.0-sdist.tar.gz"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/python-modules/setuptools/tag-date.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/python-modules/setuptools/setuptools-distutils-C++.patch ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "setuptools-65.3.0-source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-LPguGVWvwEMZpJFuXWLVFzIlzw+/QSMjVi2oYh0cI0s="; outputHashAlgo = null; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v65.3.0.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/pypa/setuptools/archive/refs/tags/v65.3.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "setuptools-65.3.0-source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/jih2r4vy060blyzc9q432mdy466nhsdj-setuptools-65.3.0-source"; outputHash = "sha256-LPguGVWvwEMZpJFuXWLVFzIlzw+/QSMjVi2oYh0cI0s="; outputHashAlgo = null; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "pypa"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/pypa/setuptools/archive/refs/tags/v65.3.0.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v65.3.0.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "setuptools"; rev = "refs/tags/v65.3.0"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/pypa/setuptools/archive/refs/tags/v65.3.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "echo \"Moving sdist...\"\nmv dist/setuptools-65.3.0-sdist.tar.gz $out\n"; mesonFlags = [ ]; meta = <CODE>; name = "setuptools-65.3.0-sdist.tar.gz"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/w7bh6qkw21k3v461asjgg6pcvb89iz74-setuptools-65.3.0-sdist.tar.gz"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; } ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "22.2.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0\n# Give folders a known name\nmv pip* pip\nmv setuptools* setuptools\nmv wheel* wheel\n# Set up PYTHONPATH. The above folders need to be on PYTHONPATH\n# $out is where we are installing to and takes precedence\nexport PYTHONPATH=\"$out/lib/python3.10/site-packages:$(pwd)/pip/src:$(pwd)/setuptools:$(pwd)/setuptools/pkg_resources:$(pwd)/wheel:$PYTHONPATH\"\n\necho \"Building setuptools wheel...\"\npushd setuptools\nrm pyproject.toml\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 -m pip install --no-build-isolation --no-index --prefix=$out  --ignore-installed --no-dependencies --no-cache .\npopd\n\necho \"Building wheel wheel...\"\npushd wheel\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 -m pip install --no-build-isolation --no-index --prefix=$out  --ignore-installed --no-dependencies --no-cache .\npopd\n\necho \"Building pip wheel...\"\npushd pip\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 -m pip install --no-build-isolation --no-index --prefix=$out  --ignore-installed --no-dependencies --no-cache .\npopd\n"; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-bootstrapped-pip-22.2.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/pijwfimr8jak7jvc5ajnkcki07gyfvd2-python3.10-bootstrapped-pip-22.2.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "pip"; postPatch = "mkdir -p $out/bin\n# Remove vendored Windows PE binaries\n# Note: These are unused but make the package unreproducible.\nfind -type f -name '*.exe' -delete\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; sourceRoot = "."; srcs = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "22.2.2"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\nprintWords  > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\nprintWords  > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pip-install-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pip-install-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/8xwwzgf6m5fw945hzbivwlrnhzy0h0sn-pip-install-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\nprintWords   > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\nprintWords   > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "setuptools-setup-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "setuptools-setup-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/4xb8g1bjb2g4z8c4k7id48z6g27v7j8k-setuptools-setup-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "out" ]; patches = [ ]; pipInstallFlags = [ "--ignore-installed" ]; pname = "setuptools"; postFixup = "wrapPythonPrograms\n"; preBuild = "export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "65.3.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = { available = <CODE>; broken = <CODE>; description = "Utilities to facilitate the installation of Python packages"; homepage = "https://pypi.python.org/pypi/setuptools"; insecure = <CODE>; isBuildPythonPackage = <CODE>; license = [ «repeated» { deprecated = false; free = true; fullName = "Zope Public License 2.0"; redistributable = <CODE>; shortName = "zpl20"; spdxId = "ZPL-2.0"; url = "https://spdx.org/licenses/ZPL-2.0.html"; } ]; maintainers = [ <CODE> <CODE> <CODE> ]; name = <CODE>; outputsToInstall = <CODE>; platforms = «repeated»; position = <CODE>; priority = 10; unfree = <CODE>; unsupported = <CODE>; }; name = "python3.10-setuptools-65.3.0"; nativeBuildInputs = «repeated»; out = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = «repeated»; name = "python3.10-setuptools-65.3.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/n30mqhzla67h87x9g9358xq3wrh3w2fn-python3.10-setuptools-65.3.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pipInstallFlags = «repeated»; pname = "setuptools"; postFixup = "wrapPythonPrograms\n"; preBuild = "export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "65.3.0"; }; outPath = "/nix/store/n30mqhzla67h87x9g9358xq3wrh3w2fn-python3.10-setuptools-65.3.0"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; overridePythonAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pipInstallFlags = «repeated»; pname = "setuptools"; postFixup = "wrapPythonPrograms\n"; preBuild = "export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "65.3.0"; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-catch-conflicts-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/xpqh5fqz17lz92vw0nh4lnq562hb9wh3-python-catch-conflicts-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuptools = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/n30mqhzla67h87x9g9358xq3wrh3w2fn-python3.10-setuptools-65.3.0 /nix/store/nqlbhl7y9h90sgngx2v2df26dacf5kry-python3.10-wheel-0.37.1 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/n30mqhzla67h87x9g9358xq3wrh3w2fn-python3.10-setuptools-65.3.0 /nix/store/nqlbhl7y9h90sgngx2v2df26dacf5kry-python3.10-wheel-0.37.1 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/kq6f68zbnp6hg1xz8ig07l85dswypy7c-setuptools-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "setuptools-setup-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "setuptools-setup-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/vv23wix4ihl3ya2avbkhn7hmcxpawhbr-setuptools-setup-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/hdx5sh5s9lfr1qglagzlb2fgs3py9lxa-python3.10-pip-22.2.2 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/hdx5sh5s9lfr1qglagzlb2fgs3py9lxa-python3.10-pip-22.2.2 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/vvwv4swrdks1y04z8i2md4y99kn82a4d-pip-install-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pip-install-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pip-install-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/046f7hkrvfqxfprwapqc47l4w3d6j2gw-pip-install-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/yj4h9pz0nfqaf37zayxhfyl9sr2r8bl8-python-output-dist-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/yj4h9pz0nfqaf37zayxhfyl9sr2r8bl8-python-output-dist-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "python-output-dist-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python-output-dist-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/7hvf6lvpfpmw6v2lh8s0p76kavl9psvm-python-output-dist-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "pyelftools"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "elftools" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-+T5C0ah2oj5E8fWaQbuzYRVgD5bSiUbaArrlxNLojvw="; outputHashAlgo = null; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v0.28.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/eliben/pyelftools/archive/v0.28.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/myd3ih3sr8i21h927ifm7d31mnqskps7-source"; outputHash = "sha256-+T5C0ah2oj5E8fWaQbuzYRVgD5bSiUbaArrlxNLojvw="; outputHashAlgo = null; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "eliben"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/eliben/pyelftools/archive/v0.28.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v0.28.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "pyelftools"; rev = "v0.28"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/eliben/pyelftools/archive/v0.28.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.28"; }; drvPath = <CODE>; inputDerivation = <CODE>; installCheckPhase = "patchelf --set-interpreter \"$(cat $NIX_CC/nix-support/dynamic-linker)\" test/external_tools/readelf\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 test/all_tests.py\n"; mesonFlags = [ ]; meta = { available = <CODE>; broken = <CODE>; description = "Python library for analyzing ELF files and DWARF debugging information"; homepage = "https://github.com/eliben/pyelftools"; insecure = <CODE>; isBuildPythonPackage = <CODE>; license = { deprecated = false; free = true; fullName = "Public Domain"; redistributable = <CODE>; shortName = "publicDomain"; }; maintainers = [ <CODE> <CODE> ]; name = <CODE>; outputsToInstall = [ "out" ]; platforms = «repeated»; position = <CODE>; unfree = <CODE>; unsupported = <CODE>; }; name = "python3.10-pyelftools-0.28"; nativeBuildInputs = «repeated»; out = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; installCheckPhase = "patchelf --set-interpreter \"$(cat $NIX_CC/nix-support/dynamic-linker)\" test/external_tools/readelf\n/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10 test/all_tests.py\n"; mesonFlags = [ ]; meta = «repeated»; name = "python3.10-pyelftools-0.28"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/way6nwasmfrij563hnsn6hjz8xj65sb7-python3.10-pyelftools-0.28"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = [ «repeated» ]; }; patches = [ ]; pname = "pyelftools"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "0.28"; }; outPath = "/nix/store/way6nwasmfrij563hnsn6hjz8xj65sb7-python3.10-pyelftools-0.28"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; overridePythonAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "pyelftools"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "0.28"; }; pyemby = <CODE>; pyemd = <CODE>; pyenchant = <CODE>; pyenvisalink = <CODE>; pyephember = <CODE>; pyepsg = <CODE>; pyerfa = <CODE>; pyeverlights = <CODE>; pyevilgenius = <CODE>; pyevmasm = <CODE>; pyexcel = <CODE>; pyexcel-io = <CODE>; pyexcel-ods = <CODE>; pyexcel-xls = <CODE>; pyezviz = <CODE>; pyface = <CODE>; pyfaidx = <CODE>; pyfakefs = <CODE>; pyfakewebcam = <CODE>; pyfantom = <CODE>; pyfcm = <CODE>; pyfftw = <CODE>; pyfido = <CODE>; pyfiglet = <CODE>; pyfireservicerota = <CODE>; pyflakes = <CODE>; pyflexit = <CODE>; pyflic = <CODE>; pyflick = <CODE>; pyflume = <CODE>; pyflunearyou = <CODE>; pyfma = <CODE>; pyfnip = <CODE>; pyfreedompro = <CODE>; pyfribidi = <CODE>; pyfritzhome = <CODE>; pyfronius = <CODE>; pyftdi = <CODE>; pyftgl = <CODE>; pyftpdlib = <CODE>; pyfttt = <CODE>; pyfuse3 = <CODE>; pyfxa = <CODE>; pyfzf = <CODE>; pygal = <CODE>; pygame = <CODE>; pygame-gui = <CODE>; pygame_sdl2 = <CODE>; pygatt = <CODE>; pygbm = <CODE>; pygccxml = <CODE>; pygdbmi = <CODE>; pygeoip = <CODE>; pygeos = <CODE>; pygetwindow = <CODE>; pygit2 = <CODE>; pyglet = <CODE>; pygls = <CODE>; pygmars = <CODE>; pygments = <CODE>; pygments-better-html = <CODE>; pygments-markdown-lexer = <CODE>; pygmo = <CODE>; pygmt = <CODE>; pygobject3 = <CODE>; pygogo = <CODE>; pygpgme = <CODE>; pygraphviz = <CODE>; pygreat = <CODE>; pygrok = <CODE>; pygtail = <CODE>; pygtfs = <CODE>; pygti = <CODE>; pygtkspellcheck = <CODE>; pygtrie = <CODE>; pyhamcrest = <CODE>; pyhanko = <CODE>; pyhanko-certvalidator = <CODE>; pyhaversion = <CODE>; pyhcl = <CODE>; pyheos = <CODE>; pyhiveapi = <CODE>; pyhocon = <CODE>; pyhomematic = <CODE>; pyhomepilot = <CODE>; pyhomeworks = <CODE>; pyhs100 = <CODE>; pyhumps = <CODE>; pyi2cflash = <CODE>; pyialarm = <CODE>; pyialarmxr = <CODE>; pyialarmxr-homeassistant = <CODE>; pyicloud = <CODE>; pyimpfuzzy = <CODE>; pyinfra = <CODE>; pyinotify = <CODE>; pyinputevent = <CODE>; pyinsteon = <CODE>; pyinstrument = <CODE>; pyintesishome = <CODE>; pyipma = <CODE>; pyipp = <CODE>; pyiqvia = <CODE>; pyisbn = <CODE>; pyisy = <CODE>; pyjet = <CODE>; pyjks = <CODE>; pyjnius = <CODE>; pyjson5 = <CODE>; pyjsparser = <CODE>; pyjwkest = <CODE>; pyjwt = <CODE>; pykakasi = <CODE>; pykdl = <CODE>; pykdtree = <CODE>; pykeepass = <CODE>; pykerberos = <CODE>; pykeyatome = <CODE>; pykira = <CODE>; pykka = <CODE>; pykmtronic = <CODE>; pykodi = <CODE>; pykoplenti = <CODE>; pykostalpiko = <CODE>; pykrakenapi = <CODE>; pykulersky = <CODE>; pykwalify = <CODE>; pykwb = <CODE>; pylacrosse = <CODE>; pylama = <CODE>; pylast = <CODE>; pylatexenc = <CODE>; pylaunches = <CODE>; pyld = <CODE>; pylddwrap = <CODE>; pylev = <CODE>; pylgnetcast = <CODE>; pylibacl = <CODE>; pylibconfig2 = <CODE>; pylibdmtx = <CODE>; pylibftdi = <CODE>; pylibgen = <CODE>; pyliblo = <CODE>; pylibmc = <CODE>; pylink-square = <CODE>; pylint = <CODE>; pylint-celery = <CODE>; pylint-django = <CODE>; pylint-flask = <CODE>; pylint-plugin-utils = <CODE>; pylint-venv = <CODE>; pylitterbot = <CODE>; pylnk3 = <CODE>; pylpsd = <CODE>; pylru = <CODE>; pyls-black = <CODE>; pyls-flake8 = <CODE>; pyls-isort = <CODE>; pyls-mypy = <CODE>; pyls-spyder = <CODE>; pylsp-mypy = <CODE>; pylsqpack = <CODE>; pylutron = <CODE>; pylutron-caseta = <CODE>; pylxd = <CODE>; pylyrics = <CODE>; pylzma = <CODE>; pymacaroons = <CODE>; pymaging = <CODE>; pymaging_png = <CODE>; pymailgunner = <CODE>; pymanopt = <CODE>; pymarshal = <CODE>; pymata-express = <CODE>; pymatgen = <CODE>; pymatgen-lammps = <CODE>; pymaven-patch = <CODE>; pymavlink = <CODE>; pymazda = <CODE>; pymbolic = <CODE>; pymc = <CODE>; pymc3 = <CODE>; pymdown-extensions = <CODE>; pymdstat = <CODE>; pymediainfo = <CODE>; pymediaroom = <CODE>; pymeeus = <CODE>; pymelcloud = <CODE>; pymemcache = <CODE>; pymemoize = <CODE>; pyment = <CODE>; pymetar = <CODE>; pymeteireann = <CODE>; pymeteoclimatic = <CODE>; pymetno = <CODE>; pymfy = <CODE>; pymicrobot = <CODE>; pymilter = <CODE>; pymitv = <CODE>; pymodbus = <CODE>; pymongo = <CODE>; pymoo = <CODE>; pymorphy2 = <CODE>; pymorphy2-dicts-ru = <CODE>; pympler = <CODE>; pymsgbox = <CODE>; pymssql = <CODE>; pymsteams = <CODE>; pymumble = <CODE>; pymunk = <CODE>; pymupdf = <CODE>; pymyq = <CODE>; pymysensors = <CODE>; pymysql = <CODE>; pymysqlsa = <CODE>; pymystem3 = <CODE>; pynac = <CODE>; pynacl = <CODE>; pynamecheap = <CODE>; pynamodb = <CODE>; pynanoleaf = <CODE>; pync = <CODE>; pynello = <CODE>; pynest2d = <CODE>; pynetbox = <CODE>; pynetdicom = <CODE>; pynetgear = <CODE>; pynina = <CODE>; pynisher = <CODE>; pynmea2 = <CODE>; pynndescent = <CODE>; pynobo = <CODE>; pynput = <CODE>; pynrrd = <CODE>; pynuki = <CODE>; pynut2 = <CODE>; pynvim = <CODE>; pynvml = <CODE>; pynws = <CODE>; pynx584 = <CODE>; pynzb = <CODE>; pyobihai = <CODE>; pyocd = <CODE>; pyocr = <CODE>; pyoctoprintapi = <CODE>; pyodbc = <CODE>; pyogg = <CODE>; pyombi = <CODE>; pyomo = <CODE>; pyopencl = <CODE>; pyopengl = <CODE>; pyopengl-accelerate = <CODE>; pyopenssl = <CODE>; pyopenuv = <CODE>; pyopnsense = <CODE>; pyoppleio = <CODE>; pyosf = <CODE>; pyosmium = <CODE>; pyotgw = <CODE>; pyotp = <CODE>; pyoverkiz = <CODE>; pyowm = <CODE>; pyownet = <CODE>; pyp = <CODE>; pypamtest = <CODE>; pypandoc = <CODE>; pyparser = <CODE>; pyparsing = <CODE>; pyparted = <CODE>; pypass = <CODE>; pypblib = <CODE>; pypca = <CODE>; pypcap = <CODE>; pypck = <CODE>; pypdf2 = <CODE>; pypdf3 = <CODE>; pypeg2 = <CODE>; pypemicro = <CODE>; pyperclip = <CODE>; pyperf = <CODE>; pyphen = <CODE>; pyphotonfile = <CODE>; pypillowfight = <CODE>; pypinyin = <CODE>; pypiserver = <CODE>; pyplaato = <CODE>; pyplatec = <CODE>; pypng = <CODE>; pypoint = <CODE>; pypoolstation = <CODE>; pyppeteer = <CODE>; pyprecice = <CODE>; pypresence = <CODE>; pyprind = <CODE>; pyprof2calltree = <CODE>; pyproj = <CODE>; pyproject-metadata = <CODE>; pyprosegur = <CODE>; pyprusalink = <CODE>; pypsrp = <CODE>; pyptlib = <CODE>; pypubsub = <CODE>; pypugjs = <CODE>; pypykatz = <CODE>; pypytools = <CODE>; pyqldb = <CODE>; pyqrcode = <CODE>; pyqt-builder = <CODE>; pyqt4 = <CODE>; pyqt5 = <CODE>; pyqt5_sip = <CODE>; pyqt5_with_qtmultimedia = <CODE>; pyqt5_with_qtwebkit = <CODE>; pyqt6 = <CODE>; pyqt6-sip = <CODE>; pyqt6-webengine = <CODE>; pyqtgraph = <CODE>; pyqtwebengine = <CODE>; pyquaternion = <CODE>; pyquery = <CODE>; pyquil = <CODE>; pyqvrpro = <CODE>; pyrabbit2 = <CODE>; pyrad = <CODE>; pyradios = <CODE>; pyrainbird = <CODE>; pyramid = <CODE>; pyramid_beaker = <CODE>; pyramid_chameleon = <CODE>; pyramid_exclog = <CODE>; pyramid_hawkauth = <CODE>; pyramid_jinja2 = <CODE>; pyramid_mako = <CODE>; pyramid_multiauth = <CODE>; pyrdfa3 = <CODE>; pyreadability = <CODE>; pyreadstat = <CODE>; pyrealsense2 = <CODE>; pyrealsense2WithCuda = <CODE>; pyrealsense2WithoutCuda = <CODE>; pyrect = <CODE>; pyregion = <CODE>; pyres = <CODE>; pyrevolve = <CODE>; pyrfxtrx = <CODE>; pyric = <CODE>; pyrisco = <CODE>; pyrituals = <CODE>; pyrmvtransport = <CODE>; pyro-api = <CODE>; pyro-ppl = <CODE>; pyrogram = <CODE>; pyroma = <CODE>; pyroute2 = <CODE>; pyroute2-core = <CODE>; pyroute2-ethtool = <CODE>; pyroute2-ipdb = <CODE>; pyroute2-ipset = <CODE>; pyroute2-ndb = <CODE>; pyroute2-nftables = <CODE>; pyroute2-nslink = <CODE>; pyroute2-protocols = <CODE>; pyrr = <CODE>; pyrsistent = <CODE>; pyrtlsdr = <CODE>; pyruckus = <CODE>; pysabnzbd = <CODE>; pysaj = <CODE>; pysam = <CODE>; pysaml2 = <CODE>; pysatochip = <CODE>; pysbd = <CODE>; pysc2 = <CODE>; pyscard = <CODE>; pyscf = <CODE>; pyschedule = <CODE>; pyschemes = <CODE>; pyscreenshot = <CODE>; pyscreeze = <CODE>; pyscrypt = <CODE>; pyscss = <CODE>; pysdcp = <CODE>; pysdl2 = <CODE>; pysearpc = <CODE>; pysecuritas = <CODE>; pysendfile = <CODE>; pysensibo = <CODE>; pysensors = <CODE>; pyserial = <CODE>; pyserial-asyncio = <CODE>; pysftp = <CODE>; pysha3 = <CODE>; pyshark = <CODE>; pyshp = <CODE>; pysiaalarm = <CODE>; pyside = <CODE>; pyside2 = <CODE>; pyside2-tools = <CODE>; pysideShiboken = <CODE>; pysideTools = <CODE>; pysigma = <CODE>; pysigma-backend-elasticsearch = <CODE>; pysigma-backend-insightidr = <CODE>; pysigma-backend-opensearch = <CODE>; pysigma-backend-qradar = <CODE>; pysigma-backend-splunk = <CODE>; pysigma-pipeline-crowdstrike = <CODE>; pysigma-pipeline-sysmon = <CODE>; pysigma-pipeline-windows = <CODE>; pysignalclirestapi = <CODE>; pysigset = <CODE>; pysimplegui = <CODE>; pysingleton = <CODE>; pyskyqhub = <CODE>; pyskyqremote = <CODE>; pyslurm = <CODE>; pysma = <CODE>; pysmappee = <CODE>; pysmart = <CODE>; pysmart-smartx = <CODE>; pysmartapp = <CODE>; pysmartthings = <CODE>; pysmb = <CODE>; pysmbc = <CODE>; pysmf = <CODE>; pysmi = <CODE>; pysml = <CODE>; pysmt = <CODE>; pysnmp = <CODE>; pysnmp-pyasn1 = <CODE>; pysnmp-pysmi = <CODE>; pysnmplib = <CODE>; pysnooper = <CODE>; pysnooz = <CODE>; pysnow = <CODE>; pysocks = <CODE>; pysol-cards = <CODE>; pysolcast = <CODE>; pysolr = <CODE>; pysoma = <CODE>; pysonos = <CODE>; pysoundfile = <CODE>; pyspark = <CODE>; pysparse = <CODE>; pyspcwebgw = <CODE>; pyspellchecker = <CODE>; pyspf = <CODE>; pyspice = <CODE>; pyspiflash = <CODE>; pyspinel = <CODE>; pyspnego = <CODE>; pyspotify = <CODE>; pysptk = <CODE>; pysqlcipher3 = <CODE>; pysqlitecipher = <CODE>; pysqueezebox = <CODE>; pysrim = <CODE>; pysrt = <CODE>; pyssim = <CODE>; pystache = <CODE>; pystemd = <CODE>; pystray = <CODE>; pysvg-py3 = <CODE>; pysvn = <CODE>; pyswitchbee = <CODE>; pyswitchbot = <CODE>; pysychonaut = <CODE>; pysyncobj = <CODE>; pysyncthru = <CODE>; pytabix = <CODE>; pytado = <CODE>; pytaglib = <CODE>; pytankerkoenig = <CODE>; pytap2 = <CODE>; pytautulli = <CODE>; pyte = <CODE>; pytelegrambotapi = <CODE>; pytenable = <CODE>; pytesseract = <CODE>; pytest = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-pytest-7.1.3"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/d43zl5nv2hnnsy5ipbzqw1crh517y7fw-pip-build-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/hdx5sh5s9lfr1qglagzlb2fgs3py9lxa-python3.10-pip-22.2.2 /nix/store/nqlbhl7y9h90sgngx2v2df26dacf5kry-python3.10-wheel-0.37.1 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/d43zl5nv2hnnsy5ipbzqw1crh517y7fw-pip-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/d43zl5nv2hnnsy5ipbzqw1crh517y7fw-pip-build-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/hdx5sh5s9lfr1qglagzlb2fgs3py9lxa-python3.10-pip-22.2.2 /nix/store/nqlbhl7y9h90sgngx2v2df26dacf5kry-python3.10-wheel-0.37.1 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/d43zl5nv2hnnsy5ipbzqw1crh517y7fw-pip-build-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pip-build-hook.sh"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pip-build-hook.sh"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/av8r7fcrcnr008h0ydrblwnh69c60cpb-pip-build-hook.sh"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; pythonSitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } «repeated» «repeated» «repeated» «repeated» { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-setuptools-scm-7.0.5"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "setuptools-scm"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-packaging-21.3"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "packaging"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-pyparsing-3.0.9"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-flit-core-3.7.1"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "testsout" "dist" ]; patches = [ ]; pname = "flit-core"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testsout\ncp -R ../tests $testsout/tests\n"; preConfigure = "cd flit_core\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-zKgaeK3fskz2TuHvIWlxBrdZIWfIJHhaqopZ3+V36wY="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/3.7.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/takluyver/flit/archive/3.7.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/7dfv42sglr3ppqp0ybawfs8jslin8fny-source"; outputHash = "sha256-zKgaeK3fskz2TuHvIWlxBrdZIWfIJHhaqopZ3+V36wY="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "takluyver"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/takluyver/flit/archive/3.7.1.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/3.7.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "flit"; rev = "3.7.1"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/takluyver/flit/archive/3.7.1.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.7.1"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-flit-core-3.7.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/0v9z75cxhd6xakv3mak30wsl4qbhhclc-python3.10-flit-core-3.7.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "flit-core"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testsout\ncp -R ../tests $testsout/tests\n"; preConfigure = "cd flit_core\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; testsout = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.7.1"; } ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "pyparsing"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "pyparsing" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-aCRyJQyLf8qQ6NO41q+HC856TjIHzIt0vyVBLV+3teE="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/pyparsing_3.0.9.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/pyparsing/pyparsing/archive/pyparsing_3.0.9.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/jd5ain63jkdclg6df0j9x7bz8ijcsnn0-source"; outputHash = "sha256-aCRyJQyLf8qQ6NO41q+HC856TjIHzIt0vyVBLV+3teE="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "pyparsing"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/pyparsing/pyparsing/archive/pyparsing_3.0.9.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/pyparsing_3.0.9.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "pyparsing"; rev = "pyparsing_3.0.9"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/pyparsing/pyparsing/archive/pyparsing_3.0.9.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.0.9"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pyparsing-3.0.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/qx5grw6n131xhxn6qm6zv1l3mx53k67m-python3.10-pyparsing-3.0.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "pyparsing"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.0.9"; } «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "packaging-21.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-3UfEKSfYmrkR5gZRiQfMLTofOLvQJjhZcGQ/nFuOz+s="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/p/packaging/packaging-21.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "packaging-21.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/n4d8islvnfr3prq1pr6329zf8hsam7sx-packaging-21.3.tar.gz"; outputHash = "sha256-3UfEKSfYmrkR5gZRiQfMLTofOLvQJjhZcGQ/nFuOz+s="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/p/packaging/packaging-21.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/p/packaging/packaging-21.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "21.3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-packaging-21.3"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/zq254v1fjfsg1qvjf99ww3ph8bjavysk-python3.10-packaging-21.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "packaging"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "21.3"; } { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-typing-extensions-4.3.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "typing-extensions"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "typing_extensions" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "typing_extensions-4.3.0.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-5tJnejL0f8frJ5XbHdFcHzTv9ha8ryz7Xpl/hU+hxKY="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/t/typing_extensions/typing_extensions-4.3.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "typing_extensions-4.3.0.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/352p7a04bn8dvfg2319x9acxaka6q290-typing_extensions-4.3.0.tar.gz"; outputHash = "sha256-5tJnejL0f8frJ5XbHdFcHzTv9ha8ryz7Xpl/hU+hxKY="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/t/typing_extensions/typing_extensions-4.3.0.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/t/typing_extensions/typing_extensions-4.3.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "4.3.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-typing-extensions-4.3.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/cai9sslzx3nf0w80zck50dv0jyxbl8l0-python3.10-typing-extensions-4.3.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "typing-extensions"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "4.3.0"; } { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = true; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = true; mesonFlags = [ ]; name = "python3.10-tomli-2.0.1"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/irx05yvi5lrzya7klgshmgzrp5r7sisz-unittest-check-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/irx05yvi5lrzya7klgshmgzrp5r7sisz-unittest-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/irx05yvi5lrzya7klgshmgzrp5r7sisz-unittest-check-hook.sh $out/nix-support/setup-hook\nsubstituteAll /nix/store/irx05yvi5lrzya7klgshmgzrp5r7sisz-unittest-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "unittest-check-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "unittest-check-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/qwi6dc2657hh729i173sx69rbpnh2vjw-unittest-check-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "tomli"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "tomli" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-v0ZMrHIIaGeORwD4JiBeLthmnKZODK5odZVL0SY4etA="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/2.0.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/hukkin/tomli/archive/2.0.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/p91654qjy7h0a96z8x1ah5dbzpnx6147-source"; outputHash = "sha256-v0ZMrHIIaGeORwD4JiBeLthmnKZODK5odZVL0SY4etA="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "hukkin"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/hukkin/tomli/archive/2.0.1.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/2.0.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "tomli"; rev = "2.0.1"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/hukkin/tomli/archive/2.0.1.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.0.1"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-tomli-2.0.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/n6ab70km3agwx30mylk50ld712a5fxgz-python3.10-tomli-2.0.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "tomli"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "2.0.1"; } «repeated» «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "setuptools_scm" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "setuptools_scm-7.0.5.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Ax4Tr3cdb4krlBrbbqBFRbv5Hrxc5ox4qvP/9uH7SEQ="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/s/setuptools_scm/setuptools_scm-7.0.5.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "setuptools_scm-7.0.5.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/iqz8jjfc2pjn4glgkkj6afswvcvphba2-setuptools_scm-7.0.5.tar.gz"; outputHash = "sha256-Ax4Tr3cdb4krlBrbbqBFRbv5Hrxc5ox4qvP/9uH7SEQ="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/s/setuptools_scm/setuptools_scm-7.0.5.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/s/setuptools_scm/setuptools_scm-7.0.5.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "7.0.5"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-setuptools-scm-7.0.5"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/7j8kj7swvyalvw5dmrmzw70sdy4yc53h-python3.10-setuptools-scm-7.0.5"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "setuptools-scm"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "7.0.5"; } ]; outputs = [ "out" "testout" "dist" ]; patches = [ ]; pname = "pytest"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testout\ncp -R testing $testout/testing\n"; propagatedBuildInputs = [ { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-attrs-22.1.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "testout" "dist" ]; patches = [ ]; pname = "attrs"; postFixup = "wrapPythonPrograms\n"; postInstall = "# Install tests as the tests output.\nmkdir $testout\ncp -R tests $testout/tests\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "attr" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "attrs-22.1.0.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-Ka3CZlRH5RkdDnxWj954sh+WctNEKB0MbhqwhUKbIrY="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/a/attrs/attrs-22.1.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "attrs-22.1.0.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pw1mwy1vygi4zpn95bcdmj865g46dskf-attrs-22.1.0.tar.gz"; outputHash = "sha256-Ka3CZlRH5RkdDnxWj954sh+WctNEKB0MbhqwhUKbIrY="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/a/attrs/attrs-22.1.0.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/a/attrs/attrs-22.1.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "22.1.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-attrs-22.1.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/5qpf7piw6kqj0gfir8adr016w71w1jcd-python3.10-attrs-22.1.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "attrs"; postFixup = "wrapPythonPrograms\n"; postInstall = "# Install tests as the tests output.\nmkdir $testout\ncp -R tests $testout/tests\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; testout = <CODE>; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "22.1.0"; } { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-iniconfig-1.1.1"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "iniconfig"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "iniconfig" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "iniconfig-1.1.1.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/i/iniconfig/iniconfig-1.1.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "iniconfig-1.1.1.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/j7zha9gz2x53fxznd7s2p8bfi4370zl5-iniconfig-1.1.1.tar.gz"; outputHash = "bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/i/iniconfig/iniconfig-1.1.1.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/i/iniconfig/iniconfig-1.1.1.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.1.1"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-iniconfig-1.1.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/2jj9i335zf51mc1ald59jvyjmqjbpy9f-python3.10-iniconfig-1.1.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "iniconfig"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "1.1.1"; } «repeated» { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-pluggy-1.0.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "pluggy"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "pluggy-1.0.0.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/p/pluggy/pluggy-1.0.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "pluggy-1.0.0.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/vvpwhg4jwwq9fg6anvmxlf1lq5ajya6b-pluggy-1.0.0.tar.gz"; outputHash = "4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/p/pluggy/pluggy-1.0.0.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/p/pluggy/pluggy-1.0.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.0.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pluggy-1.0.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/7bbcwkrgvw7ard6gvfjdj9pjl285210j-python3.10-pluggy-1.0.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "pluggy"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "1.0.0"; } { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-py-1.11.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "py"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "py" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "py-1.11.0.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "51c75c4126074b472f746a24399ad32f6053d1b34b68d2fa41e558e6f4a98719"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/p/py/py-1.11.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "py-1.11.0.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9ngk20lkh8qspkbvq16xg5nljwyvh0n0-py-1.11.0.tar.gz"; outputHash = "51c75c4126074b472f746a24399ad32f6053d1b34b68d2fa41e558e6f4a98719"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/p/py/py-1.11.0.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/p/py/py-1.11.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.11.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-py-1.11.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/6d0c2h81by0xp0061g1mrkghya1dfz98-python3.10-py-1.11.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "py"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "1.11.0"; } «repeated» «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "pytest" ]; setupHook = { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildCommand = "target=$out''\nmkdir -p \"$(dirname \"$target\")\"\n\nif [ -e \"$textPath\" ]; then\n  mv \"$textPath\" \"$target\"\nelse\n  echo -n \"$text\" > \"$target\"\nfi\n\neval \"$checkPhase\"\n\n(test -n \"$executable\" && chmod +x \"$target\") || true\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = ""; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; executable = false; mesonFlags = [ ]; name = "pytest-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" "text" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "pytestcachePhase() {\n    find $out -name .pytest_cache -type d -exec rm -rf {} +\n}\npreDistPhases+=\" pytestcachePhase\"\n\n# pytest generates it's own bytecode files to improve assertion messages.\n# These files similar to cpython's bytecode files but are never laoded\n# by python interpreter directly. We remove them for a few reasons:\n# - files are non-deterministic: https://github.com/NixOS/nixpkgs/issues/139292\n#   (file headers are generatedt by pytest directly and contain timestamps)\n# - files are not needed after tests are finished\npytestRemoveBytecodePhase () {\n    # suffix is defined at:\n    #    https://github.com/pytest-dev/pytest/blob/7.1.3/src/_pytest/assertion/rewrite.py#L51-L53\n    find $out -name \"*-pytest-*.py[co]\" -delete\n}\npreDistPhases+=\" pytestRemoveBytecodePhase\"\n"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = false; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pytest-hook"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/mq5vz3cg2ksj26jz6jx4hv5b7sz8xipm-pytest-hook"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; text = "pytestcachePhase() {\n    find $out -name .pytest_cache -type d -exec rm -rf {} +\n}\npreDistPhases+=\" pytestcachePhase\"\n\n# pytest generates it's own bytecode files to improve assertion messages.\n# These files similar to cpython's bytecode files but are never laoded\n# by python interpreter directly. We remove them for a few reasons:\n# - files are non-deterministic: https://github.com/NixOS/nixpkgs/issues/139292\n#   (file headers are generatedt by pytest directly and contain timestamps)\n# - files are not needed after tests are finished\npytestRemoveBytecodePhase () {\n    # suffix is defined at:\n    #    https://github.com/pytest-dev/pytest/blob/7.1.3/src/_pytest/assertion/rewrite.py#L51-L53\n    find $out -name \"*-pytest-*.py[co]\" -delete\n}\npreDistPhases+=\" pytestRemoveBytecodePhase\"\n"; type = "derivation"; userHook = null; }; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "pytest-7.1.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-TzZf7C3/nBFi+DTZ8YrxuhMGLbDHCL97lG+KXHYYDDk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/p/pytest/pytest-7.1.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "pytest-7.1.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/q0rsh2mvpi1rmwyaqpnb2jsjr4bf13aj-pytest-7.1.3.tar.gz"; outputHash = "sha256-TzZf7C3/nBFi+DTZ8YrxuhMGLbDHCL97lG+KXHYYDDk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/p/pytest/pytest-7.1.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/p/pytest/pytest-7.1.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "7.1.3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pytest-7.1.3"; nativeBuildInputs = «repeated»; out = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pytest-7.1.3"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ycyd9qw2348qy1br0l8qw1yg7mxdd40d-python3.10-pytest-7.1.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "pytest"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testout\ncp -R testing $testout/testing\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; testout = <CODE>; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "7.1.3"; }; outPath = "/nix/store/ycyd9qw2348qy1br0l8qw1yg7mxdd40d-python3.10-pytest-7.1.3"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; overridePythonAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "pytest"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testout\ncp -R testing $testout/testing\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; setupHook = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; testout = <CODE>; tests = <CODE>; type = "derivation"; updateScript = <CODE>; userHook = null; version = "7.1.3"; }; pytest-aio = <CODE>; pytest-aiohttp = <CODE>; pytest-annotate = <CODE>; pytest-ansible = <CODE>; pytest-arraydiff = <CODE>; pytest-astropy = <CODE>; pytest-astropy-header = <CODE>; pytest-asyncio = <CODE>; pytest-bdd = <CODE>; pytest-benchmark = <CODE>; pytest-black = <CODE>; pytest-cache = <CODE>; pytest-cases = <CODE>; pytest-catchlog = <CODE>; pytest-celery = <CODE>; pytest-check = <CODE>; pytest-cid = <CODE>; pytest-click = <CODE>; pytest-console-scripts = <CODE>; pytest-cov = <CODE>; pytest-cram = <CODE>; pytest-datadir = <CODE>; pytest-datafiles = <CODE>; pytest-dependency = <CODE>; pytest-describe = <CODE>; pytest-django = <CODE>; pytest-doctestplus = <CODE>; pytest-dotenv = <CODE>; pytest-env = <CODE>; pytest-error-for-skips = <CODE>; pytest-expect = <CODE>; pytest-factoryboy = <CODE>; pytest-filter-subpackage = <CODE>; pytest-fixture-config = <CODE>; pytest-flake8 = <CODE>; pytest-flakes = <CODE>; pytest-flask = <CODE>; pytest-forked = <CODE>; pytest-freezegun = <CODE>; pytest-golden = <CODE>; pytest-helpers-namespace = <CODE>; pytest-html = <CODE>; pytest-httpbin = <CODE>; pytest-httpserver = <CODE>; pytest-httpx = <CODE>; pytest-instafail = <CODE>; pytest-isort = <CODE>; pytest-json-report = <CODE>; pytest-lazy-fixture = <CODE>; pytest-localserver = <CODE>; pytest-logdog = <CODE>; pytest-metadata = <CODE>; pytest-mock = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = true; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = true; mesonFlags = [ ]; name = "python3.10-pytest-mock-3.8.2"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/322ngrnddlicbai7mxwg1hhhj17aaswz-setuptools-check-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/n30mqhzla67h87x9g9358xq3wrh3w2fn-python3.10-setuptools-65.3.0 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/322ngrnddlicbai7mxwg1hhhj17aaswz-setuptools-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/322ngrnddlicbai7mxwg1hhhj17aaswz-setuptools-check-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/n30mqhzla67h87x9g9358xq3wrh3w2fn-python3.10-setuptools-65.3.0 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/322ngrnddlicbai7mxwg1hhhj17aaswz-setuptools-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "setuptools-check-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "setuptools-check-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/5rwc8qbwrqnqykrn1xdgpmvbq6pwbz0x-setuptools-check-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; setuppy = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/interpreters/python/run_setup.py; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } { LANG = "C.UTF-8"; SETUPTOOLS_SCM_PRETEND_VERSION = "0.19.0"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { LANG = "C.UTF-8"; SETUPTOOLS_SCM_PRETEND_VERSION = "0.19.0"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "python3.10-pytest-asyncio-0.19.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "testout" "dist" ]; patches = [ ]; pname = "pytest-asyncio"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testout\ncp -R tests $testout/tests\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "pytest_asyncio" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-A8ngASbSRwY4RjanalnWBGgskZMDO50ffOf6wMNqOvA="; outputHashAlgo = null; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v0.19.0.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/pytest-dev/pytest-asyncio/archive/refs/tags/v0.19.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/ngzqzqb73m38gddsd34j78cl58hlczpc-source"; outputHash = "sha256-A8ngASbSRwY4RjanalnWBGgskZMDO50ffOf6wMNqOvA="; outputHashAlgo = null; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "pytest-dev"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/pytest-dev/pytest-asyncio/archive/refs/tags/v0.19.0.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v0.19.0.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "pytest-asyncio"; rev = "refs/tags/v0.19.0"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/pytest-dev/pytest-asyncio/archive/refs/tags/v0.19.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.19.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pytest-asyncio-0.19.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/3q939xb35fsqlcb9fkw2njr82wzycnrh-python3.10-pytest-asyncio-0.19.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; tests = <CODE>; }; patches = [ ]; pname = "pytest-asyncio"; postFixup = "wrapPythonPrograms\n"; postInstall = "mkdir $testout\ncp -R tests $testout/tests\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; testout = <CODE>; tests = <CODE>; type = <CODE>; updateScript = <CODE>; userHook = null; version = "0.19.0"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/4bd8vh5j05crj66rwi7g357qk949ckhv-pytest-check-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/ycyd9qw2348qy1br0l8qw1yg7mxdd40d-python3.10-pytest-7.1.3 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/4bd8vh5j05crj66rwi7g357qk949ckhv-pytest-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/4bd8vh5j05crj66rwi7g357qk949ckhv-pytest-check-hook.sh $out/nix-support/setup-hook\nprintWords /nix/store/ycyd9qw2348qy1br0l8qw1yg7mxdd40d-python3.10-pytest-7.1.3 > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/4bd8vh5j05crj66rwi7g357qk949ckhv-pytest-check-hook.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "pytest-check-hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pytest-check-hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/08q49v1ga7vs3l5m7lij7wa1hgxp60a6-pytest-check-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = <CODE>; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = <CODE>; pythonCheckInterpreter = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "pytest-mock"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "pytest_mock" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "pytest-mock-3.8.2.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-d/A/RVQ5JVhwApXgWu0LEJaiDUpgpPPdzeWLDDHI/KI="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/p/pytest-mock/pytest-mock-3.8.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "pytest-mock-3.8.2.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/xvbr90h2glbf210ihl3v40kpw07irq4y-pytest-mock-3.8.2.tar.gz"; outputHash = "sha256-d/A/RVQ5JVhwApXgWu0LEJaiDUpgpPPdzeWLDDHI/KI="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/p/pytest-mock/pytest-mock-3.8.2.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/p/pytest-mock/pytest-mock-3.8.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "3.8.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pytest-mock-3.8.2"; nativeBuildInputs = «repeated»; out = { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = true; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "python3.10-pytest-mock-3.8.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/5413js60gid5ga3m9dvzxs9h00pgmsa3-python3.10-pytest-mock-3.8.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "pytest-mock"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "3.8.2"; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; overridePythonAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "pytest-mock"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = «repeated»; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "3.8.2"; }; pytest-mockito = <CODE>; pytest-mockservers = <CODE>; pytest-mpl = <CODE>; pytest-mypy = <CODE>; pytest-mypy-plugins = <CODE>; pytest-openfiles = <CODE>; pytest-order = <CODE>; pytest-ordering = <CODE>; pytest-param-files = <CODE>; pytest-pep257 = <CODE>; pytest-pep8 = <CODE>; pytest-plt = <CODE>; pytest-pylint = <CODE>; pytest-pythonpath = <CODE>; pytest-qt = <CODE>; pytest-quickcheck = <CODE>; pytest-raises = <CODE>; pytest-raisesregexp = <CODE>; pytest-raisin = <CODE>; pytest-random-order = <CODE>; pytest-randomly = <CODE>; pytest-regressions = <CODE>; pytest-relaxed = <CODE>; pytest-remotedata = <CODE>; pytest-repeat = <CODE>; pytest-rerunfailures = <CODE>; pytest-resource-path = <CODE>; pytest-runner = <CODE>; pytest-sanic = <CODE>; pytest-server-fixtures = <CODE>; pytest-services = <CODE>; pytest-shutil = <CODE>; pytest-snapshot = <CODE>; pytest-socket = <CODE>; pytest-subprocess = <CODE>; pytest-subtesthack = <CODE>; pytest-subtests = <CODE>; pytest-sugar = <CODE>; pytest-test-utils = <CODE>; pytest-testmon = <CODE>; pytest-timeout = <CODE>; pytest-tornado = <CODE>; pytest-tornasync = <CODE>; pytest-trio = <CODE>; pytest-twisted = <CODE>; pytest-unordered = <CODE>; pytest-vcr = <CODE>; pytest-virtualenv = <CODE>; pytest-warnings = <CODE>; pytest-watch = <CODE>; pytest-xdist = <CODE>; pytest-xprocess = <CODE>; pytest-xvfb = <CODE>; pytestCheckHook = <CODE>; pytest_6 = <CODE>; pytest_xdist = <CODE>; pytestcache = <CODE>; pytestcov = <CODE>; pytestpep8 = <CODE>; pytestquickcheck = <CODE>; pytestrunner = <CODE>; python = <CODE>; python-Levenshtein = <CODE>; python-arango = <CODE>; python-awair = <CODE>; python-axolotl = <CODE>; python-axolotl-curve25519 = <CODE>; python-barcode = <CODE>; python-baseconv = <CODE>; python-benedict = <CODE>; python-bidi = <CODE>; python-binance = <CODE>; python-box = <CODE>; python-bsblan = <CODE>; python-cinderclient = <CODE>; python-codon-tables = <CODE>; python-constraint = <CODE>; python-crfsuite = <CODE>; python-crontab = <CODE>; python-csxcad = <CODE>; python-ctags3 = <CODE>; python-daemon = <CODE>; python-datemath = <CODE>; python-dateutil = <CODE>; python-dbusmock = <CODE>; python-decouple = <CODE>; python-didl-lite = <CODE>; python-docx = <CODE>; python-doi = <CODE>; python-dotenv = <CODE>; python-ecobee-api = <CODE>; python-editor = <CODE>; python-engineio = <CODE>; python-etcd = <CODE>; python-ethtool = <CODE>; python-family-hub-local = <CODE>; python-flirt = <CODE>; python-fontconfig = <CODE>; python-forecastio = <CODE>; python-frontmatter = <CODE>; python-fsutil = <CODE>; python-fullykiosk = <CODE>; python-gammu = <CODE>; python-gitlab = <CODE>; python-glanceclient = <CODE>; python-gnupg = <CODE>; python-google-nest = <CODE>; python-gvm = <CODE>; python-heatclient = <CODE>; python-hglib = <CODE>; python-homewizard-energy = <CODE>; python-hosts = <CODE>; python-hpilo = <CODE>; python-http-client = <CODE>; python-i18n = <CODE>; python-igraph = <CODE>; python-ipmi = <CODE>; python-ironicclient = <CODE>; python-izone = <CODE>; python-jenkins = <CODE>; python-jose = <CODE>; python-json-logger = <CODE>; python-jsonrpc-server = <CODE>; python-juicenet = <CODE>; python-kasa = <CODE>; python-keycloak = <CODE>; python-keystoneclient = <CODE>; python-language-server = <CODE>; python-ldap = <CODE>; python-ldap-test = <CODE>; python-linux-procfs = <CODE>; python-logstash = <CODE>; python-louvain = <CODE>; python-lsp-black = <CODE>; python-lsp-jsonrpc = <CODE>; python-lsp-server = <CODE>; python-ly = <CODE>; python-lz4 = <CODE>; python-lzf = <CODE>; python-lzo = <CODE>; python-magic = <CODE>; python-manilaclient = <CODE>; python-mapnik = <CODE>; python-markdown-math = <CODE>; python-memcached = <CODE>; python-miio = <CODE>; python-mimeparse = <CODE>; python-mnist = <CODE>; python-mpv-jsonipc = <CODE>; python-multipart = <CODE>; python-mystrom = <CODE>; python-nest = <CODE>; python-nmap = <CODE>; python-nomad = <CODE>; python-novaclient = <CODE>; python-nvd3 = <CODE>; python-oauth2 = <CODE>; python-olm = <CODE>; python-opendata-transport = <CODE>; python-openems = <CODE>; python-openstackclient = <CODE>; python-openzwave-mqtt = <CODE>; python-osc = <CODE>; python-owasp-zap-v2-4 = <CODE>; python-packer = <CODE>; python-pae = <CODE>; python-pam = <CODE>; python-periphery = <CODE>; python-picnic-api = <CODE>; python-pidfile = <CODE>; python-pipedrive = <CODE>; python-pkcs11 = <CODE>; python-prctl = <CODE>; python-ptrace = <CODE>; python-pushover = <CODE>; python-rabbitair = <CODE>; python-rapidjson = <CODE>; python-redis-lock = <CODE>; python-registry = <CODE>; python-rtmidi = <CODE>; python-sat = <CODE>; python-simple-hipchat = <CODE>; python-slugify = <CODE>; python-smarttub = <CODE>; python-snap7 = <CODE>; python-snappy = <CODE>; python-socketio = <CODE>; python-socks = <CODE>; python-songpal = <CODE>; python-sql = <CODE>; python-status = <CODE>; python-stdnum = <CODE>; python-string-utils = <CODE>; python-subunit = <CODE>; python-swiftclient = <CODE>; python-tado = <CODE>; python-telegram = <CODE>; python-telegram-bot = <CODE>; python-toolbox = <CODE>; python-trovo = <CODE>; python-twitch-client = <CODE>; python-twitter = <CODE>; python-u2flib-host = <CODE>; python-uinput = <CODE>; python-unshare = <CODE>; python-utils = <CODE>; python-vagrant = <CODE>; python-velbus = <CODE>; python-vipaccess = <CODE>; python-vlc = <CODE>; python-whois = <CODE>; python-wifi = <CODE>; python-wink = <CODE>; python-xmp-toolkit = <CODE>; python-zbar = <CODE>; python3-application = <CODE>; python3-eventlib = <CODE>; python3-gnutls = <CODE>; python3-openid = <CODE>; python3-saml = <CODE>; pythonAtLeast = <CODE>; pythonCatchConflictsHook = <CODE>; pythonImportsCheckHook = <CODE>; pythonNamespacesHook = <CODE>; pythonOlder = <CODE>; pythonOutputDistHook = <CODE>; pythonPackages = <CODE>; pythonRecompileBytecodeHook = <CODE>; pythonRelaxDepsHook = <CODE>; pythonRemoveBinBytecodeHook = <CODE>; pythonRemoveTestsDirHook = <CODE>; python_fedora = <CODE>; python_keyczar = <CODE>; python_magic = <CODE>; python_mimeparse = <CODE>; python_openzwave = <CODE>; python_simple_hipchat = <CODE>; pythondialog = <CODE>; pythonefl = <CODE>; pythonegardia = <CODE>; pythonfinder = <CODE>; pythonix = <CODE>; pythonnet = <CODE>; pythonocc-core = <CODE>; pythran = <CODE>; pytibber = <CODE>; pytile = <CODE>; pytimeparse = <CODE>; pytm = <CODE>; pytmx = <CODE>; pytoml = <CODE>; pytomlpp = <CODE>; pytomorrowio = <CODE>; pytools = <CODE>; pytorch = <CODE>; pytorch-bin = <CODE>; pytorch-lightning = <CODE>; pytorch-metric-learning = <CODE>; pytorch-pfn-extras = <CODE>; pytorchWithCuda = <CODE>; pytorchWithoutCuda = <CODE>; pytraccar = <CODE>; pytradfri = <CODE>; pytrafikverket = <CODE>; pytransportnsw = <CODE>; pytransportnswv2 = <CODE>; pytrends = <CODE>; pytricia = <CODE>; pyttsx3 = <CODE>; pytube = <CODE>; pytun = <CODE>; pyturbojpeg = <CODE>; pytweening = <CODE>; pytwitchapi = <CODE>; pytz = <CODE>; pytz-deprecation-shim = <CODE>; pytzdata = <CODE>; pyu2f = <CODE>; pyuavcan = <CODE>; pyudev = <CODE>; pyunbound = <CODE>; pyunifi = <CODE>; pyunifiprotect = <CODE>; pyupdate = <CODE>; pyupgrade = <CODE>; pyuptimerobot = <CODE>; pyusb = <CODE>; pyuseragents = <CODE>; pyutil = <CODE>; pyutilib = <CODE>; pyuv = <CODE>; pyvcd = <CODE>; pyvcf = <CODE>; pyvera = <CODE>; pyverilog = <CODE>; pyversasense = <CODE>; pyvesync = <CODE>; pyvex = <CODE>; pyvicare = <CODE>; pyvips = <CODE>; pyvis = <CODE>; pyvisa = <CODE>; pyvisa-py = <CODE>; pyviz-comms = <CODE>; pyvizio = <CODE>; pyvlx = <CODE>; pyvmomi = <CODE>; pyvo = <CODE>; pyvolumio = <CODE>; pyvoro = <CODE>; pywal = <CODE>; pywatchman = <CODE>; pywavelets = <CODE>; pywayland = <CODE>; pywbem = <CODE>; pyweatherflowrest = <CODE>; pywebpush = <CODE>; pywebview = <CODE>; pywemo = <CODE>; pywerview = <CODE>; pywick = <CODE>; pywilight = <CODE>; pywinrm = <CODE>; pywizlight = <CODE>; pywlroots = <CODE>; pyworld = <CODE>; pyws66i = <CODE>; pyx = <CODE>; pyxattr = <CODE>; pyxb = <CODE>; pyxbe = <CODE>; pyxdg = <CODE>; pyxeoma = <CODE>; pyxiaomigateway = <CODE>; pyxl3 = <CODE>; pyxnat = <CODE>; pyyaml = <CODE>; pyyaml-env-tag = <CODE>; pyzbar = <CODE>; pyzerproc = <CODE>; pyzmq = <CODE>; pyzufall = <CODE>; qasm2image = <CODE>; qcelemental = <CODE>; qcengine = <CODE>; qcs-api-client = <CODE>; qdarkstyle = <CODE>; qdldl = <CODE>; qds_sdk = <CODE>; qiling = <CODE>; qimage2ndarray = <CODE>; qingping-ble = <CODE>; qiskit = <CODE>; qiskit-aer = <CODE>; qiskit-aqua = <CODE>; qiskit-finance = <CODE>; qiskit-ibmq-provider = <CODE>; qiskit-ignis = <CODE>; qiskit-machine-learning = <CODE>; qiskit-nature = <CODE>; qiskit-optimization = <CODE>; qiskit-terra = <CODE>; qmk-dotty-dict = <CODE>; qnap-qsw = <CODE>; qnapstats = <CODE>; qrcode = <CODE>; qreactor = <CODE>; qscintilla = <CODE>; qscintilla-qt4 = <CODE>; qscintilla-qt5 = <CODE>; qstylizer = <CODE>; qt5reactor = <CODE>; qtawesome = <CODE>; qtconsole = <CODE>; qtpy = <CODE>; qualysclient = <CODE>; quamash = <CODE>; quandl = <CODE>; quantities = <CODE>; quantum-gateway = <CODE>; querystring_parser = <CODE>; questionary = <CODE>; queuelib = <CODE>; qutip = <CODE>; r2pipe = <CODE>; rabbitpy = <CODE>; rachiopy = <CODE>; radicale_infcloud = <CODE>; radio_beam = <CODE>; radios = <CODE>; radiotherm = <CODE>; radish-bdd = <CODE>; railroad-diagrams = <CODE>; rainbowstream = <CODE>; raincloudy = <CODE>; ramlfications = <CODE>; random2 = <CODE>; rangehttpserver = <CODE>; rapidfuzz = <CODE>; rapidfuzz-capi = <CODE>; rarfile = <CODE>; rasterio = <CODE>; ratelim = <CODE>; ratelimit = <CODE>; ratelimiter = <CODE>; raven = <CODE>; rawkit = <CODE>; ray = <CODE>; rbtools = <CODE>; rcssmin = <CODE>; rdflib = <CODE>; rdflib-jsonld = <CODE>; rdkit = <CODE>; re-assert = <CODE>; reactivex = <CODE>; readability-lxml = <CODE>; readchar = <CODE>; readlike = <CODE>; readme = <CODE>; readme_renderer = <CODE>; readthedocs-sphinx-ext = <CODE>; rebulk = <CODE>; recaptcha_client = <CODE>; recipe-scrapers = <CODE>; recoll = <CODE>; recommonmark = <CODE>; recordlinkage = <CODE>; recurring-ical-events = <CODE>; recursivePthLoader = <CODE>; redbaron = <CODE>; redis = <CODE>; rednose = <CODE>; reedsolo = <CODE>; reflink = <CODE>; regenmaschine = <CODE>; regex = <CODE>; regional = <CODE>; reikna = <CODE>; related = <CODE>; relatorio = <CODE>; releases = <CODE>; remarshal = <CODE>; remi = <CODE>; renault-api = <CODE>; rencode = <CODE>; reolink = <CODE>; reorder-python-imports = <CODE>; reparser = <CODE>; repeated-test = <CODE>; repeated_test = <CODE>; repocheck = <CODE>; reportengine = <CODE>; reportlab = <CODE>; repoze_lru = <CODE>; repoze_sphinx_autointerface = <CODE>; repoze_who = <CODE>; reproject = <CODE>; reqif = <CODE>; requests = <CODE>; requests-aws4auth = <CODE>; requests-cache = <CODE>; requests-credssp = <CODE>; requests-file = <CODE>; requests-futures = <CODE>; requests-hawk = <CODE>; requests-http-signature = <CODE>; requests-kerberos = <CODE>; requests-mock = <CODE>; requests-oauthlib = <CODE>; requests-pkcs12 = <CODE>; requests-toolbelt = <CODE>; requests-unixsocket = <CODE>; requests-wsgi-adapter = <CODE>; requests_download = <CODE>; requests_ntlm = <CODE>; requests_oauthlib = <CODE>; requests_toolbelt = <CODE>; requestsexceptions = <CODE>; requiredPythonModules = <LAMBDA>; requirements-detector = <CODE>; requirements-parser = <CODE>; resampy = <CODE>; resolvelib = <CODE>; responses = <CODE>; respx = <CODE>; restfly = <CODE>; restrictedpython = <CODE>; restructuredtext_lint = <CODE>; restview = <CODE>; result = <CODE>; rethinkdb = <CODE>; retry = <CODE>; retry_decorator = <CODE>; retrying = <CODE>; retworkx = <CODE>; rfc3339 = <CODE>; rfc3339-validator = <CODE>; rfc3986 = <CODE>; rfc3987 = <CODE>; rfc6555 = <CODE>; rfc7464 = <CODE>; rfcat = <CODE>; rflink = <CODE>; rich = <CODE>; rich-click = <CODE>; rich-rst = <CODE>; rig = <CODE>; ring-doorbell = <CODE>; ripe-atlas-cousteau = <CODE>; ripe-atlas-sagan = <CODE>; riprova = <CODE>; ripser = <CODE>; rising = <CODE>; ritassist = <CODE>; rivet = <CODE>; rjpl = <CODE>; rjsmin = <CODE>; rki-covid-parser = <CODE>; rl-coach = <CODE>; rlax = <CODE>; rlp = <CODE>; rmcl = <CODE>; rmrl = <CODE>; rnc2rng = <CODE>; rnginline = <CODE>; rns = <CODE>; robomachine = <CODE>; roboschool = <CODE>; robot-detection = <CODE>; robotframework = <CODE>; robotframework-databaselibrary = <CODE>; robotframework-pythonlibcore = <CODE>; robotframework-requests = <CODE>; robotframework-selenium2library = <CODE>; robotframework-seleniumlibrary = <CODE>; robotframework-sshlibrary = <CODE>; robotframework-tools = <CODE>; robotstatuschecker = <CODE>; robotsuite = <CODE>; rocket-errbot = <CODE>; roku = <CODE>; rokuecp = <CODE>; rollbar = <CODE>; roman = <CODE>; ronin = <CODE>; roombapy = <CODE>; roonapi = <CODE>; rope = <CODE>; ropgadget = <CODE>; ropper = <CODE>; rotate-backups = <CODE>; routes = <CODE>; rova = <CODE>; rpcq = <CODE>; rpdb = <CODE>; rpi-bad-power = <CODE>; rpi-gpio = <CODE>; rpi-gpio2 = <CODE>; rplcd = <CODE>; rply = <CODE>; rpm = <CODE>; rpmfile = <CODE>; rpmfluff = <CODE>; rpy2 = <CODE>; rpyc = <CODE>; rq = <CODE>; rsa = <CODE>; rsskey = <CODE>; rst2ansi = <CODE>; rst2pdf = <CODE>; rstcheck = <CODE>; rstcheck-core = <CODE>; rtmidi-python = <CODE>; rtmixer = <CODE>; rtoml = <CODE>; rtslib = <CODE>; rtsp-to-webrtc = <CODE>; ruamel-base = <CODE>; ruamel-yaml = <CODE>; ruamel-yaml-clib = <CODE>; ruamel_base = <CODE>; ruamel_yaml = <CODE>; ruamel_yaml_clib = <CODE>; rubymarshal = <CODE>; ruffus = <CODE>; runway-python = <CODE>; ruuvitag-ble = <CODE>; ruyaml = <CODE>; rx = <CODE>; rxv = <CODE>; rzpipe = <CODE>; s2clientprotocol = <CODE>; s3-credentials = <CODE>; s3fs = <CODE>; s3transfer = <CODE>; sabyenc = <CODE>; sabyenc3 = <CODE>; sacn = <CODE>; sacremoses = <CODE>; safe = <CODE>; safeio = <CODE>; safety = <CODE>; sagemaker = <CODE>; salmon-mail = <CODE>; sampledata = <CODE>; samplerate = <CODE>; samsungctl = <CODE>; samsungtvws = <CODE>; sane = <CODE>; saneyaml = <CODE>; sanic = <CODE>; sanic-auth = <CODE>; sanic-routing = <CODE>; sanic-testing = <CODE>; sansio-multipart = <CODE>; sapi-python-client = <CODE>; sarge = <CODE>; sarif-om = <CODE>; sasmodels = <CODE>; scales = <CODE>; scancode-toolkit = <CODE>; scapy = <CODE>; schedule = <CODE>; schema = <CODE>; schema-salad = <CODE>; schiene = <CODE>; schwifty = <CODE>; scikit-bio = <CODE>; scikit-build = <CODE>; scikit-build-core = <CODE>; scikit-fmm = <CODE>; scikit-fuzzy = <CODE>; scikit-hep-testdata = <CODE>; scikit-learn = <CODE>; scikit-learn-extra = <CODE>; scikit-misc = <CODE>; scikit-optimize = <CODE>; scikit-survival = <CODE>; scikit-tda = <CODE>; scikitimage = <CODE>; scikitlearn = <CODE>; scikits-odes = <CODE>; scipy = <CODE>; scmrepo = <CODE>; scour = <CODE>; scp = <CODE>; scramp = <CODE>; scrap-engine = <CODE>; scrapy = <CODE>; scrapy-deltafetch = <CODE>; scrapy-fake-useragent = <CODE>; scrapy-splash = <CODE>; screeninfo = <CODE>; screenlogicpy = <CODE>; scripttest = <CODE>; scs = <CODE>; sdds = <CODE>; sdnotify = <CODE>; seaborn = <CODE>; seabreeze = <CODE>; seaserv = <CODE>; seatconnect = <CODE>; seccomp = <CODE>; secp256k1 = <CODE>; secretstorage = <CODE>; secure = <CODE>; securetar = <CODE>; seekpath = <CODE>; segments = <CODE>; segno = <CODE>; segyio = <CODE>; selectors2 = <CODE>; selectors34 = <CODE>; selenium = <CODE>; semantic-version = <CODE>; semver = <CODE>; send2trash = <CODE>; sendgrid = <CODE>; sense-energy = <CODE>; sensor-state-data = <CODE>; sensorpro-ble = <CODE>; sensorpush-ble = <CODE>; sentencepiece = <CODE>; sentinel = <CODE>; sentinels = <CODE>; sentry-sdk = <CODE>; sepaxml = <CODE>; seqdiag = <CODE>; seqeval = <CODE>; sequoia = <CODE>; serialio = <CODE>; serpent = <CODE>; serpy = <CODE>; servefile = <CODE>; serverlessrepo = <CODE>; service-identity = <CODE>; setproctitle = <CODE>; setupmeta = <CODE>; setuptools = <CODE>; setuptools-declarative-requirements = <CODE>; setuptools-git = <CODE>; setuptools-lint = <CODE>; setuptools-rust = <CODE>; setuptools-scm = <CODE>; setuptools-scm-git-archive = <CODE>; setuptoolsBuildHook = <CODE>; setuptoolsCheckHook = <CODE>; setuptoolsTrial = <CODE>; setuptools_scm = <CODE>; seventeentrack = <CODE>; sexpdata = <CODE>; sfepy = <CODE>; sgmllib3k = <CODE>; sgp4 = <CODE>; sh = <CODE>; shamir-mnemonic = <CODE>; shap = <CODE>; shapely = <CODE>; sharedmem = <CODE>; sharkiq = <CODE>; sharkiqpy = <CODE>; shellescape = <CODE>; shellingham = <CODE>; shiboken2 = <CODE>; shippai = <CODE>; shiv = <CODE>; shodan = <CODE>; shortuuid = <CODE>; should-dsl = <CODE>; shouldbe = <CODE>; showit = <CODE>; shtab = <CODE>; shutilwhich = <CODE>; sievelib = <CODE>; signalslot = <CODE>; signedjson = <CODE>; signify = <CODE>; sigrok = <CODE>; sigtools = <CODE>; simanneal = <CODE>; simber = <CODE>; simple-di = <CODE>; simple-rest-client = <CODE>; simple-rlp = <CODE>; simple-salesforce = <CODE>; simple-websocket-server = <CODE>; simpleaudio = <CODE>; simplebayes = <CODE>; simpleeval = <CODE>; simplefix = <CODE>; simplegeneric = <CODE>; simplehound = <CODE>; simplejson = <CODE>; simplekml = <CODE>; simplenote = <CODE>; simplisafe-python = <CODE>; simpy = <CODE>; single-version = <CODE>; siobrultech-protocols = <CODE>; siosocks = <CODE>; sip = <CODE>; sip_4 = <CODE>; six = <CODE>; sjcl = <CODE>; skein = <CODE>; skia-pathops = <CODE>; skidl = <CODE>; skl2onnx = <CODE>; sklearn-deap = <CODE>; skodaconnect = <CODE>; skorch = <CODE>; skrl = <CODE>; skybellpy = <CODE>; skyfield = <CODE>; skytemple-dtef = <CODE>; skytemple-eventserver = <CODE>; skytemple-files = <CODE>; skytemple-icons = <CODE>; skytemple-rust = <CODE>; skytemple-ssb-debugger = <CODE>; slack-sdk = <CODE>; slackclient = <CODE>; sleekxmpp = <CODE>; sleepyq = <CODE>; slicedimage = <CODE>; slicer = <CODE>; slicerator = <CODE>; slither-analyzer = <CODE>; slixmpp = <CODE>; slob = <CODE>; slowapi = <CODE>; slugid = <CODE>; sly = <CODE>; smart-meter-texas = <CODE>; smart-open = <CODE>; smart_open = <CODE>; smarthab = <CODE>; smartypants = <CODE>; smbprotocol = <CODE>; smbus-cffi = <CODE>; smbus2 = <CODE>; smdebug-rulesconfig = <CODE>; smhi-pkg = <CODE>; smmap = <CODE>; smmap2 = <CODE>; smpplib = <CODE>; snack = <CODE>; snakebite = <CODE>; snakeviz = <CODE>; snapcast = <CODE>; snapshottest = <CODE>; sniffio = <CODE>; snitun = <CODE>; snowballstemmer = <CODE>; snowflake-connector-python = <CODE>; snowflake-sqlalchemy = <CODE>; snscrape = <CODE>; snuggs = <CODE>; soapysdr = <CODE>; soapysdr-with-plugins = <CODE>; social-auth-app-django = <CODE>; social-auth-core = <CODE>; socialscan = <CODE>; socid-extractor = <CODE>; socketio-client = <CODE>; sockio = <CODE>; sockjs = <CODE>; sockjs-tornado = <CODE>; socksio = <CODE>; socksipy-branch = <CODE>; soco = <CODE>; softlayer = <CODE>; solaredge = <CODE>; solax = <CODE>; solc-select = <CODE>; solo-python = <CODE>; somajo = <CODE>; somecomfort = <CODE>; somfy-mylink-synergy = <CODE>; sonarr = <CODE>; sopel = <CODE>; sorl_thumbnail = <CODE>; sortedcollections = <CODE>; sortedcontainers = <CODE>; soundcloud-v2 = <CODE>; sounddevice = <CODE>; soundfile = <CODE>; soupsieve = <CODE>; spacy = <CODE>; spacy-alignments = <CODE>; spacy-legacy = <CODE>; spacy-loggers = <CODE>; spacy-pkuseg = <CODE>; spacy-transformers = <CODE>; spacy_models = <CODE>; spake2 = <CODE>; spark_parser = <CODE>; sparklines = <CODE>; sparqlwrapper = <CODE>; sparse = <CODE>; spdx-tools = <CODE>; speaklater = <CODE>; speaklater3 = <CODE>; spectral-cube = <CODE>; speedtest-cli = <CODE>; spglib = <CODE>; sphfile = <CODE>; sphinx = <CODE>; sphinx-argparse = <CODE>; sphinx-autobuild = <CODE>; sphinx-autodoc-typehints = <CODE>; sphinx-automodapi = <CODE>; sphinx-basic-ng = <CODE>; sphinx-better-theme = <CODE>; sphinx-book-theme = <CODE>; sphinx-comments = <CODE>; sphinx-copybutton = <CODE>; sphinx-design = <CODE>; sphinx-external-toc = <CODE>; sphinx-fortran = <CODE>; sphinx-inline-tabs = <CODE>; sphinx-jinja = <CODE>; sphinx-jupyterbook-latex = <CODE>; sphinx-markdown-parser = <CODE>; sphinx-material = <CODE>; sphinx-mdinclude = <CODE>; sphinx-multitoc-numbering = <CODE>; sphinx-navtree = <CODE>; sphinx-pytest = <CODE>; sphinx-rtd-theme = <CODE>; sphinx-serve = <CODE>; sphinx-testing = <CODE>; sphinx-thebe = <CODE>; sphinx-togglebutton = <CODE>; sphinxHook = <CODE>; sphinx_pypi_upload = <CODE>; sphinx_rtd_theme = <CODE>; sphinxcontrib-actdiag = <CODE>; sphinxcontrib-apidoc = <CODE>; sphinxcontrib-applehelp = <CODE>; sphinxcontrib-asyncio = <CODE>; sphinxcontrib-autoapi = <CODE>; sphinxcontrib-bayesnet = <CODE>; sphinxcontrib-bibtex = <CODE>; sphinxcontrib-blockdiag = <CODE>; sphinxcontrib-confluencebuilder = <CODE>; sphinxcontrib-devhelp = <CODE>; sphinxcontrib-excel-table = <CODE>; sphinxcontrib-fulltoc = <CODE>; sphinxcontrib-htmlhelp = <CODE>; sphinxcontrib-jsmath = <CODE>; sphinxcontrib-katex = <CODE>; sphinxcontrib-mscgen = <CODE>; sphinxcontrib-nwdiag = <CODE>; sphinxcontrib-openapi = <CODE>; sphinxcontrib-plantuml = <CODE>; sphinxcontrib-programoutput = <CODE>; sphinxcontrib-qthelp = <CODE>; sphinxcontrib-seqdiag = <CODE>; sphinxcontrib-serializinghtml = <CODE>; sphinxcontrib-spelling = <CODE>; sphinxcontrib-tikz = <CODE>; sphinxcontrib-websupport = <CODE>; sphinxcontrib_httpdomain = <CODE>; sphinxcontrib_newsfeed = <CODE>; sphinxcontrib_plantuml = <CODE>; sphinxemoji = <CODE>; sphinxext-opengraph = <CODE>; spiderpy = <CODE>; spidev = <CODE>; spinners = <CODE>; splinter = <CODE>; spotipy = <CODE>; spsdk = <CODE>; spur = <CODE>; spyder = <CODE>; spyder-kernels = <CODE>; spyse-python = <CODE>; sqlalchemy = <CODE>; sqlalchemy-citext = <CODE>; sqlalchemy-continuum = <CODE>; sqlalchemy-i18n = <CODE>; sqlalchemy-jsonfield = <CODE>; sqlalchemy-migrate = <CODE>; sqlalchemy-mixins = <CODE>; sqlalchemy-utils = <CODE>; sqlalchemy_migrate = <CODE>; sqlglot = <CODE>; sqlite-fts4 = <CODE>; sqlite-utils = <CODE>; sqlitedict = <CODE>; sqlmap = <CODE>; sqlobject = <CODE>; sqlparse = <CODE>; sqlsoup = <CODE>; srp = <CODE>; srpenergy = <CODE>; srptools = <CODE>; srsly = <CODE>; srt = <CODE>; srvlookup = <CODE>; ssdeep = <CODE>; ssdp = <CODE>; sseclient = <CODE>; sseclient-py = <CODE>; ssh-mitm = <CODE>; sshpubkeys = <CODE>; sshtunnel = <CODE>; sslib = <CODE>; stack-data = <CODE>; stanza = <CODE>; starkbank-ecdsa = <CODE>; starlette = <CODE>; starline = <CODE>; stashy = <CODE>; staticjinja = <CODE>; statistics = <CODE>; statmake = <CODE>; statsd = <CODE>; statsmodels = <CODE>; stdenv = <CODE>; stdiomask = <CODE>; stdlib-list = <CODE>; steamodd = <CODE>; stem = <CODE>; stestr = <CODE>; stevedore = <CODE>; stickytape = <CODE>; stim = <CODE>; stm32loader = <CODE>; stone = <CODE>; stookalert = <CODE>; stopit = <CODE>; strategies = <CODE>; stravalib = <CODE>; strawberry-graphql = <CODE>; streamdeck = <CODE>; streaming-form-data = <CODE>; streamlabswater = <CODE>; streamz = <CODE>; strenum = <CODE>; strict-rfc3339 = <CODE>; strictyaml = <CODE>; stringcase = <CODE>; stringly = <CODE>; stripe = <CODE>; striprtf = <CODE>; structlog = <CODE>; stubserver = <CODE>; stumpy = <CODE>; stups-cli-support = <CODE>; stups-fullstop = <CODE>; stups-pierone = <CODE>; stups-tokens = <CODE>; stups-zign = <CODE>; stytra = <CODE>; subarulink = <CODE>; subdownloader = <CODE>; subliminal = <CODE>; subprocess-tee = <CODE>; subunit = <CODE>; subunit2sql = <CODE>; subzerod = <CODE>; suds-jurko = <CODE>; sumo = <CODE>; sumtypes = <CODE>; sunpy = <CODE>; sunwatcher = <CODE>; superqt = <CODE>; supervise_api = <CODE>; supervisor = <CODE>; sure = <CODE>; surepy = <CODE>; surt = <CODE>; survey = <CODE>; suseapi = <CODE>; svg-path = <CODE>; svg2tikz = <CODE>; svglib = <CODE>; svgwrite = <CODE>; swagger-spec-validator = <CODE>; swagger-ui-bundle = <CODE>; swift = <CODE>; swisshydrodata = <CODE>; swspotify = <CODE>; sybil = <CODE>; symengine = <CODE>; sympy = <CODE>; syncer = <CODE>; synergy = <CODE>; synologydsm-api = <CODE>; syslog-rfc5424-formatter = <CODE>; systembridge = <CODE>; systemd = <CODE>; sysv_ipc = <CODE>; tableaudocumentapi = <CODE>; tables = <CODE>; tablib = <CODE>; tabula-py = <CODE>; tabulate = <CODE>; tabview = <CODE>; tadasets = <CODE>; tag-expressions = <CODE>; tago = <CODE>; tahoma-api = <CODE>; tailer = <CODE>; tailscale = <CODE>; tank-utility = <CODE>; tappy = <CODE>; tasklib = <CODE>; taskw = <CODE>; tatsu = <CODE>; taxi = <CODE>; tblib = <CODE>; tbm-utils = <CODE>; tcxparser = <CODE>; tcxreader = <CODE>; teamcity-messages = <CODE>; telegram = <CODE>; telegraph = <CODE>; telethon = <CODE>; telethon-session-sqlalchemy = <CODE>; teletype = <CODE>; telfhash = <CODE>; tellduslive = <CODE>; temescal = <CODE>; temperusb = <CODE>; tempest = <CODE>; tempita = <CODE>; tempora = <CODE>; tenacity = <CODE>; tensorboard = <CODE>; tensorboard-data-server = <CODE>; tensorboard-plugin-profile = <CODE>; tensorboard-plugin-wit = <CODE>; tensorboardx = <CODE>; tensorflow = <CODE>; tensorflow-bin = <CODE>; tensorflow-bin_2 = <CODE>; tensorflow-build = <CODE>; tensorflow-build_2 = <CODE>; tensorflow-datasets = <CODE>; tensorflow-estimator = <CODE>; tensorflow-estimator_2 = <CODE>; tensorflow-metadata = <CODE>; tensorflow-probability = <CODE>; tensorflow-tensorboard = <CODE>; tensorflow-tensorboard_2 = <CODE>; tensorflowWithCuda = <CODE>; tensorflowWithoutCuda = <CODE>; tensorly = <CODE>; tensorrt = <CODE>; termcolor = <CODE>; termgraph = <CODE>; terminado = <CODE>; terminaltables = <CODE>; termplotlib = <CODE>; termstyle = <CODE>; tern = <CODE>; tesla-powerwall = <CODE>; tesla-wall-connector = <CODE>; teslajsonpy = <CODE>; tess = <CODE>; tesserocr = <CODE>; test-tube = <CODE>; testbook = <CODE>; testcontainers = <CODE>; testfixtures = <CODE>; testing-common-database = <CODE>; testing-postgresql = <CODE>; testpath = <CODE>; testrepository = <CODE>; testresources = <CODE>; testscenarios = <CODE>; testtools = <CODE>; text-unidecode = <CODE>; textacy = <CODE>; textdistance = <CODE>; textfsm = <CODE>; textile = <CODE>; texttable = <CODE>; textual = <CODE>; textwrap3 = <CODE>; textx = <CODE>; tflearn = <CODE>; tgcrypto = <CODE>; theano-pymc = <CODE>; thermobeacon-ble = <CODE>; thermopro-ble = <CODE>; thespian = <CODE>; thinc = <CODE>; threadloop = <CODE>; threadpool = <CODE>; threadpoolctl = <CODE>; threat9-test-bed = <CODE>; three-merge = <CODE>; thrift = <CODE>; thriftpy2 = <CODE>; thumborPexif = <CODE>; tidylib = <CODE>; tifffile = <CODE>; tika = <CODE>; tikzplotlib = <CODE>; tiledb = <CODE>; tilequant = <CODE>; tiler = <CODE>; tilestache = <CODE>; tilt-ble = <CODE>; time-machine = <CODE>; timeago = <CODE>; timecop = <CODE>; timelib = <CODE>; timeout-decorator = <CODE>; timetagger = <CODE>; timezonefinder = <CODE>; tinycss = <CODE>; tinycss2 = <CODE>; tinydb = <CODE>; tinyobjloader-py = <CODE>; tissue = <CODE>; titlecase = <CODE>; tkinter = <CODE>; tld = <CODE>; tldextract = <CODE>; tls-parser = <CODE>; tlsh = <CODE>; tlslite-ng = <CODE>; tmb = <CODE>; toPythonApplication = <LAMBDA>; toPythonModule = <CODE>; todoist = <CODE>; todoist-api-python = <CODE>; toggl-cli = <CODE>; token-bucket = <CODE>; tokenize-rt = <CODE>; tokenizers = <CODE>; tokenlib = <CODE>; tololib = <CODE>; toml = <CODE>; toml-adapt = <CODE>; tomli = <CODE>; tomli-w = <CODE>; tomlkit = <CODE>; toolz = <CODE>; toonapi = <CODE>; toposort = <CODE>; torch = <CODE>; torch-bin = <CODE>; torch-tb-profiler = <CODE>; torchWithCuda = <CODE>; torchWithoutCuda = <CODE>; torchaudio-bin = <CODE>; torchgpipe = <CODE>; torchinfo = <CODE>; torchmetrics = <CODE>; torchvision = <CODE>; torchvision-bin = <CODE>; tornado = <CODE>; tornado_4 = <CODE>; tornado_5 = <CODE>; torpy = <CODE>; torrequest = <CODE>; total-connect-client = <CODE>; towncrier = <CODE>; tox = <CODE>; tplink-omada-client = <CODE>; tpm2-pytss = <CODE>; tqdm = <CODE>; traceback2 = <CODE>; tracing = <CODE>; trackpy = <CODE>; trainer = <CODE>; traitlets = <CODE>; traits = <CODE>; traitsui = <CODE>; traittypes = <CODE>; transaction = <CODE>; transformers = <CODE>; transforms3d = <CODE>; transip = <CODE>; transitions = <CODE>; translatepy = <CODE>; translationstring = <CODE>; transmission-rpc = <CODE>; transmissionrpc = <CODE>; trectools = <CODE>; treelog = <CODE>; treeo = <CODE>; treex = <CODE>; treq = <CODE>; trezor = <CODE>; trezor_agent = <CODE>; trfl = <CODE>; trimesh = <CODE>; trio = <CODE>; trio-asyncio = <CODE>; trio-websocket = <CODE>; troposphere = <CODE>; trueskill = <CODE>; trustme = <CODE>; trytond = <CODE>; ttls = <CODE>; ttp = <CODE>; ttp-templates = <CODE>; tubes = <CODE>; tubeup = <CODE>; tumpa = <CODE>; tunigo = <CODE>; turnt = <CODE>; tuya-iot-py-sdk = <CODE>; tuyaha = <CODE>; tvdb_api = <CODE>; tvnamer = <CODE>; tweedledum = <CODE>; tweepy = <CODE>; twentemilieu = <CODE>; twiggy = <CODE>; twilio = <CODE>; twill = <CODE>; twine = <CODE>; twinkly-client = <CODE>; twisted = <CODE>; twitch-python = <CODE>; twitchapi = <CODE>; twitter = <CODE>; twitter-common-collections = <CODE>; twitter-common-confluence = <CODE>; twitter-common-dirutil = <CODE>; twitter-common-lang = <CODE>; twitter-common-log = <CODE>; twitter-common-options = <CODE>; twitterapi = <CODE>; twofish = <CODE>; txaio = <CODE>; txamqp = <CODE>; txdbus = <CODE>; txgithub = <CODE>; txredisapi = <CODE>; txrequests = <CODE>; txtorcon = <CODE>; txzmq = <CODE>; typecode = <CODE>; typecode-libmagic = <CODE>; typed-ast = <CODE>; typed-settings = <CODE>; typeguard = <CODE>; typer = <CODE>; types-colorama = <CODE>; types-cryptography = <CODE>; types-dateutil = <CODE>; types-decorator = <CODE>; types-docutils = <CODE>; types-enum34 = <CODE>; types-freezegun = <CODE>; types-futures = <CODE>; types-ipaddress = <CODE>; types-paramiko = <CODE>; types-protobuf = <CODE>; types-psutil = <CODE>; types-python-dateutil = <CODE>; types-pytz = <CODE>; types-pyyaml = <CODE>; types-redis = <CODE>; types-requests = <CODE>; types-retry = <CODE>; types-setuptools = <CODE>; types-tabulate = <CODE>; types-toml = <CODE>; types-typed-ast = <CODE>; types-urllib3 = <CODE>; typesentry = <CODE>; typesystem = <CODE>; typical = <CODE>; typing = <CODE>; typing-extensions = <CODE>; typing-inspect = <CODE>; typish = <CODE>; typogrify = <CODE>; tzdata = <CODE>; tzlocal = <CODE>; u-msgpack-python = <CODE>; ua-parser = <CODE>; uamqp = <CODE>; uarray = <CODE>; uasiren = <CODE>; uc-micro-py = <CODE>; udatetime = <CODE>; ueagle = <CODE>; ueberzug = <CODE>; ufo2ft = <CODE>; ufoLib2 = <CODE>; ufonormalizer = <CODE>; ufoprocessor = <CODE>; uharfbuzz = <CODE>; ujson = <CODE>; ukkonen = <CODE>; ukpostcodeparser = <CODE>; ukrainealarm = <CODE>; ultraheat-api = <CODE>; umalqurra = <CODE>; umap-learn = <CODE>; umodbus = <CODE>; unasync = <CODE>; uncertainties = <CODE>; uncompyle6 = <CODE>; unearth = <CODE>; unicode-slugify = <CODE>; unicodecsv = <CODE>; unicodedata2 = <CODE>; unicorn = <CODE>; unicrypto = <CODE>; unidecode = <CODE>; unidic-lite = <CODE>; unidiff = <CODE>; unifi = <CODE>; unifi-discovery = <CODE>; unifiled = <CODE>; unify = <CODE>; units = <CODE>; unittest-data-provider = <CODE>; unittest-xml-reporting = <CODE>; unittest2 = <CODE>; unittestCheckHook = <CODE>; univers = <CODE>; unpaddedbase64 = <CODE>; unrardll = <CODE>; unrpa = <CODE>; untangle = <CODE>; untokenize = <CODE>; uonet-request-signer-hebe = <CODE>; upass = <CODE>; upb-lib = <CODE>; upcloud-api = <CODE>; update-copyright = <CODE>; update-dotdee = <CODE>; update_checker = <CODE>; upnpy = <CODE>; uproot = <CODE>; uproot3 = <CODE>; uproot3-methods = <CODE>; uptime = <CODE>; uptime-kuma-monitor = <CODE>; uranium = <CODE>; uri-template = <CODE>; uritemplate = <CODE>; uritools = <CODE>; url-normalize = <CODE>; urlextract = <CODE>; urlgrabber = <CODE>; urllib3 = <CODE>; urlpy = <CODE>; urwid = <CODE>; urwid-readline = <CODE>; urwidtrees = <CODE>; us = <CODE>; usb-devices = <CODE>; usbrelay-py = <CODE>; usbtmc = <CODE>; user-agents = <CODE>; userpath = <CODE>; ush = <CODE>; utils = <CODE>; uuid = <CODE>; uvcclient = <CODE>; uvicorn = <CODE>; uvloop = <CODE>; vaa = <CODE>; validate-email = <CODE>; validators = <CODE>; validictory = <CODE>; validobj = <CODE>; validphys2 = <CODE>; vallox-websocket-api = <CODE>; vapoursynth = <CODE>; variants = <CODE>; varint = <CODE>; vcrpy = <CODE>; vcver = <CODE>; vcversioner = <CODE>; vdf = <CODE>; vdirsyncer = <CODE>; vector = <CODE>; vega = <CODE>; vega_datasets = <CODE>; vehicle = <CODE>; velbus-aio = <CODE>; venstarcolortouch = <CODE>; venusian = <CODE>; venvShellHook = <CODE>; verboselogs = <CODE>; versioneer = <CODE>; versionfinder = <CODE>; versioningit = <CODE>; versiontag = <CODE>; versiontools = <CODE>; vertica-python = <CODE>; veryprettytable = <CODE>; videocr = <CODE>; vidstab = <CODE>; viewstate = <CODE>; vilfo-api-client = <CODE>; vincenty = <CODE>; vine = <CODE>; virtkey = <CODE>; virtual-display = <CODE>; virtualenv = <CODE>; virtualenv-clone = <CODE>; virtualenvwrapper = <CODE>; visitor = <CODE>; vispy = <CODE>; viv-utils = <CODE>; vivisect = <CODE>; vmprof = <CODE>; vncdo = <CODE>; vobject = <CODE>; volkszaehler = <CODE>; voluptuous = <CODE>; voluptuous-serialize = <CODE>; volvooncall = <CODE>; vowpalwabbit = <CODE>; vpk = <CODE>; vqgan-jax = <CODE>; vsts = <CODE>; vsts-cd-manager = <CODE>; vsure = <CODE>; vt-py = <CODE>; vtk = <CODE>; vulcan-api = <CODE>; vultr = <CODE>; vulture = <CODE>; vxi11 = <CODE>; vyper = <CODE>; w3lib = <CODE>; wadllib = <CODE>; waitress = <CODE>; waitress-django = <CODE>; wakeonlan = <CODE>; wallbox = <CODE>; wand = <CODE>; wandb = <CODE>; waqiasync = <CODE>; warcio = <CODE>; warlock = <CODE>; warrant = <CODE>; warrant-lite = <CODE>; wasabi = <CODE>; wasm = <CODE>; wasmer = <CODE>; wasmer-compiler-cranelift = <CODE>; wasmer-compiler-llvm = <CODE>; wasmer-compiler-singlepass = <CODE>; wasmerPackages = <CODE>; wasserstein = <CODE>; watchdog = <CODE>; watchfiles = <CODE>; watchgod = <CODE>; waterfurnace = <CODE>; watermark = <CODE>; wavedrom = <CODE>; wavefile = <CODE>; wavinsentio = <CODE>; wazeroutecalculator = <CODE>; wcag-contrast-ratio = <CODE>; wcmatch = <CODE>; wcwidth = <CODE>; weakrefmethod = <CODE>; weasyprint = <CODE>; web = <CODE>; web-cache = <CODE>; web3 = <CODE>; webapp2 = <CODE>; webargs = <CODE>; webassets = <CODE>; webauthn = <CODE>; webcolors = <CODE>; webdav4 = <CODE>; webdavclient3 = <CODE>; webencodings = <CODE>; webexteamssdk = <CODE>; webhelpers = <CODE>; webob = <CODE>; weboob = <CODE>; webrtcvad = <CODE>; websocket-client = <CODE>; websocket_client = <CODE>; websockets = <CODE>; websockify = <CODE>; webssh = <CODE>; webtest = <CODE>; webtest-aiohttp = <CODE>; webthing = <CODE>; weconnect = <CODE>; weconnect-mqtt = <CODE>; werkzeug = <CODE>; west = <CODE>; wfuzz = <CODE>; wget = <CODE>; whatthepatch = <CODE>; wheel = <CODE>; wheel-filename = <CODE>; wheel-inspect = <CODE>; wheelUnpackHook = <CODE>; whichcraft = <CODE>; whirlpool-sixth-sense = <CODE>; whisper = <CODE>; whispers = <CODE>; whitenoise = <CODE>; whodap = <CODE>; whois = <CODE>; whoosh = <CODE>; widgetsnbextension = <CODE>; widlparser = <CODE>; wiffi = <CODE>; wifi = <CODE>; willow = <CODE>; winacl = <CODE>; winsspi = <CODE>; withings-api = <CODE>; wktutils = <CODE>; wled = <CODE>; woob = <CODE>; woodblock = <CODE>; word2vec = <CODE>; wordcloud = <CODE>; wordfreq = <CODE>; worldengine = <CODE>; wrapPython = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; executable = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; magicalSedExpression = "1 {\n  :r\n  /\\\\$|,$/{N;br}\n  /__future__|^ |^ *(#.*)?$/{n;br}\n  /^[a-z]?'\"'''\"'/ {\n  /'\"'''\"''\"'''\"'|'\"'''\"'.*'\"'''\"'/{n;br}\n  :q1; n; /^'\"'''\"'/{n;br}; /'\"'''\"'/{n;br}; bq1\n}\n/^[a-z]?\"\"\"/ {\n  /\"\"\"\"\"\"|\"\"\".*\"\"\"/{n;br}\n  :q2; n; /^\"\"\"/{n;br}; /\"\"\"/{n;br}; bq2\n}\n/^[a-z]?\"/ {\n  /\"\"|\".*[^\\\\]\"/{n;br}\n  :q3; n; /^\"/{n;br}; /[^\\\\]\"/{n;br}; bq3\n}\n/^[a-z]?'\"'\"'/ {\n  /'\"'\"''\"'\"'|'\"'\"'.*[^\\\\]'\"'\"'/{n;br}\n  :q4; n; /^'\"'\"'/{n;br}; /[^\\\\]'\"'\"'/{n;br}; bq4\n}\n\n  /^[^# ]/i import sys;import site;import functools;sys.argv[0] = '\"'$(readlink -f \"$f\")'\"';functools.reduce(lambda k, p: site.addsitedir(p, k), ['\"$([ -n \"$program_PYTHONPATH\" ] && (echo \"'$program_PYTHONPATH'\" | sed \"s|:|','|g\") || true)\"'], site._init_pathinfo());\n}\n"; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; python = «repeated»; pythonHost = «repeated»; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; inputDerivation = <CODE>; magicalSedExpression = "1 {\n  :r\n  /\\\\$|,$/{N;br}\n  /__future__|^ |^ *(#.*)?$/{n;br}\n  /^[a-z]?'\"'''\"'/ {\n  /'\"'''\"''\"'''\"'|'\"'''\"'.*'\"'''\"'/{n;br}\n  :q1; n; /^'\"'''\"'/{n;br}; /'\"'''\"'/{n;br}; bq1\n}\n/^[a-z]?\"\"\"/ {\n  /\"\"\"\"\"\"|\"\"\".*\"\"\"/{n;br}\n  :q2; n; /^\"\"\"/{n;br}; /\"\"\"/{n;br}; bq2\n}\n/^[a-z]?\"/ {\n  /\"\"|\".*[^\\\\]\"/{n;br}\n  :q3; n; /^\"/{n;br}; /[^\\\\]\"/{n;br}; bq3\n}\n/^[a-z]?'\"'\"'/ {\n  /'\"'\"''\"'\"'|'\"'\"'.*[^\\\\]'\"'\"'/{n;br}\n  :q4; n; /^'\"'\"'/{n;br}; /[^\\\\]'\"'\"'/{n;br}; bq4\n}\n\n  /^[^# ]/i import sys;import site;import functools;sys.argv[0] = '\"'$(readlink -f \"$f\")'\"';functools.reduce(lambda k, p: site.addsitedir(p, k), ['\"$([ -n \"$program_PYTHONPATH\" ] && (echo \"'$program_PYTHONPATH'\" | sed \"s|:|','|g\") || true)\"'], site._init_pathinfo());\n}\n"; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = { __ignoreNulls = true; all = <CODE>; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\nprintWords /nix/store/x19ai18nawqx473qmfdpnzk0sr20450c-hook > $out/nix-support/propagated-build-inputs\nsubstituteAll /nix/store/ag815hbmmkgk4flh7rj3nw90b45kik64-wrap.sh $out/nix-support/setup-hook\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10"; inputDerivation = <CODE>; magicalSedExpression = "1 {\n  :r\n  /\\\\$|,$/{N;br}\n  /__future__|^ |^ *(#.*)?$/{n;br}\n  /^[a-z]?'\"'''\"'/ {\n  /'\"'''\"''\"'''\"'|'\"'''\"'.*'\"'''\"'/{n;br}\n  :q1; n; /^'\"'''\"'/{n;br}; /'\"'''\"'/{n;br}; bq1\n}\n/^[a-z]?\"\"\"/ {\n  /\"\"\"\"\"\"|\"\"\".*\"\"\"/{n;br}\n  :q2; n; /^\"\"\"/{n;br}; /\"\"\"/{n;br}; bq2\n}\n/^[a-z]?\"/ {\n  /\"\"|\".*[^\\\\]\"/{n;br}\n  :q3; n; /^\"/{n;br}; /[^\\\\]\"/{n;br}; bq3\n}\n/^[a-z]?'\"'\"'/ {\n  /'\"'\"''\"'\"'|'\"'\"'.*[^\\\\]'\"'\"'/{n;br}\n  :q4; n; /^'\"'\"'/{n;br}; /[^\\\\]'\"'\"'/{n;br}; bq4\n}\n\n  /^[^# ]/i import sys;import site;import functools;sys.argv[0] = '\"'$(readlink -f \"$f\")'\"';functools.reduce(lambda k, p: site.addsitedir(p, k), ['\"$([ -n \"$program_PYTHONPATH\" ] && (echo \"'$program_PYTHONPATH'\" | sed \"s|:|','|g\") || true)\"'], site._init_pathinfo());\n}\n"; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/rx3xc2phi4sj5c9adixal7jhkfr1j61b-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { provides = { setupHook = true; }; }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = «repeated»; python = «repeated»; pythonHost = «repeated»; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; }; outPath = <CODE>; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passAsFile = «repeated»; passthru = «repeated»; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; provides = «repeated»; python = «repeated»; pythonHost = «repeated»; sitePackages = "lib/python3.10/site-packages"; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; userHook = null; }; wrapio = <CODE>; wrapt = <CODE>; wrf-python = <CODE>; ws4py = <CODE>; wsdiscovery = <CODE>; wsgi-intercept = <CODE>; wsgidav = <CODE>; wsgiprox = <CODE>; wsgiproxy2 = <CODE>; wsgitools = <CODE>; wsnsimpy = <CODE>; wsproto = <CODE>; wtf-peewee = <CODE>; wtforms = <CODE>; wurlitzer = <CODE>; wxPython_4_0 = <CODE>; wxPython_4_1 = <CODE>; wxPython_4_2 = <CODE>; x-wr-timezone = <CODE>; x11_hash = <CODE>; x256 = <CODE>; xapian = <CODE>; xapp = <CODE>; xarray = <CODE>; xarray-einstats = <CODE>; xattr = <CODE>; xbox-webapi = <CODE>; xboxapi = <CODE>; xcffib = <CODE>; xdg = <CODE>; xdis = <CODE>; xdot = <CODE>; xenomapper = <CODE>; xgboost = <CODE>; xhtml2pdf = <CODE>; xiaomi-ble = <CODE>; xkbcommon = <CODE>; xkcdpass = <CODE>; xknx = <CODE>; xlib = <CODE>; xlrd = <CODE>; xlsx2csv = <CODE>; xlwt = <CODE>; xmind = <CODE>; xml-marshaller = <CODE>; xml2rfc = <CODE>; xmldiff = <CODE>; xmljson = <CODE>; xmlschema = <CODE>; xmlsec = <CODE>; xmltodict = <CODE>; xmodem = <CODE>; xnd = <CODE>; xpath-expressions = <CODE>; xpybutil = <CODE>; xsdata = <CODE>; xstatic = <CODE>; xstatic-bootbox = <CODE>; xstatic-bootstrap = <CODE>; xstatic-jquery = <CODE>; xstatic-jquery-file-upload = <CODE>; xstatic-jquery-ui = <CODE>; xstatic-pygments = <CODE>; xtensor-python = <CODE>; xvfbwrapper = <CODE>; xxhash = <CODE>; yabadaba = <CODE>; yacs = <CODE>; yahooweather = <CODE>; yalesmartalarmclient = <CODE>; yalexs = <CODE>; yalexs-ble = <CODE>; yamale = <CODE>; yamlfix = <CODE>; yamllint = <CODE>; yamlloader = <CODE>; yamlordereddictloader = <CODE>; yanc = <CODE>; yangson = <CODE>; yapf = <CODE>; yappi = <CODE>; yara-python = <CODE>; yarg = <CODE>; yarl = <CODE>; yaspin = <CODE>; yaswfp = <CODE>; yattag = <CODE>; ydiff = <CODE>; yeelight = <CODE>; yfinance = <CODE>; yoda = <CODE>; yolink-api = <CODE>; youless-api = <CODE>; youtube-dl = <CODE>; youtube-dl-light = <CODE>; youtube-search = <CODE>; youtube-search-python = <CODE>; youtube-transcript-api = <CODE>; yowsup = <CODE>; yoyo-migrations = <CODE>; yq = <CODE>; yt-dlp = <CODE>; yt-dlp-light = <CODE>; yte = <CODE>; ytmusicapi = <CODE>; yubico-client = <CODE>; z3 = <CODE>; z3c-checkversions = <CODE>; zadnegoale = <CODE>; zake = <CODE>; zamg = <CODE>; zarr = <CODE>; zc-buildout = <CODE>; zc-buildout221 = <CODE>; zc_buildout_nix = <CODE>; zc_lockfile = <CODE>; zconfig = <CODE>; zcs = <CODE>; zdaemon = <CODE>; zeek = <CODE>; zeep = <CODE>; zeitgeist = <CODE>; zeroc-ice = <CODE>; zeroconf = <CODE>; zerorpc = <CODE>; zetup = <CODE>; zeversolarlocal = <CODE>; zfec = <CODE>; zha-quirks = <CODE>; zict = <CODE>; zigpy = <CODE>; zigpy-cc = <CODE>; zigpy-deconz = <CODE>; zigpy-xbee = <CODE>; zigpy-zigate = <CODE>; zigpy-znp = <CODE>; zimports = <CODE>; zipfile36 = <CODE>; zipp = <CODE>; zipstream = <CODE>; zipstream-new = <CODE>; zipstream-ng = <CODE>; zm-py = <CODE>; zodb = <CODE>; zodbpickle = <CODE>; zope-cachedescriptors = <CODE>; zope-deferredimport = <CODE>; zope-hookable = <CODE>; zope-testbrowser = <CODE>; zope_broken = <CODE>; zope_component = <CODE>; zope_configuration = <CODE>; zope_contenttype = <CODE>; zope_copy = <CODE>; zope_deprecation = <CODE>; zope_dottedname = <CODE>; zope_event = <CODE>; zope_exceptions = <CODE>; zope_filerepresentation = <CODE>; zope_i18nmessageid = <CODE>; zope_interface = <CODE>; zope_lifecycleevent = <CODE>; zope_location = <CODE>; zope_proxy = <CODE>; zope_schema = <CODE>; zope_size = <CODE>; zope_testing = <CODE>; zope_testrunner = <CODE>; zopfli = <CODE>; zstandard = <CODE>; zstd = <CODE>; zulip = <CODE>; zwave-js-server-python = <CODE>; zwave-me-ws = <CODE>; zxcvbn = <CODE>; zxing_cpp = <CODE>; }; python = «repeated»; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; tests = <CODE>; withPackages = <LAMBDA>; }; patches = <CODE>; pathsToLink = <CODE>; pkgs = «repeated»; postBuild = <CODE>; preferLocalBuild = true; propagatedBuildInputs = <CODE>; propagatedNativeBuildInputs = <CODE>; python = «repeated»; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; stdenv = «repeated»; strictDeps = <CODE>; system = <CODE>; tests = <CODE>; type = "derivation"; userHook = <CODE>; withPackages = <LAMBDA>; }; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; executable = "python3.10"; hasDistutilsCxxPatch = false; implementation = "cpython"; inputDerivation = <CODE>; interpreter = <CODE>; isPy2 = false; isPy27 = <CODE>; isPy3 = true; isPy310 = <CODE>; isPy311 = <CODE>; isPy312 = <CODE>; isPy37 = false; isPy38 = <CODE>; isPy39 = <CODE>; isPy3k = true; isPyPy = <CODE>; libPrefix = "python3.10"; mesonFlags = [ ]; meta = «repeated»; name = "python3-3.10.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pkgs = «repeated»; pname = "python3"; postFixup = "cat << \"EOF\" >> \"$out/nix-support/setup-hook\"\nsysconfigdataHook() {\n  if [ \"$1\" = '/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9' ]; then\n    export _PYTHON_HOST_PLATFORM='linux-aarch64'\n    export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_aarch64-linux-gnu'\n  fi\n}\n\naddEnvHooks \"$hostOffset\" sysconfigdataHook\n\nEOF\n"; postInstall = "# needed for some packages, especially packages that backport functionality\n# to 2.x from 3.x\nfor item in $out/lib/python3.10/test/*; do\n  if [[ \"$item\" != */test_support.py*\n     && \"$item\" != */test/support\n     && \"$item\" != */test/libregrtest\n     && \"$item\" != */test/regrtest.py* ]]; then\n    rm -rf \"$item\"\n  else\n    echo $item\n  fi\ndone\ntouch $out/lib/python3.10/test/__init__.py\n\nln -s \"$out/include/python3.10m\" \"$out/include/python3.10\"\n\n# Determinism: Windows installers were not deterministic.\n# We're also not interested in building Windows installers.\nfind \"$out\" -name 'wininst*.exe' | xargs -r rm -f\n\n# Use Python3 as default python\nln -s \"$out/bin/idle3\" \"$out/bin/idle\"\nln -s \"$out/bin/pydoc3\" \"$out/bin/pydoc\"\nln -s \"$out/bin/python3\" \"$out/bin/python\"\nln -s \"$out/bin/python3-config\" \"$out/bin/python-config\"\nln -s \"$out/lib/pkgconfig/python3.pc\" \"$out/lib/pkgconfig/python.pc\"\n\n# Get rid of retained dependencies on -dev packages, and remove\n# some $TMPDIR references to improve binary reproducibility.\n# Note that the .pyc file of _sysconfigdata.py should be regenerated!\nfor i in $out/lib/python3.10/_sysconfigdata*.py $out/lib/python3.10/config-310*/Makefile; do\n   sed -i $i -e \"s|$TMPDIR|/no-such-path|g\"\ndone\n\n# Further get rid of references. https://github.com/NixOS/nixpkgs/issues/51668\nfind $out/lib/python*/config-* -type f -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\nfind $out/lib -name '_sysconfigdata*.py*' -print -exec nuke-refs -e /1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9 -e /nix/store/x1yyrplgldzg8hvbaz5za8v0vs6ig1yp-libxcrypt-4.4.33 -e /nix/store/ni761n3nvd0i6gy8nh8h3apjbvq9svdn-tzdata-2022g '{}' +\n\n# Make the sysconfigdata module accessible on PYTHONPATH\n# This allows build Python to import host Python's sysconfigdata\nmkdir -p \"$out/lib/python3.10/site-packages\"\nln -s \"$out/lib/python3.10/\"_sysconfigdata*.py \"$out/lib/python3.10/site-packages/\"\n# Include a sitecustomize.py file\ncp /nix/store/kclys2xfrg0zjmpa37gyp33nyg1c7j0q-sitecustomize.py $out/lib/python3.10/site-packages/sitecustomize.py\n\n# Determinism: deterministic bytecode\n# First we delete all old bytecode.\nfind $out -type d -name __pycache__ -print0 | xargs -0 -I {} rm -rf \"{}\"\n# Python 3.7 implements PEP 552, introducing support for deterministic bytecode.\n# compileall uses the therein introduced checked-hash method by default when\n# `SOURCE_DATE_EPOCH` is set.\n# We exclude lib2to3 because that's Python 2 code which fails\n# We build 3 levels of optimized bytecode. Note the default level, without optimizations,\n# is not reproducible yet. https://bugs.python.org/issue29708\n# Not creating bytecode will result in a large performance loss however, so we do build it.\nfind $out -name \"*.py\" | $out/bin/python -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -O  -m compileall -q -f -x \"lib2to3\" -i -\nfind $out -name \"*.py\" | $out/bin/python -OO -m compileall -q -f -x \"lib2to3\" -i -\n# *strip* shebang from libpython gdb script - it should be dual-syntax and\n# interpretable by whatever python the gdb in question is using, which may\n# not even match the major version of this python. doing this after the\n# bytecode compilations for the same reason - we don't want bytecode generated.\nmkdir -p $out/share/gdb\nsed '/^#!/d' Tools/gdb/libpython.py > $out/share/gdb/libpython.py\n"; postPatch = "substituteInPlace Lib/subprocess.py \\\n  --replace \"'/bin/sh'\" \"'/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/sh'\"\nsubstituteInPlace Lib/mimetypes.py \\\n  --replace \"@mime-types@\" \"/nix/store/rhz9wm77pr21jcjjrfipg70k2lvw93yg-mailcap-2.1.53\"\n"; preConfigure = "for i in /usr /sw /opt /pkg; do\t# improve purity\n  substituteInPlace ./setup.py --replace $i /no-such-path\ndone\nexport CFLAGS_NODIST=\"-fno-semantic-interposition\"\n"; preFixup = ""; prePatch = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; pythonAtLeast = <LAMBDA>; pythonAttr = "python310"; pythonForBuild = «repeated»; pythonOlder = <LAMBDA>; pythonVersion = "3.10"; separateDebugInfo = true; setupHook = «repeated»; sitePackages = "lib/python3.10/site-packages"; sourceVersion = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.10.9"; withPackages = <LAMBDA>; } { PCRE_CONFIG = "/nix/store/gsdajsj2gx527lyhp4qlq8khdh4yx3zc-pcre-8.45-dev/bin/pcre-config"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-tcl" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { PCRE_CONFIG = "/nix/store/gsdajsj2gx527lyhp4qlq8khdh4yx3zc-pcre-8.45-dev/bin/pcre-config"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "swig-3.0.12"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "swig"; postPatch = "sed -i '/man1/d' CCache/Makefile.in\n"; preConfigure = "./autogen.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1wyffskbkzj5zyhjnnpip80xzsjcr3p0q5486z3wdwabnysnhn8n"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/rel-3.0.12.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/swig/swig/archive/rel-3.0.12.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/x93y51rd3smn26nfpjldmk81v20i5496-source"; outputHash = "1wyffskbkzj5zyhjnnpip80xzsjcr3p0q5486z3wdwabnysnhn8n"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "swig"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/swig/swig/archive/rel-3.0.12.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/rel-3.0.12.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "swig"; rev = "rel-3.0.12"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/swig/swig/archive/rel-3.0.12.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.0.12"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "swig-3.0.12"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/q27r82gv7dzakz4l2vilnb2gsh7rij9j-swig-3.0.12"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "swig"; postPatch = "sed -i '/man1/d' CCache/Makefile.in\n"; preConfigure = "./autogen.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.0.12"; } ]; outputs = [ "bin" "dev" "out" "man" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/audit/patches/weak-symbols.patch { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "017e6c6ab95df55f34e339d2139def83e5dada1f.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "100xa1rzkv0mvhjbfgpfm72f7c4p68syflvgc3xm6pxgrqqmfq8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/linux-audit/audit-userspace/commit/017e6c6ab95df55f34e339d2139def83e5dada1f.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "017e6c6ab95df55f34e339d2139def83e5dada1f.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/syv00zvl1k891qhcng9rllxn5rmmsxa5-017e6c6ab95df55f34e339d2139def83e5dada1f.patch"; outputHash = "100xa1rzkv0mvhjbfgpfm72f7c4p68syflvgc3xm6pxgrqqmfq8h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/linux-audit/audit-userspace/commit/017e6c6ab95df55f34e339d2139def83e5dada1f.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/linux-audit/audit-userspace/commit/017e6c6ab95df55f34e339d2139def83e5dada1f.patch"; urls = «repeated»; userHook = null; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "cp /nix/store/dymdcffp81zm9ra5nj4728yclr6a0nny-Add-substitue-functions-for-strndupa-rawmemchr.patch $out\nsubstituteInPlace $out --replace \\\n    '-* Copyright (c) 2007-09,2011-16,2018 Red Hat Inc., Durham, North Carolina.' \\\n    '-* Copyright (c) 2007-09,2011-16 Red Hat Inc., Durham, North Carolina.'\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "cp /nix/store/dymdcffp81zm9ra5nj4728yclr6a0nny-Add-substitue-functions-for-strndupa-rawmemchr.patch $out\nsubstituteInPlace $out --replace \\\n    '-* Copyright (c) 2007-09,2011-16,2018 Red Hat Inc., Durham, North Carolina.' \\\n    '-* Copyright (c) 2007-09,2011-16 Red Hat Inc., Durham, North Carolina.'\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "Add-substitue-functions-for-strndupa-rawmemchr.patch-fix-copyright-merge-conflict"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "Add-substitue-functions-for-strndupa-rawmemchr.patch-fix-copyright-merge-conflict"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/szmvsmdwc6fjqw7bnlfl4r8x693pdcvq-Add-substitue-functions-for-strndupa-rawmemchr.patch-fix-copyright-merge-conflict"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "no-ipx.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0qjq41ridyamajz9v9nyplgq7f8nn3fxw375s9sa5a0igsrx9pm0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n  -x 'ChangeLog' \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/linux-audit/audit-userspace/commit/6b09724c69d91668418ddb3af00da6db6755208c.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "no-ipx.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/iv96dh81aj0alnaiym7amxvsbyxx6jkw-no-ipx.patch"; outputHash = "0qjq41ridyamajz9v9nyplgq7f8nn3fxw375s9sa5a0igsrx9pm0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/linux-audit/audit-userspace/commit/6b09724c69d91668418ddb3af00da6db6755208c.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n  -x 'ChangeLog' \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/linux-audit/audit-userspace/commit/6b09724c69d91668418ddb3af00da6db6755208c.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "ignore-flexible-array.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1hf02zaxv6x0wmn4ca9fj48y2shks7vfna43i1zz58xw9jq7sza0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/linux-audit/audit-userspace/commit/beed138222421a2eb4212d83cb889404bd7efc49.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "ignore-flexible-array.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/7k2xy61cjvn4n6mw98b4xiaqlqlfaqpa-ignore-flexible-array.patch"; outputHash = "1hf02zaxv6x0wmn4ca9fj48y2shks7vfna43i1zz58xw9jq7sza0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/linux-audit/audit-userspace/commit/beed138222421a2eb4212d83cb889404bd7efc49.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/linux-audit/audit-userspace/commit/beed138222421a2eb4212d83cb889404bd7efc49.patch"; urls = «repeated»; userHook = null; } ]; pname = "audit"; postPatch = "sed -i 's,#include <sys/poll.h>,#include <poll.h>\\n#include <limits.h>,' audisp/audispd.c\nsubstituteInPlace bindings/swig/src/auditswig.i \\\n  --replace \"/usr/include/linux/audit.h\" \\\n            \"/nix/store/7jzd492v2c3wcyqrwcjgll8a2rw1hf5j-linux-headers-6.0/include/linux/audit.h\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "audit-2.8.5.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1dzcwb2q78q7x41shcachn7f4aksxbxd470yk38zh03fch1l2p8f"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://people.redhat.com/sgrubb/audit/audit-2.8.5.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "audit-2.8.5.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/nbzjp4q72pb3rn4w03s6pwh2cqfyjvv1-audit-2.8.5.tar.gz"; outputHash = "1dzcwb2q78q7x41shcachn7f4aksxbxd470yk38zh03fch1l2p8f"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://people.redhat.com/sgrubb/audit/audit-2.8.5.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://people.redhat.com/sgrubb/audit/audit-2.8.5.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.8.5"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "audit-2.8.5"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/951i0m07d4ak0w43wnfsvfkwppi5i3gv-audit-2.8.5-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "audit"; postPatch = "sed -i 's,#include <sys/poll.h>,#include <poll.h>\\n#include <limits.h>,' audisp/audispd.c\nsubstituteInPlace bindings/swig/src/auditswig.i \\\n  --replace \"/usr/include/linux/audit.h\" \\\n            \"/nix/store/7jzd492v2c3wcyqrwcjgll8a2rw1hf5j-linux-headers-6.0/include/linux/audit.h\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.8.5"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--includedir=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/include/security" "--enable-sconfigdir=/etc/security" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "SCONFIGDIR=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9/etc/security" ]; mesonFlags = [ ]; name = "linux-pam-1.5.2"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontDisableStatic = false; mesonFlags = [ ]; name = "flex-2.6.4"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "glibc-2.26.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0mpp41zdg17gx30kcpj83jl8hssks3adbks0qzbhcz882b9c083r"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://raw.githubusercontent.com/lede-project/source/0fb14a2b1ab2f82ce63f4437b062229d73d90516/tools/flex/patches/200-build-AC_USE_SYSTEM_EXTENSIONS-in-configure.ac.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "glibc-2.26.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/16xf1a3x2rdh9dv1jb4s75shpnb9y433-glibc-2.26.patch"; outputHash = "0mpp41zdg17gx30kcpj83jl8hssks3adbks0qzbhcz882b9c083r"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://raw.githubusercontent.com/lede-project/source/0fb14a2b1ab2f82ce63f4437b062229d73d90516/tools/flex/patches/200-build-AC_USE_SYSTEM_EXTENSIONS-in-configure.ac.patch"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://raw.githubusercontent.com/lede-project/source/0fb14a2b1ab2f82ce63f4437b062229d73d90516/tools/flex/patches/200-build-AC_USE_SYSTEM_EXTENSIONS-in-configure.ac.patch"; urls = «repeated»; userHook = null; } ]; pname = "flex"; postConfigure = ""; postInstall = "ln -s $out/bin/flex $out/bin/lex\n"; postPatch = "patchShebangs tests\n"; preConfigure = ""; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "flex-2.6.4.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "15g9bv236nzi665p9ggqjlfn4dwck5835vf0bbw2cz7h5c1swyp8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "flex-2.6.4.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/98d26yjqqzphrwzp5yisg2f5aq8l08j4-flex-2.6.4.tar.gz"; outputHash = "15g9bv236nzi665p9ggqjlfn4dwck5835vf0bbw2cz7h5c1swyp8"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/westes/flex/releases/download/v2.6.4/flex-2.6.4.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.6.4"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "flex-2.6.4"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/97i7f41cnkrq7phgvymw0ck7ldzqr8p1-flex-2.6.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "flex"; postConfigure = ""; postInstall = "ln -s $out/bin/flex $out/bin/lex\n"; postPatch = "patchShebangs tests\n"; preConfigure = ""; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.6.4"; } ]; outputs = [ "out" "doc" "man" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/pam/suid-wrapper-path.patch ]; pname = "linux-pam"; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "Linux-PAM-1.5.2.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-5OxxMakdpEUSV0Jo9JPG2MoQXIcJFpG46bVspoXU+U0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/linux-pam/linux-pam/releases/download/v1.5.2/Linux-PAM-1.5.2.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "Linux-PAM-1.5.2.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/45xn6fjnac1wvla5nha2kym12q0sd3x7-Linux-PAM-1.5.2.tar.xz"; outputHash = "sha256-5OxxMakdpEUSV0Jo9JPG2MoQXIcJFpG46bVspoXU+U0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/linux-pam/linux-pam/releases/download/v1.5.2/Linux-PAM-1.5.2.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/linux-pam/linux-pam/releases/download/v1.5.2/Linux-PAM-1.5.2.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.5.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "linux-pam-1.5.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/dcx1rm71waap0fc07djn0yf8w23dbcf9-linux-pam-1.5.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = «repeated»; pname = "linux-pam"; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.5.2"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-python" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "libcap-ng-0.8.3"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "libcap-ng"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libcap-ng-0.8.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-vtb2hI4iuy+Dtfdksq7w7TkwVOgDqOOocRyyo55rSS0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://people.redhat.com/sgrubb/libcap-ng/libcap-ng-0.8.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libcap-ng-0.8.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/0fl8sk00qqn5ym20wafraizmjxzzpm9c-libcap-ng-0.8.3.tar.gz"; outputHash = "sha256-vtb2hI4iuy+Dtfdksq7w7TkwVOgDqOOocRyyo55rSS0="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://people.redhat.com/sgrubb/libcap-ng/libcap-ng-0.8.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://people.redhat.com/sgrubb/libcap-ng/libcap-ng-0.8.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.8.3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libcap-ng-0.8.3"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/6aimclv8pf5iqcxnfpkhkb2fls1vwkni-libcap-ng-0.8.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libcap-ng"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.8.3"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--localstatedir=/var" "--enable-write" "--disable-use-tty-group" "--enable-fs-paths-default=/run/wrappers/bin:/run/current-system/sw/bin:/sbin" "--disable-makeinstall-setuid" "--disable-makeinstall-chown" "--disable-su" "--disable-nls" "--without-ncursesw" "--without-systemd" "--without-systemdsystemunitdir" "--disable-poman" "SYSCONFSTATICDIR=/0sra2y18lr3h6j58qjm0w46yv36h1wjmilb09n8aimdpivdymscx/lib" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; makeFlags = [ "usrbin_execdir=/04f3da1kmbr67m3gzxikmsl4vjz5zf777sv6m14ahv22r65aac9m/bin" "usrlib_execdir=/0sra2y18lr3h6j58qjm0w46yv36h1wjmilb09n8aimdpivdymscx/lib" "usrsbin_execdir=/04f3da1kmbr67m3gzxikmsl4vjz5zf777sv6m14ahv22r65aac9m/sbin" ]; mesonFlags = [ ]; name = "util-linux-minimal-2.38.1"; nativeBuildInputs = [ «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "bin" "dev" "out" "lib" "man" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/util-linux/rtcwake-search-PATH-for-shutdown.patch ]; pname = "util-linux-minimal"; postPatch = "patchShebangs tests/run.sh\n\nsubstituteInPlace include/pathnames.h \\\n  --replace \"/bin/login\" \"/nix/store/1jjcrs7559d3x46qfs25k8x82ikdlq95-shadow-4.11.1/bin/login\"\nsubstituteInPlace sys-utils/eject.c \\\n  --replace \"/bin/umount\" \"$bin/bin/umount\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "util-linux-2.38.1.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-YEkqGbRObPmj3f9oMlszO4tStsWc4+vWoOyqTFEX6E8="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://kernel/linux/utils/util-linux/v2.38/util-linux-2.38.1.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "util-linux-2.38.1.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/hnfbys6sbf1ykzf0s7832gcwxsyq1bii-util-linux-2.38.1.tar.xz"; outputHash = "sha256-YEkqGbRObPmj3f9oMlszO4tStsWc4+vWoOyqTFEX6E8="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://kernel/linux/utils/util-linux/v2.38/util-linux-2.38.1.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://kernel/linux/utils/util-linux/v2.38/util-linux-2.38.1.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.38.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; lib = <CODE>; makeFlags = «repeated»; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "util-linux-minimal-2.38.1"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/j4icg34wk0ws63vg7sv6s6f64x3mf7aw-util-linux-minimal-2.38.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "util-linux-minimal"; postPatch = "patchShebangs tests/run.sh\n\nsubstituteInPlace include/pathnames.h \\\n  --replace \"/bin/login\" \"/nix/store/1jjcrs7559d3x46qfs25k8x82ikdlq95-shadow-4.11.1/bin/login\"\nsubstituteInPlace sys-utils/eject.c \\\n  --replace \"/bin/umount\" \"$bin/bin/umount\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.38.1"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "python3 -m pytest test/\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "python3 -m pytest test/\n"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "fuse-2.9.9"; nativeBuildInputs = [ «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "914871b20a901e3e1e981c92bc42b1c93b7ab81b.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1w4j6f1awjrycycpvmlv0x5v9gprllh4dnbjxl4dyl2jgbkaw6pa"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libfuse/libfuse/commit/914871b20a901e3e1e981c92bc42b1c93b7ab81b.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "914871b20a901e3e1e981c92bc42b1c93b7ab81b.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/pv08dmxcy4k097m9qnpsjzv4m843zwcz-914871b20a901e3e1e981c92bc42b1c93b7ab81b.patch"; outputHash = "1w4j6f1awjrycycpvmlv0x5v9gprllh4dnbjxl4dyl2jgbkaw6pa"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/libfuse/libfuse/commit/914871b20a901e3e1e981c92bc42b1c93b7ab81b.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libfuse/libfuse/commit/914871b20a901e3e1e981c92bc42b1c93b7ab81b.patch"; urls = «repeated»; userHook = null; } /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/os-specific/linux/fuse/fuse2-Do-not-set-FUSERMOUNT_DIR.patch { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "fuse-2.9.9-closefrom-glibc-2-34.patch?id=8a970396fca7aca2d5a761b8e7a8242f1eef14c9"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-ELYBW/wxRcSMssv7ejCObrpsJHtOPJcGq33B9yHQII4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://gitweb.gentoo.org/repo/gentoo.git/plain/sys-fs/fuse/files/fuse-2.9.9-closefrom-glibc-2-34.patch?id=8a970396fca7aca2d5a761b8e7a8242f1eef14c9" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "fuse-2.9.9-closefrom-glibc-2-34.patch?id=8a970396fca7aca2d5a761b8e7a8242f1eef14c9"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/mpn2y03smmrymy9y66af5kaib9bvfpai-fuse-2.9.9-closefrom-glibc-2-34.patch?id=8a970396fca7aca2d5a761b8e7a8242f1eef14c9"; outputHash = "sha256-ELYBW/wxRcSMssv7ejCObrpsJHtOPJcGq33B9yHQII4="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://gitweb.gentoo.org/repo/gentoo.git/plain/sys-fs/fuse/files/fuse-2.9.9-closefrom-glibc-2-34.patch?id=8a970396fca7aca2d5a761b8e7a8242f1eef14c9"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://gitweb.gentoo.org/repo/gentoo.git/plain/sys-fs/fuse/files/fuse-2.9.9-closefrom-glibc-2-34.patch?id=8a970396fca7aca2d5a761b8e7a8242f1eef14c9"; urls = «repeated»; userHook = null; } ]; pname = "fuse"; postFixup = "cd $out\ncp /nix/store/fdiydxg2vb8nc23avz670fz3666fxjia-fuse-3.11.0-common/etc/fuse.conf etc/fuse.conf\ncp /nix/store/fdiydxg2vb8nc23avz670fz3666fxjia-fuse-3.11.0-common/etc/udev/rules.d/99-fuse.rules etc/udev/rules.d/99-fuse.rules\n"; preAutoreconf = "touch config.rpath"; preConfigure = "export MOUNT_FUSE_PATH=$out/sbin\nexport INIT_D_PATH=$TMPDIR/etc/init.d\nexport UDEV_RULES_PATH=$out/etc/udev/rules.d\n\n# Ensure that FUSE calls the setuid wrapper, not\n# $out/bin/fusermount. It falls back to calling fusermount in\n# $PATH, so it should also work on non-NixOS systems.\nexport NIX_CFLAGS_COMPILE=\"-DFUSERMOUNT_DIR=\\\"/run/wrappers/bin\\\"\"\n\nsubstituteInPlace lib/mount_util.c --replace \"/bin/\" \"/nix/store/qz7dv83c3y8fb1lqfx698ycxpxi474js-util-linux-minimal-2.38.1-bin/bin/\"\nsubstituteInPlace util/mount.fuse.c --replace '\"su\"' '\"/nix/store/7lnncalqsd1g6d0hbjxy7wx9n54kfdkg-shadow-4.11.1-su/bin/su\"'\nsed -e 's@CONFIG_RPATH=/usr/share/gettext/config.rpath@CONFIG_RPATH=/nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21/share/gettext/config.rpath@' -i makeconf.sh\n./makeconf.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1yxxvm58c30pc022nl1wlg8fljqpmwnchkywic3r74zirvlcq23n"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/fuse-2.9.9.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libfuse/libfuse/archive/fuse-2.9.9.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9ddl0gpd6blir4axhsj8wdzv00w4fwk5-source"; outputHash = "1yxxvm58c30pc022nl1wlg8fljqpmwnchkywic3r74zirvlcq23n"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "libfuse"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/libfuse/libfuse/archive/fuse-2.9.9.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/fuse-2.9.9.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "libfuse"; rev = "fuse-2.9.9"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libfuse/libfuse/archive/fuse-2.9.9.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.9.9"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "fuse-2.9.9"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/5qy19ncm0r1dlzi0snvc1s4n9p82rg80-fuse-2.9.9"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "fuse"; postFixup = "cd $out\ncp /nix/store/fdiydxg2vb8nc23avz670fz3666fxjia-fuse-3.11.0-common/etc/fuse.conf etc/fuse.conf\ncp /nix/store/fdiydxg2vb8nc23avz670fz3666fxjia-fuse-3.11.0-common/etc/udev/rules.d/99-fuse.rules etc/udev/rules.d/99-fuse.rules\n"; preAutoreconf = "touch config.rpath"; preConfigure = "export MOUNT_FUSE_PATH=$out/sbin\nexport INIT_D_PATH=$TMPDIR/etc/init.d\nexport UDEV_RULES_PATH=$out/etc/udev/rules.d\n\n# Ensure that FUSE calls the setuid wrapper, not\n# $out/bin/fusermount. It falls back to calling fusermount in\n# $PATH, so it should also work on non-NixOS systems.\nexport NIX_CFLAGS_COMPILE=\"-DFUSERMOUNT_DIR=\\\"/run/wrappers/bin\\\"\"\n\nsubstituteInPlace lib/mount_util.c --replace \"/bin/\" \"/nix/store/qz7dv83c3y8fb1lqfx698ycxpxi474js-util-linux-minimal-2.38.1-bin/bin/\"\nsubstituteInPlace util/mount.fuse.c --replace '\"su\"' '\"/nix/store/7lnncalqsd1g6d0hbjxy7wx9n54kfdkg-shadow-4.11.1-su/bin/su\"'\nsed -e 's@CONFIG_RPATH=/usr/share/gettext/config.rpath@CONFIG_RPATH=/nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21/share/gettext/config.rpath@' -i makeconf.sh\n./makeconf.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.9.9"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-elf-shlibs" "--enable-symlink-install" "--enable-relative-symlinks" "--with-crond-dir=no" "--disable-fsck" "--disable-libblkid" "--disable-libuuid" "--disable-uuidd" ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "e2fsprogs-1.46.5"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputs = [ "bin" "dev" "out" "man" "info" "fuse2fs" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2022-1304.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-YEEow34/81NBOc6F6FS6i505FCQ7GHeIz0a0qWNs7Fg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/patch/?id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2022-1304.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/0r8kmh1rqc5gah5jks26jgml2ydrkd29-CVE-2022-1304.patch"; outputHash = "sha256-YEEow34/81NBOc6F6FS6i505FCQ7GHeIz0a0qWNs7Fg="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/patch/?id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git/patch/?id=ab51d587bb9b229b1fade1afd02e1574c1ba5c76"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "fix-glibcism.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1gfcsr0i3q8q2f0lqza8na0iy4l4p3cbii51ds6zmj0y4hz2dwhb"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n  --addoldprefix=a/'' \\\n--addnewprefix=b/'' \\\n \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n  -x 'lib/ext2fs/hashmap.h' \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://raw.githubusercontent.com/void-linux/void-packages/9583597eb3e6e6b33f61dbc615d511ce030bc443/srcpkgs/e2fsprogs/patches/fix-glibcism.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "fix-glibcism.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/3nha5ybszibf33zwbln7lvls271spba2-fix-glibcism.patch"; outputHash = "1gfcsr0i3q8q2f0lqza8na0iy4l4p3cbii51ds6zmj0y4hz2dwhb"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://raw.githubusercontent.com/void-linux/void-packages/9583597eb3e6e6b33f61dbc615d511ce030bc443/srcpkgs/e2fsprogs/patches/fix-glibcism.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n  --addoldprefix=a/'' \\\n--addnewprefix=b/'' \\\n \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n  -x 'lib/ext2fs/hashmap.h' \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://raw.githubusercontent.com/void-linux/void-packages/9583597eb3e6e6b33f61dbc615d511ce030bc443/srcpkgs/e2fsprogs/patches/fix-glibcism.patch"; urls = «repeated»; userHook = null; } ]; pname = "e2fsprogs"; postInstall = "# avoid cycle between outputs\nif [ -f $out/lib/e2fsprogs/e2scrub_all_cron ]; then\n  mv $out/lib/e2fsprogs/e2scrub_all_cron $bin/bin/\nfi\nmkdir -p $fuse2fs/bin\nmv $bin/bin/fuse2fs $fuse2fs/bin/fuse2fs\n"; postPatch = "# Remove six failing tests\n# https://github.com/NixOS/nixpkgs/issues/65471\nfor test in m_image_mmp m_mmp m_mmp_bad_csum m_mmp_bad_magic t_mmp_1on t_mmp_2off; do\n    rm -r \"tests/$test\"\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "e2fsprogs-1.46.5.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1fgvwbj9ihz5svzrd2l0s18k16r4qg3wimrniv71fn3vdcg0shxp"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/e2fsprogs/e2fsprogs-1.46.5.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "e2fsprogs-1.46.5.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/yz9g5ph70mjynkbxggrg1yqq5mrzdz66-e2fsprogs-1.46.5.tar.gz"; outputHash = "1fgvwbj9ihz5svzrd2l0s18k16r4qg3wimrniv71fn3vdcg0shxp"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/e2fsprogs/e2fsprogs-1.46.5.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/e2fsprogs/e2fsprogs-1.46.5.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.46.5"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; fuse2fs = <CODE>; info = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "e2fsprogs-1.46.5"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/35ijp6d0k1jczw78h8c95bhf4ic8ykqj-e2fsprogs-1.46.5-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = «repeated»; pname = "e2fsprogs"; postInstall = "# avoid cycle between outputs\nif [ -f $out/lib/e2fsprogs/e2scrub_all_cron ]; then\n  mv $out/lib/e2fsprogs/e2scrub_all_cron $bin/bin/\nfi\nmkdir -p $fuse2fs/bin\nmv $bin/bin/fuse2fs $fuse2fs/bin/fuse2fs\n"; postPatch = "# Remove six failing tests\n# https://github.com/NixOS/nixpkgs/issues/65471\nfor test in m_image_mmp m_mmp m_mmp_bad_csum m_mmp_bad_magic t_mmp_1on t_mmp_2off; do\n    rm -r \"tests/$test\"\ndone\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "1.46.5"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--exec-prefix=/02qcpld1y6xhs5gz9bchpxaw0xdhmsp5dv88lh25r2ss44kh8dxz" "--disable-static" "--enable-shared" "--without-icu" "--with-python" "PYTHON=/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installFlags = [ "pythondir=\"/16f85nn0fvs5r3pq0vgpg1jy8p59db0fs7kglwjp9dwdkygd4vbk/lib/python3.10/site-packages\"" "pyexecdir=\"/16f85nn0fvs5r3pq0vgpg1jy8p59db0fs7kglwjp9dwdkygd4vbk/lib/python3.10/site-packages\"" ]; mesonFlags = [ ]; name = "libxml2-2.10.3"; nativeBuildInputs = [ «repeated» «repeated» ]; outputMan = "bin"; outputs = [ "bin" "dev" "out" "doc" "py" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/libraries/libxml2/utf8-xmlErrorFuncHandler.patch ]; pname = "libxml2"; postFixup = "moveToOutput bin/xml2-config \"$dev\"\nmoveToOutput lib/xml2Conf.sh \"$dev\"\n"; preCheck = [ ]; preConfigure = "MACOSX_DEPLOYMENT_TARGET=10.16\n"; preInstall = "substituteInPlace python/libxml2mod.la --replace \"$dev/lib/python3.10/site-packages\" \"$py/lib/python3.10/site-packages\"\n"; propagatedBuildInputs = [ «repeated» «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libxml2-2.10.3.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "XSzD14vsPb4hKp1/pimtolp9qSivQyyTBg/1wX7iipw="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnome/sources/libxml2/2.10/libxml2-2.10.3.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libxml2-2.10.3.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/h85zjmnyjivcqq8zgl2l71cq8f1q1sdb-libxml2-2.10.3.tar.xz"; outputHash = "XSzD14vsPb4hKp1/pimtolp9qSivQyyTBg/1wX7iipw="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnome/sources/libxml2/2.10/libxml2-2.10.3.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnome/sources/libxml2/2.10/libxml2-2.10.3.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.10.3"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "libxml2-2.10.3"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/k9063hisa7cgni1ps1vahy8r47s81358-libxml2-2.10.3-bin"; outputMan = "bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonSupport = true; updateScript = <CODE>; version = "2.10.3"; }; patches = «repeated»; pname = "libxml2"; postFixup = "moveToOutput bin/xml2-config \"$dev\"\nmoveToOutput lib/xml2Conf.sh \"$dev\"\n"; preCheck = [ ]; preConfigure = "MACOSX_DEPLOYMENT_TARGET=10.16\n"; preInstall = "substituteInPlace python/libxml2mod.la --replace \"$dev/lib/python3.10/site-packages\" \"$py/lib/python3.10/site-packages\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; py = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "libxml2-2.10.3"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/dkwz8743m4s52lgpsyzqiv3zc1xp3xa2-libxml2-2.10.3-py"; outputMan = "bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "libxml2"; postFixup = "moveToOutput bin/xml2-config \"$dev\"\nmoveToOutput lib/xml2Conf.sh \"$dev\"\n"; preCheck = [ ]; preConfigure = "MACOSX_DEPLOYMENT_TARGET=10.16\n"; preInstall = "substituteInPlace python/libxml2mod.la --replace \"$dev/lib/python3.10/site-packages\" \"$py/lib/python3.10/site-packages\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; py = «repeated»; pythonSupport = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "2.10.3"; }; pythonSupport = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "2.10.3"; }; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; installFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "libxml2-2.10.3"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/gg1y3wpww6bfd65s3najv2ax30hjkhz5-libxml2-2.10.3-dev"; outputMan = "bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = «repeated»; pname = "libxml2"; postFixup = "moveToOutput bin/xml2-config \"$dev\"\nmoveToOutput lib/xml2Conf.sh \"$dev\"\n"; preCheck = [ ]; preConfigure = "MACOSX_DEPLOYMENT_TARGET=10.16\n"; preInstall = "substituteInPlace python/libxml2mod.la --replace \"$dev/lib/python3.10/site-packages\" \"$py/lib/python3.10/site-packages\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; py = «repeated»; pythonSupport = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "2.10.3"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libarchive-3.6.1"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/nvdwv457wzx356c4bv9hx6hrxnpr68qy-autoconf-2.69 /nix/store/imkgqkcy655gasinn2liv7n3k3hfqzzj-automake-1.16.5 /nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21 /nix/store/1mcdcmz3rd8dal1vc7wky21nnsswmpai-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/nix-support\ncp /nix/store/ghdamd4hl6yi7jysh1x3436fj1v9yvjb-autoreconf.sh $out/nix-support/setup-hook\nprintWords /nix/store/nvdwv457wzx356c4bv9hx6hrxnpr68qy-autoconf-2.69 /nix/store/imkgqkcy655gasinn2liv7n3k3hfqzzj-automake-1.16.5 /nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21 /nix/store/1mcdcmz3rd8dal1vc7wky21nnsswmpai-libtool-2.4.7 > $out/nix-support/propagated-build-inputs\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "hook"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "hook"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/qmzqpa9wadymblyhcwcm9rwc3nvszc70-hook"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } «repeated» ]; outputs = [ "out" "lib" "dev" ]; patches = [ ]; pname = "libarchive"; postPatch = "substituteInPlace Makefile.am --replace '/bin/pwd' \"$(type -P pwd)\"\n\ndeclare -a skip_test_paths=(\n  # test won't work in nix sandbox\n  'libarchive/test/test_write_disk_perms.c'\n  # can't be sure builder will have sparse-capable fs\n  'libarchive/test/test_sparse_basic.c'\n  # can't even be sure builder will have hardlink-capable fs\n  'libarchive/test/test_write_disk_hardlink.c'\n  # access-time-related tests flakey on some systems\n  'cpio/test/test_option_a.c'\n  'cpio/test/test_option_t.c'\n)\n\nfor test_path in \"\${skip_test_paths[@]}\" ; do\n  substituteInPlace Makefile.am --replace \"$test_path\" \"\"\n  rm \"$test_path\"\ndone\n"; preBuild = ""; preFixup = "sed -i $lib/lib/libarchive.la \\\n  -e 's|-lcrypto|-L/nix/store/khj6cy6w1fka46m9bsql8yyw157hkb1h-openssl-3.0.7/lib -lcrypto|' \\\n  -e 's|-llzo2|-L/nix/store/pa31m9kpjij8dxyqz0j2n1b0did5qfvx-lzo-2.10/lib -llzo2|'\n"; propagatedBuildInputs = [ «repeated» «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-G4wL5DDbX0FqaA4cnOlVLZ25ObN8dNsRtxyas29tpDA="; outputHashAlgo = null; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v3.6.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libarchive/libarchive/archive/v3.6.1.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/869mfxz7pm5mp229ksgsf4i2hglmkr9a-source"; outputHash = "sha256-G4wL5DDbX0FqaA4cnOlVLZ25ObN8dNsRtxyas29tpDA="; outputHashAlgo = null; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "libarchive"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/libarchive/libarchive/archive/v3.6.1.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v3.6.1.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "libarchive"; rev = "v3.6.1"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libarchive/libarchive/archive/v3.6.1.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.6.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; lib = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libarchive-3.6.1"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/lkk7ly0qfhlqza6l5m4fxb148r89nid1-libarchive-3.6.1-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { tests = <CODE>; }; patches = [ ]; pname = "libarchive"; postPatch = "substituteInPlace Makefile.am --replace '/bin/pwd' \"$(type -P pwd)\"\n\ndeclare -a skip_test_paths=(\n  # test won't work in nix sandbox\n  'libarchive/test/test_write_disk_perms.c'\n  # can't be sure builder will have sparse-capable fs\n  'libarchive/test/test_sparse_basic.c'\n  # can't even be sure builder will have hardlink-capable fs\n  'libarchive/test/test_write_disk_hardlink.c'\n  # access-time-related tests flakey on some systems\n  'cpio/test/test_option_a.c'\n  'cpio/test/test_option_t.c'\n)\n\nfor test_path in \"\${skip_test_paths[@]}\" ; do\n  substituteInPlace Makefile.am --replace \"$test_path\" \"\"\n  rm \"$test_path\"\ndone\n"; preBuild = ""; preFixup = "sed -i $lib/lib/libarchive.la \\\n  -e 's|-lcrypto|-L/nix/store/khj6cy6w1fka46m9bsql8yyw157hkb1h-openssl-3.0.7/lib -lcrypto|' \\\n  -e 's|-llzo2|-L/nix/store/pa31m9kpjij8dxyqz0j2n1b0did5qfvx-lzo-2.10/lib -llzo2|'\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "3.6.1"; } «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libuv-1.44.2"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "libuv"; postPatch = "sed '/getnameinfo_basic\\|udp_send_hang_loop\\|tcp_connect_timeout\\|spawn_setuid_fails\\|spawn_setgid_fails\\|fs_chown\\|getaddrinfo_fail\\|getaddrinfo_fail_sync\\|threadpool_multiple_event_loops\\|get_passwd\\|tcp_writealot\\|udp_multicast_join\\|udp_multicast_join6\\|fs_fstat/d' -i test/test-list.h\n"; preConfigure = "LIBTOOLIZE=libtoolize ./autogen.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-K6v+00basjI32ON27ZjC5spQi/zWCcslDwQwyosq2iY="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.44.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/libuv/libuv/archive/v1.44.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/61k994863013giis21bfzwwsf6nr9l87-source"; outputHash = "sha256-K6v+00basjI32ON27ZjC5spQi/zWCcslDwQwyosq2iY="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "libuv"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/libuv/libuv/archive/v1.44.2.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.44.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "libuv"; rev = "v1.44.2"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/libuv/libuv/archive/v1.44.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.44.2"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libuv-1.44.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/8jra6c7z0pgwhi9zz6hs4v20pk9sbpaf-libuv-1.44.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "libuv"; postPatch = "sed '/getnameinfo_basic\\|udp_send_hang_loop\\|tcp_connect_timeout\\|spawn_setuid_fails\\|spawn_setgid_fails\\|fs_chown\\|getaddrinfo_fail\\|getaddrinfo_fail_sync\\|threadpool_multiple_event_loops\\|get_passwd\\|tcp_writealot\\|udp_multicast_join\\|udp_multicast_join6\\|fs_fstat/d' -i test/test-list.h\n"; preConfigure = "LIBTOOLIZE=libtoolize ./autogen.sh\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.44.2"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test-full"; cmakeFlags = [ ]; configureFlags = [ "--ar=ar" "--target=aarch64-unknown-linux-gnu" "--disable-static" "--disable-lib-static" ]; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkTarget = "test-full"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; dontAddStaticConfigureFlags = true; installTargets = [ "install" "install-lib-headers" "install-lib-so-link" ]; mesonFlags = [ ]; name = "rhash-1.4.2"; nativeBuildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "which-2.21"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "which"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "which-2.21.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1bgafvy3ypbhhfznwjv1lxmd6mci3x1byilnnkc7gcr486wlb8pl"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/which/which-2.21.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "which-2.21.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/349f140sh7m12vy9mp1wkp58axyp06c9-which-2.21.tar.gz"; outputHash = "1bgafvy3ypbhhfznwjv1lxmd6mci3x1byilnnkc7gcr486wlb8pl"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/which/which-2.21.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/which/which-2.21.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "2.21"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "which-2.21"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/2dwfj3xwxa0773kzy3016s1kvqdc7y7a-which-2.21"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "which"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.21"; } ]; outputs = [ "out" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "4dc506066cf1727b021e6352535a8bb315c3f8dc.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0i5jz2s37h278c8d36pzphhp8rjy660zmhpg2cqlp960f6ny8wwj"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/rhash/RHash/commit/4dc506066cf1727b021e6352535a8bb315c3f8dc.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "4dc506066cf1727b021e6352535a8bb315c3f8dc.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/rx7jis0lng2qhc41bsblvl14y6lbs6an-4dc506066cf1727b021e6352535a8bb315c3f8dc.patch"; outputHash = "0i5jz2s37h278c8d36pzphhp8rjy660zmhpg2cqlp960f6ny8wwj"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/rhash/RHash/commit/4dc506066cf1727b021e6352535a8bb315c3f8dc.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/rhash/RHash/commit/4dc506066cf1727b021e6352535a8bb315c3f8dc.patch"; urls = «repeated»; userHook = null; } ]; pname = "rhash"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-HkDgWwHoRWCNtWyfP4sj3veEd+KT5J7yL4J4Z/hJcrE="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.4.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/rhash/RHash/archive/v1.4.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/fnal4hkk5sm9r48wg5vif38p021dqzw3-source"; outputHash = "sha256-HkDgWwHoRWCNtWyfP4sj3veEd+KT5J7yL4J4Z/hJcrE="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "rhash"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/rhash/RHash/archive/v1.4.2.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.4.2.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "RHash"; rev = "v1.4.2"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/rhash/RHash/archive/v1.4.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.4.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; installTargets = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "rhash-1.4.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/j6772lniddwl4z10ywjag3dh5mcdy96j-rhash-1.4.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "rhash"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.4.2"; } «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "CXXFLAGS=-Wno-elaborated-enum-base" "--docdir=share/doc/cmake3.24.3" "--no-system-jsoncpp" "--system-libs" "--" "-DCMAKE_CXX_COMPILER=c++" "-DCMAKE_C_COMPILER=cc" "-DCMAKE_AR=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/ar" "-DCMAKE_RANLIB=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/ranlib" "-DCMAKE_STRIP=/nix/store/cwivsnh1p591x7yydynrz0xc1zcq54p3-binutils-2.39/bin/strip" "-DCMAKE_USE_OPENSSL=ON" "-DBUILD_CursesDialog=OFF" ]; configurePlatforms = [ ]; depsBuildBuild = [ «repeated» ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontUseCmakeConfigure = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; configurePlatforms = [ ]; depsBuildBuild = «repeated»; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontUseCmakeConfigure = true; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "cmake-3.24.3"; nativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/setup-hook.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/check-pc-files-hook.sh «repeated» ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/001-search-path.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/002-application-services.diff /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/003-libuv-application-services.diff ]; pname = "cmake"; preConfigure = "fixCmakeFiles .\nsubstituteInPlace Modules/Platform/UnixPaths.cmake \\\n  --subst-var-by libc_bin /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin \\\n  --subst-var-by libc_dev /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev \\\n  --subst-var-by libc_lib /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\n# CC_FOR_BUILD and CXX_FOR_BUILD are used to bootstrap cmake\nconfigureFlags=\"--parallel=\${NIX_BUILD_CORES:-1} CC=$CC_FOR_BUILD CXX=$CXX_FOR_BUILD $configureFlags\"\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHooks = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/setup-hook.sh /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/development/tools/build-managers/cmake/check-pc-files-hook.sh ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "cmake-3.24.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-tTqhD6gr/4TM21kGWSe3LTvuSfTYYmEkn8CYSzs2cpE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://cmake.org/files/v3.24/cmake-3.24.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "cmake-3.24.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/f0xrsnqbid1qzgxvr06af7m9k6l08z5g-cmake-3.24.3.tar.gz"; outputHash = "sha256-tTqhD6gr/4TM21kGWSe3LTvuSfTYYmEkn8CYSzs2cpE="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://cmake.org/files/v3.24/cmake-3.24.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://cmake.org/files/v3.24/cmake-3.24.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.24.3"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "cmake-3.24.3"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/p176z6kq3z556a6nk9smwrbv0p8rn9pb-cmake-3.24.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "cmake"; preConfigure = "fixCmakeFiles .\nsubstituteInPlace Modules/Platform/UnixPaths.cmake \\\n  --subst-var-by libc_bin /nix/store/sh4mzx5ghnxgs171nfrv46fwzh6aibh1-glibc-2.35-224-bin \\\n  --subst-var-by libc_dev /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev \\\n  --subst-var-by libc_lib /nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224\n# CC_FOR_BUILD and CXX_FOR_BUILD are used to bootstrap cmake\nconfigureFlags=\"--parallel=\${NIX_BUILD_CORES:-1} CC=$CC_FOR_BUILD CXX=$CXX_FOR_BUILD $configureFlags\"\n"; preInstall = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setOutputFlags = false; setupHooks = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "3.24.3"; } ]; outputs = [ "out" "dev" "lib" ]; patches = [ ]; pname = "brotli"; postInstall = "mkdir -p $out/share/man/man{1,3}\ncp ../docs/*.1 $out/share/man/man1/\ncp ../docs/*.3 $out/share/man/man3/\n"; prePatch = "rm BUILD\n\n# Upstream fixed this reference to runtime-path after the release\n# and with this references g++ complains about invalid option -R\nsed -i 's/ -R\${libdir}//' scripts/libbrotli*.pc.in\ncat scripts/libbrotli*.pc.in\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "z6Dhrabav1MDQ4rAcXaDv0aN+qOoh9cvoXZqEWBB13c="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.0.9.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/google/brotli/archive/v1.0.9.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/61r295wfix78k9lv7ldbd7a9jl1gz512-source"; outputHash = "z6Dhrabav1MDQ4rAcXaDv0aN+qOoh9cvoXZqEWBB13c="; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "google"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/google/brotli/archive/v1.0.9.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/v1.0.9.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "brotli"; rev = "v1.0.9"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/google/brotli/archive/v1.0.9.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.0.9"; }; drvPath = <CODE>; inputDerivation = <CODE>; lib = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "brotli-1.0.9"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/06y8njfl7gbbjg1d2a1qh08lf2brnl6w-brotli-1.0.9-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "brotli"; postInstall = "mkdir -p $out/share/man/man{1,3}\ncp ../docs/*.1 $out/share/man/man1/\ncp ../docs/*.3 $out/share/man/man3/\n"; prePatch = "rm BUILD\n\n# Upstream fixed this reference to runtime-path after the release\n# and with this references g++ complains about invalid option -R\nsed -i 's/ -R\${libdir}//' scripts/libbrotli*.pc.in\ncat scripts/libbrotli*.pc.in\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.0.9"; } «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildCommand = "cp -r '/nix/store/psl9w5nkzbymzw6y36gh4mfiji0i1kp7-libidn2-2.3.2-bin' \"$bin\"\nchmod +w \"$bin\"/bin/*\npatchelf \\\n  --set-interpreter '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1' \\\n  --set-rpath '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib:/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0/lib:/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib' \\\n  \"$bin\"/bin/*\n\ncp -r '/nix/store/r6v0jq0fms61lcmkpl2y5584ivh7m4z8-libidn2-2.3.2-dev' \"$dev\"\nchmod +w \"$dev\"/nix-support/propagated-build-inputs\nsubstituteInPlace \"$dev\"/nix-support/propagated-build-inputs \\\n  --replace '/nix/store/psl9w5nkzbymzw6y36gh4mfiji0i1kp7-libidn2-2.3.2-bin' \"$bin\"\nsubstituteInPlace \"$dev\"/lib/pkgconfig/libidn2.pc \\\n  --replace '/nix/store/r6v0jq0fms61lcmkpl2y5584ivh7m4z8-libidn2-2.3.2-dev' \"$dev\"\n\nln -s '/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2' \"$out\" # it's hard to be without any $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildCommand = "cp -r '/nix/store/psl9w5nkzbymzw6y36gh4mfiji0i1kp7-libidn2-2.3.2-bin' \"$bin\"\nchmod +w \"$bin\"/bin/*\npatchelf \\\n  --set-interpreter '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib/ld-linux-aarch64.so.1' \\\n  --set-rpath '/nix/store/hc3db8k7svnz6zyhhqx8srjabkb6ij1q-glibc-2.35-224/lib:/nix/store/sam6f5k16n40d5x1a7dnby0air32z8lj-libunistring-1.0/lib:/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2/lib' \\\n  \"$bin\"/bin/*\n\ncp -r '/nix/store/r6v0jq0fms61lcmkpl2y5584ivh7m4z8-libidn2-2.3.2-dev' \"$dev\"\nchmod +w \"$dev\"/nix-support/propagated-build-inputs\nsubstituteInPlace \"$dev\"/nix-support/propagated-build-inputs \\\n  --replace '/nix/store/psl9w5nkzbymzw6y36gh4mfiji0i1kp7-libidn2-2.3.2-bin' \"$bin\"\nsubstituteInPlace \"$dev\"/lib/pkgconfig/libidn2.pc \\\n  --replace '/nix/store/r6v0jq0fms61lcmkpl2y5584ivh7m4z8-libidn2-2.3.2-dev' \"$dev\"\n\nln -s '/nix/store/wx906mwfnhyp6fd0bqjn0hzx13g0zjw9-libidn2-2.3.2' \"$out\" # it's hard to be without any $out\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "libidn2-2.3.2"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; info = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libidn2-2.3.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/89k3dylbazh54nqavda80ii4dc8mir9v-libidn2-2.3.2-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { devdoc = <CODE>; info = <CODE>; out = «repeated»; }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; } «repeated» «repeated» «repeated» «repeated» ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "curl-7.86.0.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-9cpp2wPuoX+ocFvfsan1jXakbJAQUYEJuzjzExN+Cig="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://curl.haxx.se/download/curl-7.86.0.tar.bz2" "https://github.com/curl/curl/releases/download/curl-7.86.0/curl-7.86.0.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "curl-7.86.0.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/6ash7mk958rrc6h08rncj14rbsqr5arp-curl-7.86.0.tar.bz2"; outputHash = "sha256-9cpp2wPuoX+ocFvfsan1jXakbJAQUYEJuzjzExN+Cig="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = ""; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = ""; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "7.86.0"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "curl-7.86.0"; nativeBuildInputs = «repeated»; openssl = «repeated»; opensslSupport = true; out = <CODE>; outPath = "/nix/store/gwd18vbdqbx0k11s8p7zrhxn3wzjwy2x-curl-7.86.0-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { openssl = «repeated»; opensslSupport = true; tests = <CODE>; }; patches = «repeated»; pname = "curl"; postInstall = "moveToOutput bin/curl-config \"$dev\"\n\n# Install completions\nmake -C scripts install\nsed '/^dependency_libs/s|/nix/store/kxga97rjlq0mq9fr6rizak5gmljw59d6-libssh2-1.10.0-dev|/nix/store/p7i0wva599jankb4dgy246i3zgcxma04-libssh2-1.10.0|' -i \"$out\"/lib/*.la\n"; preCheck = "patchShebangs tests/\n"; preConfigure = "sed -e 's|/usr/bin|/no-such-path|g' -i.bak configure\nrm src/tool_hugehelp.c\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "7.86.0"; } «repeated» «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "cpio-2.13"; nativeBuildInputs = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "debug" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2021-38185-1.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0vmr0qjwj2ldnzsvccl105ckwgx3ssvn9mp3f27ss0kiyigrzz32"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=dd96882877721703e19272fe25034560b794061b" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2021-38185-1.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/w8vah9dvrl4s6gvk4901dhwmrq2i6qpz-CVE-2021-38185-1.patch"; outputHash = "0vmr0qjwj2ldnzsvccl105ckwgx3ssvn9mp3f27ss0kiyigrzz32"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=dd96882877721703e19272fe25034560b794061b"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=dd96882877721703e19272fe25034560b794061b"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2021-38185-2.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1qkrhi3lbxk6hflp6w3h4sgssc0wblv8r0qgxqzbjrm36pqwxiwh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=dfc801c44a93bed7b3951905b188823d6a0432c8" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2021-38185-2.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/77v8hkqyhkvpxzw9qjcn79sy4ni0dzpf-CVE-2021-38185-2.patch"; outputHash = "1qkrhi3lbxk6hflp6w3h4sgssc0wblv8r0qgxqzbjrm36pqwxiwh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=dfc801c44a93bed7b3951905b188823d6a0432c8"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=dfc801c44a93bed7b3951905b188823d6a0432c8"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "CVE-2021-38185-3.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0pidkbxalpj5yz4fr95x8h0rizgjij0xgvjgirfkjk460giawwg6"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=236684f6deb3178043fe72a8e2faca538fa2aae1" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "CVE-2021-38185-3.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/s6qs7177l83ra8z7knssd6a1bq4p0i58-CVE-2021-38185-3.patch"; outputHash = "0pidkbxalpj5yz4fr95x8h0rizgjij0xgvjgirfkjk460giawwg6"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=236684f6deb3178043fe72a8e2faca538fa2aae1"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=236684f6deb3178043fe72a8e2faca538fa2aae1"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "fno-common-fix.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1ffawzxjw72kzpdwffi2y7pvibrmwf4jzrxdq9f4a75q6crl66iq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=641d3f489cf6238bb916368d4ba0d9325a235afb" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "fno-common-fix.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/dwmri6gq6g5jyvbz94i5cdxrg6p7zn26-fno-common-fix.patch"; outputHash = "1ffawzxjw72kzpdwffi2y7pvibrmwf4jzrxdq9f4a75q6crl66iq"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=641d3f489cf6238bb916368d4ba0d9325a235afb"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://git.savannah.gnu.org/cgit/cpio.git/patch/?id=641d3f489cf6238bb916368d4ba0d9325a235afb"; urls = «repeated»; userHook = null; } ]; pname = "cpio"; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "cpio-2.13.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0vbgnhkawdllgnkdn6zn1f56fczwk0518krakz2qbwhxmv2vvdga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/cpio/cpio-2.13.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "cpio-2.13.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/1f3g83maxsjcpa7lgsxv4i52fqszldp7-cpio-2.13.tar.bz2"; outputHash = "0vbgnhkawdllgnkdn6zn1f56fczwk0518krakz2qbwhxmv2vvdga"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/cpio/cpio-2.13.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/cpio/cpio-2.13.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "2.13"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "cpio-2.13"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/dw2g77r3xqixb569kag4pnvcsjh81vyx-cpio-2.13"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "cpio"; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "2.13"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildCommand = "mkdir -p $out/include\nln -sv /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include/iconv.h $out/include\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildCommand = "mkdir -p $out/include\nln -sv /nix/store/fwc8330z3yk4m3npi5n01qvxyvhn7rsc-glibc-2.35-224-dev/include/iconv.h $out/include\n"; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; mesonFlags = [ ]; name = "glibc-iconv-2.35"; nativeBuildInputs = [ ]; outputs = [ "out" ]; passAsFile = [ "buildCommand" ]; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "glibc-iconv-2.35"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/x72ya9v5gha3k86ir0mry0c3m2dnk7s1-glibc-iconv-2.35"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passAsFile = «repeated»; passthru = { }; patches = [ ]; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; } «repeated» «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = <CODE>; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--enable-pcre2-16" "--enable-pcre2-32" "--enable-jit=auto" "--enable-jit-sealloc" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "pcre2-10.40"; nativeBuildInputs = [ ]; outputs = [ "bin" "dev" "out" "doc" "man" "devdoc" ]; patches = [ ]; pname = "pcre2"; postFixup = "moveToOutput bin/pcre2-config \"$dev\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "pcre2-10.40.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-FOS4PEeDkz3BfpZDGOYyT3yuG8ddjzx5vGlp8AwVnWg="; outputHashAlgo = null; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/PhilipHazel/pcre2/releases/download/pcre2-10.40/pcre2-10.40.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "pcre2-10.40.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/l3j0w65v4ahdv5b56r64pgv14zaapd05-pcre2-10.40.tar.bz2"; outputHash = "sha256-FOS4PEeDkz3BfpZDGOYyT3yuG8ddjzx5vGlp8AwVnWg="; outputHashAlgo = null; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/PhilipHazel/pcre2/releases/download/pcre2-10.40/pcre2-10.40.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/PhilipHazel/pcre2/releases/download/pcre2-10.40/pcre2-10.40.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "10.40"; }; drvPath = <CODE>; inputDerivation = <CODE>; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "pcre2-10.40"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/p03nmbllcpc24bh6z0fmlip0rngck9b4-pcre2-10.40-dev"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "pcre2"; postFixup = "moveToOutput bin/pcre2-config \"$dev\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "10.40"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "ac_cv_prog_CURL_CONFIG=/nix/store/gwd18vbdqbx0k11s8p7zrhxn3wzjwy2x-curl-7.86.0-dev/bin/curl-config" ]; debug = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = true; doc = <CODE>; drvAttrs = { NIX_HARDENING_ENABLE = «repeated»; NIX_LDFLAGS = "-lgcc_s"; __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = true; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = [ "format" ]; installCheckFlags = [ "DEFAULT_TEST_TARGET=prove" "PERL_PATH=/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl" ]; installCheckTarget = "test"; installFlags = [ "NO_INSTALL_HARDLINKS=1" ]; makeFlags = [ "prefix=\${out}" "SHELL_PATH=/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash" "PERL_PATH=/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl" "PYTHON_PATH=/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python" "sysconfdir=/etc" "USE_LIBPCRE2=1" ]; mesonFlags = [ ]; name = "git-2.38.1"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = true; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ ]; doCheck = false; doInstallCheck = true; installCheckPhase = "runHook preCheck\n\nmake test\n\nrunHook postCheck\n"; mesonFlags = [ ]; name = "asciidoc-10.2.0"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "asciidoc"; postBuild = "make manpages\n"; postFixup = "wrapPythonPrograms\n"; postInstall = "installManPage doc/asciidoc.1 doc/a2x.1 doc/testasciidoc.1\n"; postPatch = "mkdir -p \"$out/etc/asciidoc/filters\"\nmkdir -p \"$out/etc/asciidoc/backends\"\nsed -e \"s|^ENV =.*|ENV = dict(XML_CATALOG_FILES='/nix/store/gxazmmqk00q43f1dv66pabc4sb4k68vk-docbook-xml-4.5/xml/dtd/docbook/catalog.xml /nix/store/qgimynpdgk9p7qzzn56lvb1f8r6snyr0-docbook-xsl-ns-1.79.2/xml/xsl/docbook/catalog.xml /nix/store/r6n5yn9siq5yzcsvjhn5frlsx0fm8nk8-docbook-xsl-nons-1.79.2/xml/xsl/docbook/catalog.xml', **(dict(filter(lambda v: v[0] == 'SOURCE_DATE_EPOCH', os.environ.items()))))|\" \\\n    -e \"s|^XSLTPROC =.*|XSLTPROC = '/nix/store/mja4k5szb037462ccyj34nkrmkcnbgkf-libxslt-1.1.37-bin/bin/xsltproc'|\" \\\n    -e \"s|^XMLLINT =.*|XMLLINT = '/nix/store/k9063hisa7cgni1ps1vahy8r47s81358-libxml2-2.10.3-bin/bin/xmllint'|\" \\\n    -i asciidoc/a2x.py\n# Fix tests\nfor f in $(grep -R --files-with-matches \"2002-11-25\") ; do\n  substituteInPlace $f --replace \"2002-11-25\" \"1980-01-02\"\n  substituteInPlace $f --replace \"00:37:42\" \"00:00:00\"\ndone\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = true; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-TqC0x9xB6e2d6Wc9bgnlqgZVOmYHmUUKfE/CKAiEtag="; outputHashAlgo = null; outputHashMode = "recursive"; outputs = [ "out" ]; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/10.2.0.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/asciidoc-py/asciidoc-py/archive/10.2.0.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; gitRepoUrl = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "source"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/mnqvckww4wdfcjl41sk4q18rf8mhrknf-source"; outputHash = "sha256-TqC0x9xB6e2d6Wc9bgnlqgZVOmYHmUUKfE/CKAiEtag="; outputHashAlgo = null; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; owner = "asciidoc-py"; passthru = { gitRepoUrl = <CODE>; url = "https://github.com/asciidoc-py/asciidoc-py/archive/10.2.0.tar.gz"; }; patches = [ ]; postFetch = "unpackDir=\"$TMPDIR/unpack\"\nmkdir \"$unpackDir\"\ncd \"$unpackDir\"\n\nrenamed=\"$TMPDIR/10.2.0.tar.gz\"\nmv \"$downloadedFile\" \"$renamed\"\nunpackFile \"$renamed\"\nchmod -R +w \"$unpackDir\"\nif [ $(ls -A \"$unpackDir\" | wc -l) != 1 ]; then\n  echo \"error: zip file must contain a single file or directory.\"\n  echo \"hint: Pass stripRoot=false; to fetchzip to assume flat list of files.\"\n  exit 1\nfi\nfn=$(cd \"$unpackDir\" && ls -A)\nif [ -f \"$unpackDir/$fn\" ]; then\n  mkdir $out\nfi\nmv \"$unpackDir/$fn\" \"$out\"\n\n\nchmod 755 \"$out\"\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; repo = "asciidoc-py"; rev = "10.2.0"; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/asciidoc-py/asciidoc-py/archive/10.2.0.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "10.2.0"; }; drvPath = <CODE>; inputDerivation = <CODE>; installCheckPhase = "runHook preCheck\n\nmake test\n\nrunHook postCheck\n"; mesonFlags = [ ]; meta = <CODE>; name = "asciidoc-10.2.0"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/an6yyk55m62bmiknqy8qvwd5libv4rbz-asciidoc-10.2.0"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "asciidoc"; postBuild = "make manpages\n"; postFixup = "wrapPythonPrograms\n"; postInstall = "installManPage doc/asciidoc.1 doc/a2x.1 doc/testasciidoc.1\n"; postPatch = "mkdir -p \"$out/etc/asciidoc/filters\"\nmkdir -p \"$out/etc/asciidoc/backends\"\nsed -e \"s|^ENV =.*|ENV = dict(XML_CATALOG_FILES='/nix/store/gxazmmqk00q43f1dv66pabc4sb4k68vk-docbook-xml-4.5/xml/dtd/docbook/catalog.xml /nix/store/qgimynpdgk9p7qzzn56lvb1f8r6snyr0-docbook-xsl-ns-1.79.2/xml/xsl/docbook/catalog.xml /nix/store/r6n5yn9siq5yzcsvjhn5frlsx0fm8nk8-docbook-xsl-nons-1.79.2/xml/xsl/docbook/catalog.xml', **(dict(filter(lambda v: v[0] == 'SOURCE_DATE_EPOCH', os.environ.items()))))|\" \\\n    -e \"s|^XSLTPROC =.*|XSLTPROC = '/nix/store/mja4k5szb037462ccyj34nkrmkcnbgkf-libxslt-1.1.37-bin/bin/xsltproc'|\" \\\n    -e \"s|^XMLLINT =.*|XMLLINT = '/nix/store/k9063hisa7cgni1ps1vahy8r47s81358-libxml2-2.10.3-bin/bin/xmllint'|\" \\\n    -i asciidoc/a2x.py\n# Fix tests\nfor f in $(grep -R --files-with-matches \"2002-11-25\") ; do\n  substituteInPlace $f --replace \"2002-11-25\" \"1980-01-02\"\n  substituteInPlace $f --replace \"00:37:42\" \"00:00:00\"\ndone\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "10.2.0"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; bin = { __ignoreNulls = true; all = <CODE>; args = «repeated»; bin = «repeated»; buildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-debug" "--without-mem-debug" "--without-debugger" "--with-python" "PYTHON=/nix/store/ar76b3831ydkmfhf0r9v3wbma5i61iz2-python3-3.10.9/bin/python3.10" "--without-crypto" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "libxslt-1.1.37"; nativeBuildInputs = [ «repeated» «repeated» ]; outputMan = "bin"; outputs = [ "bin" "dev" "out" "doc" "devdoc" "py" ]; patches = [ ]; pname = "libxslt"; postFixup = "moveToOutput bin/xslt-config \"$dev\"\nmoveToOutput lib/xsltConf.sh \"$dev\"\nmkdir -p $py/nix-support\necho /nix/store/dkwz8743m4s52lgpsyzqiv3zc1xp3xa2-libxml2-2.10.3-py >> $py/nix-support/propagated-build-inputs\nmoveToOutput lib/python3.10/site-packages \"$py\"\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "libxslt-1.1.37.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "Oksn3IAnzNYUZyWVAzbx7FIJKPMg8UTrX6eZCuYSOrQ="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnome/sources/libxslt/1.1/libxslt-1.1.37.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "libxslt-1.1.37.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/i8r02pai8ck5jp3g7wdldvinhl0rrwrs-libxslt-1.1.37.tar.xz"; outputHash = "Oksn3IAnzNYUZyWVAzbx7FIJKPMg8UTrX6eZCuYSOrQ="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnome/sources/libxslt/1.1/libxslt-1.1.37.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnome/sources/libxslt/1.1/libxslt-1.1.37.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.1.37"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libxslt-1.1.37"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/mja4k5szb037462ccyj34nkrmkcnbgkf-libxslt-1.1.37-bin"; outputMan = "bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { pythonSupport = true; updateScript = <CODE>; }; patches = [ ]; pname = "libxslt"; postFixup = "moveToOutput bin/xslt-config \"$dev\"\nmoveToOutput lib/xsltConf.sh \"$dev\"\nmkdir -p $py/nix-support\necho /nix/store/dkwz8743m4s52lgpsyzqiv3zc1xp3xa2-libxml2-2.10.3-py >> $py/nix-support/propagated-build-inputs\nmoveToOutput lib/python3.10/site-packages \"$py\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; py = <CODE>; pythonSupport = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = "derivation"; updateScript = <CODE>; userHook = null; version = "1.1.37"; }; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; dev = «repeated»; devdoc = <CODE>; doCheck = false; doInstallCheck = false; doc = <CODE>; drvAttrs = «repeated»; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "libxslt-1.1.37"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/vlq0h4vdlpvvlldh7sr4p953srbyf0qj-libxslt-1.1.37-dev"; outputMan = "bin"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = «repeated»; patches = [ ]; pname = "libxslt"; postFixup = "moveToOutput bin/xslt-config \"$dev\"\nmoveToOutput lib/xsltConf.sh \"$dev\"\nmkdir -p $py/nix-support\necho /nix/store/dkwz8743m4s52lgpsyzqiv3zc1xp3xa2-libxml2-2.10.3-py >> $py/nix-support/propagated-build-inputs\nmoveToOutput lib/python3.10/site-packages \"$py\"\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; py = <CODE>; pythonSupport = true; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; updateScript = <CODE>; userHook = null; version = "1.1.37"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installPhase = "find . -type f -exec chmod -x {} \\;\nrunHook postInstall\n"; mesonFlags = [ ]; name = "docbook-xml-4.5"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "docbook-xml"; postInstall = "true"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ «repeated» ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "docbook-xml-4.5.zip"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1d671lcjckjri28xfbf6dq7y3xnkppa910w1jin8rjc35dx06kjf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://docbook.org/xml/4.5/docbook-xml-4.5.zip" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "docbook-xml-4.5.zip"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/xwv40nwrym7sk4x2bavsnnihda5z5qqr-docbook-xml-4.5.zip"; outputHash = "1d671lcjckjri28xfbf6dq7y3xnkppa910w1jin8rjc35dx06kjf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://docbook.org/xml/4.5/docbook-xml-4.5.zip"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://docbook.org/xml/4.5/docbook-xml-4.5.zip"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; unpackPhase = "mkdir -p $out/xml/dtd/docbook\ncd $out/xml/dtd/docbook\nunpackFile $src\n"; userHook = null; version = "4.5"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "find . -type f -exec chmod -x {} \\;\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "docbook-xml-4.5"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/gxazmmqk00q43f1dv66pabc4sb4k68vk-docbook-xml-4.5"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "docbook-xml"; postInstall = "true"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; unpackPhase = "mkdir -p $out/xml/dtd/docbook\ncd $out/xml/dtd/docbook\nunpackFile $src\n"; userHook = null; version = "4.5"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; dbtoepub = <CODE>; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; installPhase = "dst=$out/share/xml/docbook-xsl-nons\nmkdir -p $dst\nrm -rf RELEASE* README* INSTALL TODO NEWS* BUGS install.sh tools Makefile tests extensions webhelp\nmv * $dst/\n\n# Backwards compatibility. Will remove eventually.\nmkdir -p $out/xml/xsl\nln -s $dst $out/xml/xsl/docbook\n\n# More backwards compatibility\nln -s $dst $out/share/xml/docbook-xsl\n"; mesonFlags = [ ]; name = "docbook-xsl-nons-1.79.2"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "docbook-style-xsl-non-recursive-string-subst.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0lrjjg5kpwwmbhkxzz6i5zmimb6lsvrrdhzc2qgjmb3r6jnsmii3"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=1 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://src.fedoraproject.org/rpms/docbook-style-xsl/raw/e3ae7a97ed1d185594dd35954e1a02196afb205a/f/docbook-style-xsl-non-recursive-string-subst.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "docbook-style-xsl-non-recursive-string-subst.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/am8h4spbaylaj37952zhkqlbbcw394yy-docbook-style-xsl-non-recursive-string-subst.patch"; outputHash = "0lrjjg5kpwwmbhkxzz6i5zmimb6lsvrrdhzc2qgjmb3r6jnsmii3"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://src.fedoraproject.org/rpms/docbook-style-xsl/raw/e3ae7a97ed1d185594dd35954e1a02196afb205a/f/docbook-style-xsl-non-recursive-string-subst.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=1 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://src.fedoraproject.org/rpms/docbook-style-xsl/raw/e3ae7a97ed1d185594dd35954e1a02196afb205a/f/docbook-style-xsl-non-recursive-string-subst.patch"; urls = «repeated»; userHook = null; } { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "07631601e6602bc49b8eac3aab9d2b35968d3e7a.patch"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0igfhcr6hzcydqsnjsd181h5yl3drjnrwdmxcybr236m8255vkq3"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=1 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/docbook/xslt10-stylesheets/commit/07631601e6602bc49b8eac3aab9d2b35968d3e7a.patch" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "07631601e6602bc49b8eac3aab9d2b35968d3e7a.patch"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/ir6sycy7p1yxbk9vbsdwkwihdr54sv9k-07631601e6602bc49b8eac3aab9d2b35968d3e7a.patch"; outputHash = "0igfhcr6hzcydqsnjsd181h5yl3drjnrwdmxcybr236m8255vkq3"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/docbook/xslt10-stylesheets/commit/07631601e6602bc49b8eac3aab9d2b35968d3e7a.patch"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=1 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/docbook/xslt10-stylesheets/commit/07631601e6602bc49b8eac3aab9d2b35968d3e7a.patch"; urls = «repeated»; userHook = null; } { __ignoreNulls = true; all = <CODE>; allowSubstitutes = false; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/substitute/substitute-all.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; allowSubstitutes = false; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; legacySuffix = ""; mesonFlags = [ ]; name = "catalog-legacy-uris.patch"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/sgml+xml/stylesheets/xslt/docbook-xsl/catalog-legacy-uris.patch; stdenv = «repeated»; strictDeps = false; suffix = "-nons"; system = "aarch64-linux"; userHook = null; version = "1.79.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; legacySuffix = ""; mesonFlags = [ ]; meta = <CODE>; name = "catalog-legacy-uris.patch"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/56fi9q49q0z80vh96x8cqngr7wwp9fnl-catalog-legacy-uris.patch"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/sgml+xml/stylesheets/xslt/docbook-xsl/catalog-legacy-uris.patch; stdenv = «repeated»; strictDeps = false; suffix = "-nons"; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "1.79.2"; } ]; pname = "docbook-xsl-nons"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "docbook-xsl-nons-1.79.2.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "00i1hdyxim8jymv2dz68ix3wbs5w6isxm8ijb03qk3vs1g59x2zf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://github.com/docbook/xslt10-stylesheets/releases/download/release%2F1.79.2/docbook-xsl-nons-1.79.2.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "docbook-xsl-nons-1.79.2.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/5cg2x1q3h8c96aszgfxiw83wvw1rz574-docbook-xsl-nons-1.79.2.tar.bz2"; outputHash = "00i1hdyxim8jymv2dz68ix3wbs5w6isxm8ijb03qk3vs1g59x2zf"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://github.com/docbook/xslt10-stylesheets/releases/download/release%2F1.79.2/docbook-xsl-nons-1.79.2.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://github.com/docbook/xslt10-stylesheets/releases/download/release%2F1.79.2/docbook-xsl-nons-1.79.2.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.79.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "dst=$out/share/xml/docbook-xsl-nons\nmkdir -p $dst\nrm -rf RELEASE* README* INSTALL TODO NEWS* BUGS install.sh tools Makefile tests extensions webhelp\nmv * $dst/\n\n# Backwards compatibility. Will remove eventually.\nmkdir -p $out/xml/xsl\nln -s $dst $out/xml/xsl/docbook\n\n# More backwards compatibility\nln -s $dst $out/share/xml/docbook-xsl\n"; mesonFlags = [ ]; meta = <CODE>; name = "docbook-xsl-nons-1.79.2"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/r6n5yn9siq5yzcsvjhn5frlsx0fm8nk8-docbook-xsl-nons-1.79.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { dbtoepub = <CODE>; }; patches = «repeated»; pname = "docbook-xsl-nons"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.79.2"; } ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "xmlto-0.0.28"; nativeBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; makeFlags = [ "WITHOUT_GETTEXT=1" "LIBCGETOPT=0" "prefix=/1rz4g4znpzjwh1xymhjpm42vipw92pr73vdgl6xs1hycac8kf2n9" "CC:=$(CC)" ]; mesonFlags = [ ]; name = "getopt-1.1.6"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "getopt"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "getopt-1.1.6.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1zn5kp8ar853rin0ay2j3p17blxy16agpp8wi8wfg4x98b31vgyh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "http://frodo.looijaard.name/system/files/software/getopt/getopt-1.1.6.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "getopt-1.1.6.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/cy6cw8mzgb3nadwlghvji9a5ciam65r2-getopt-1.1.6.tar.gz"; outputHash = "1zn5kp8ar853rin0ay2j3p17blxy16agpp8wi8wfg4x98b31vgyh"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "http://frodo.looijaard.name/system/files/software/getopt/getopt-1.1.6.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "http://frodo.looijaard.name/system/files/software/getopt/getopt-1.1.6.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "1.1.6"; }; drvPath = <CODE>; inputDerivation = <CODE>; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "getopt-1.1.6"; nativeBuildInputs = [ ]; out = «repeated»; outPath = "/nix/store/zqrwfk8r3yf55s2bc0b72a7w456cxlcx-getopt-1.1.6"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "getopt"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.1.6"; } ]; outputs = [ "out" ]; patches = [ ]; pname = "xmlto"; postInstall = "# `w3m' is needed for HTML to text conversions.\nwrapProgram \"$out/bin/xmlto\" \\\n   --prefix PATH : \"/nix/store/mja4k5szb037462ccyj34nkrmkcnbgkf-libxslt-1.1.37-bin/bin:/nix/store/k9063hisa7cgni1ps1vahy8r47s81358-libxml2-2.10.3-bin/bin:/nix/store/zqrwfk8r3yf55s2bc0b72a7w456cxlcx-getopt-1.1.6/bin:/nix/store/mir0jrhng5dq9l7cz7w3bkhhlwpxz4nd-w3m-0.5.3+git20220429/bin\"\n"; postPatch = "patchShebangs xmlif/test/run-test\n\nsubstituteInPlace \"xmlto.in\" \\\n  --replace \"/bin/bash\" \"/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash\"\nsubstituteInPlace \"xmlto.in\" \\\n  --replace \"/usr/bin/locale\" \"$(type -P locale)\"\nsubstituteInPlace \"xmlto.in\" \\\n  --replace \"mktemp\" \"$(type -P mktemp)\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "xmlto-0.0.28.tar.bz2"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0xhj8b2pwp4vhl9y16v3dpxpsakkflfamr191mprzsspg4xdyc0i"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://releases.pagure.org/xmlto/xmlto-0.0.28.tar.bz2" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "xmlto-0.0.28.tar.bz2"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4rvwy7vwpaz6n7z8c7ibkdyrx6fcff9z-xmlto-0.0.28.tar.bz2"; outputHash = "0xhj8b2pwp4vhl9y16v3dpxpsakkflfamr191mprzsspg4xdyc0i"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://releases.pagure.org/xmlto/xmlto-0.0.28.tar.bz2"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://releases.pagure.org/xmlto/xmlto-0.0.28.tar.bz2"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.0.28"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "xmlto-0.0.28"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/9nq26ysmndb3ldbxzic3f7m7yl5m84w6-xmlto-0.0.28"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "xmlto"; postInstall = "# `w3m' is needed for HTML to text conversions.\nwrapProgram \"$out/bin/xmlto\" \\\n   --prefix PATH : \"/nix/store/mja4k5szb037462ccyj34nkrmkcnbgkf-libxslt-1.1.37-bin/bin:/nix/store/k9063hisa7cgni1ps1vahy8r47s81358-libxml2-2.10.3-bin/bin:/nix/store/zqrwfk8r3yf55s2bc0b72a7w456cxlcx-getopt-1.1.6/bin:/nix/store/mir0jrhng5dq9l7cz7w3bkhhlwpxz4nd-w3m-0.5.3+git20220429/bin\"\n"; postPatch = "patchShebangs xmlif/test/run-test\n\nsubstituteInPlace \"xmlto.in\" \\\n  --replace \"/bin/bash\" \"/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash\"\nsubstituteInPlace \"xmlto.in\" \\\n  --replace \"/usr/bin/locale\" \"$(type -P locale)\"\nsubstituteInPlace \"xmlto.in\" \\\n  --replace \"mktemp\" \"$(type -P mktemp)\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.0.28"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ "--without-x" "ac_cv_path_PERL=/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl" ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; doc = <CODE>; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = «repeated»; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = true; doInstallCheck = false; enableParallelBuilding = false; makeFlags = [ ]; mesonFlags = [ ]; name = "groff-1.22.4"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputs = [ "out" "man" "doc" "info" "perl" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/groff/0001-Fix-cross-compilation-by-looking-for-ar.patch ]; pname = "groff"; postInstall = "for f in 'man.local' 'mdoc.local'; do\n    cat '/nix/store/b7y88azisww8cf4syzmc3lrm8grc5324-site.tmac' >>\"$out/share/groff/site-tmac/$f\"\ndone\n\nmoveToOutput bin/gropdf $perl\nmoveToOutput bin/pdfmom $perl\nmoveToOutput bin/roff2text $perl\nmoveToOutput bin/roff2pdf $perl\nmoveToOutput bin/roff2ps $perl\nmoveToOutput bin/roff2dvi $perl\nmoveToOutput bin/roff2ps $perl\nmoveToOutput bin/roff2html $perl\nmoveToOutput bin/glilypond $perl\nmoveToOutput bin/mmroff $perl\nmoveToOutput bin/roff2x $perl\nmoveToOutput bin/afmtodit $perl\nmoveToOutput bin/gperl $perl\nmoveToOutput bin/chem $perl\n\nmoveToOutput bin/gpinyin $perl\nmoveToOutput lib/groff/gpinyin $perl\nsubstituteInPlace $perl/bin/gpinyin \\\n  --replace $out/lib/groff/gpinyin $perl/lib/groff/gpinyin\n\nmoveToOutput bin/groffer $perl\nmoveToOutput lib/groff/groffer $perl\nsubstituteInPlace $perl/bin/groffer \\\n  --replace $out/lib/groff/groffer $perl/lib/groff/groffer\n\nmoveToOutput bin/grog $perl\nmoveToOutput lib/groff/grog $perl\nsubstituteInPlace $perl/bin/grog \\\n  --replace $out/lib/groff/grog $perl/lib/groff/grog\n\nfind $perl/ -type f -print0 | xargs --null sed -i 's|/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0|/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0|'\n"; postPatch = "# BASH_PROG gets replaced with a path to the build bash which doesn't get automatically patched by patchShebangs\nsubstituteInPlace contrib/gdiffmk/gdiffmk.sh \\\n  --replace \"@BASH_PROG@\" \"/bin/sh\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "groff-1.22.4.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "14q2mldnr1vx0l9lqp9v2f6iww24gj28iyh4j2211hyynx67p3p7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://gnu/groff/groff-1.22.4.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "groff-1.22.4.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/qlbry5qjqsn3ihfni40bi4g4n7ah383h-groff-1.22.4.tar.gz"; outputHash = "14q2mldnr1vx0l9lqp9v2f6iww24gj28iyh4j2211hyynx67p3p7"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://gnu/groff/groff-1.22.4.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://gnu/groff/groff-1.22.4.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.22.4"; }; drvPath = <CODE>; enableParallelBuilding = false; info = <CODE>; inputDerivation = <CODE>; makeFlags = [ ]; man = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "groff-1.22.4"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/7612w81vlndsg1i3xapck21m6kpfk1c6-groff-1.22.4"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; perl = <CODE>; pname = "groff"; postInstall = "for f in 'man.local' 'mdoc.local'; do\n    cat '/nix/store/b7y88azisww8cf4syzmc3lrm8grc5324-site.tmac' >>\"$out/share/groff/site-tmac/$f\"\ndone\n\nmoveToOutput bin/gropdf $perl\nmoveToOutput bin/pdfmom $perl\nmoveToOutput bin/roff2text $perl\nmoveToOutput bin/roff2pdf $perl\nmoveToOutput bin/roff2ps $perl\nmoveToOutput bin/roff2dvi $perl\nmoveToOutput bin/roff2ps $perl\nmoveToOutput bin/roff2html $perl\nmoveToOutput bin/glilypond $perl\nmoveToOutput bin/mmroff $perl\nmoveToOutput bin/roff2x $perl\nmoveToOutput bin/afmtodit $perl\nmoveToOutput bin/gperl $perl\nmoveToOutput bin/chem $perl\n\nmoveToOutput bin/gpinyin $perl\nmoveToOutput lib/groff/gpinyin $perl\nsubstituteInPlace $perl/bin/gpinyin \\\n  --replace $out/lib/groff/gpinyin $perl/lib/groff/gpinyin\n\nmoveToOutput bin/groffer $perl\nmoveToOutput lib/groff/groffer $perl\nsubstituteInPlace $perl/bin/groffer \\\n  --replace $out/lib/groff/groffer $perl/lib/groff/groffer\n\nmoveToOutput bin/grog $perl\nmoveToOutput lib/groff/grog $perl\nsubstituteInPlace $perl/bin/grog \\\n  --replace $out/lib/groff/grog $perl/lib/groff/grog\n\nfind $perl/ -type f -print0 | xargs --null sed -i 's|/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0|/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0|'\n"; postPatch = "# BASH_PROG gets replaced with a path to the build bash which doesn't get automatically patched by patchShebangs\nsubstituteInPlace contrib/gdiffmk/gdiffmk.sh \\\n  --replace \"@BASH_PROG@\" \"/bin/sh\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.22.4"; } «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "opensp-1.5.2"; nativeBuildInputs = [ «repeated» { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installPhase = "find . -type f -exec chmod -x {} \\;\nrunHook postInstall\n"; mesonFlags = [ ]; name = "docbook-xml-4.1.2"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "docbook-xml"; postInstall = "\n    sed 's|V4.2|V4.1.2|g' < /nix/store/2crhfrb8pqy61d32jaajpw33jjmny6xz-catalog.xml > catalog.xml\n  "; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ «repeated» ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "docbkx412.zip"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0wkp5rvnqj0ghxia0558mnn4c7s3n501j99q2isp3sp0ci069w1h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://docbook.org/xml/4.1.2/docbkx412.zip" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "docbkx412.zip"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/9fggf2bx5p29da89jrbmdh2fcd68m1mx-docbkx412.zip"; outputHash = "0wkp5rvnqj0ghxia0558mnn4c7s3n501j99q2isp3sp0ci069w1h"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://docbook.org/xml/4.1.2/docbkx412.zip"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://docbook.org/xml/4.1.2/docbkx412.zip"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; unpackPhase = "mkdir -p $out/xml/dtd/docbook\ncd $out/xml/dtd/docbook\nunpackFile $src\n"; userHook = null; version = "4.1.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "find . -type f -exec chmod -x {} \\;\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "docbook-xml-4.1.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/8sin09bah3p7ndxs6fy8k996wh5j3zf0-docbook-xml-4.1.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "docbook-xml"; postInstall = "\n    sed 's|V4.2|V4.1.2|g' < /nix/store/2crhfrb8pqy61d32jaajpw33jjmny6xz-catalog.xml > catalog.xml\n  "; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = «repeated»; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; unpackPhase = "mkdir -p $out/xml/dtd/docbook\ncd $out/xml/dtd/docbook\nunpackFile $src\n"; userHook = null; version = "4.1.2"; } «repeated» ]; outputs = [ "out" ]; patches = [ { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "opensp-1.5.2-c11-using.patch?id=688d9675782dfc162d4e6cff04c668f7516118d0"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "04q14s8qsad0bkjmj067dn831i0r6v7742rafdlnbfm5y249m2q6"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://gitweb.gentoo.org/repo/gentoo.git/plain/app-text/opensp/files/opensp-1.5.2-c11-using.patch?id=688d9675782dfc162d4e6cff04c668f7516118d0" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "opensp-1.5.2-c11-using.patch?id=688d9675782dfc162d4e6cff04c668f7516118d0"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/8lqnbbp5205r8nwgbdbl14hbcjg9h5r6-opensp-1.5.2-c11-using.patch?id=688d9675782dfc162d4e6cff04c668f7516118d0"; outputHash = "04q14s8qsad0bkjmj067dn831i0r6v7742rafdlnbfm5y249m2q6"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://gitweb.gentoo.org/repo/gentoo.git/plain/app-text/opensp/files/opensp-1.5.2-c11-using.patch?id=688d9675782dfc162d4e6cff04c668f7516118d0"; }; patches = [ ]; postFetch = "tmpfile=\"$TMPDIR/patch\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Fetched patch file '$out' is empty!\" 1>&2\n  exit 1\nfi\n\n\"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/lsdiff\" \\\n   \\\n  \"$out\" \\\n| sort -u | sed -e 's/[*?]/\\\\&/g' \\\n| xargs -I{} \\\n  \"/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff\" \\\n  --include={} \\\n  --strip=0 \\\n   \\\n  --clean \"$out\" > \"$tmpfile\"\n\nif [ ! -s \"$tmpfile\" ]; then\n  echo \"error: Normalized patch '$tmpfile' is empty (while the fetched file was not)!\" 1>&2\n  echo \"Did you maybe fetch a HTML representation of a patch instead of a raw patch?\" 1>&2\n  echo \"Fetched file was:\" 1>&2\n  cat \"$out\" 1>&2\n  exit 1\nfi\n\n/nix/store/0k8jkwnhwzai870ssinz2vvfjlmv3laq-patchutils-0.3.3/bin/filterdiff \\\n  -p1 \\\n   \\\n   \\\n  \"$tmpfile\" > \"$out\"\n\nif [ ! -s \"$out\" ]; then\n  echo \"error: Filtered patch '$out' is empty (while the original patch file was not)!\" 1>&2\n  echo \"Check your includes and excludes.\" 1>&2\n  echo \"Normalized patch file was:\" 1>&2\n  cat \"$tmpfile\" 1>&2\n  exit 1\nfi\n"; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://gitweb.gentoo.org/repo/gentoo.git/plain/app-text/opensp/files/opensp-1.5.2-c11-using.patch?id=688d9675782dfc162d4e6cff04c668f7516118d0"; urls = «repeated»; userHook = null; } ]; pname = "opensp"; postFixup = "# Remove random ids in the release notes\nsed -i -e 's/href=\"#idm.*\"//g' $out/share/doc/OpenSP/releasenotes.html\nsed -i -e 's/name=\"idm.*\"//g' $out/share/doc/OpenSP/releasenotes.html\n"; postPatch = "sed -i s,/usr/share/sgml/docbook/xml-dtd-4.1.2/,/nix/store/8sin09bah3p7ndxs6fy8k996wh5j3zf0-docbook-xml-4.1.2/xml/dtd/docbook/, \\\n  docsrc/*.xml\n"; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/sgml/opensp/setup-hook.sh; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "OpenSP-1.5.2.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "1khpasr6l0a8nfz6kcf3s81vgdab8fm2dj291n5r2s53k228kx2p"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/openjade/OpenSP-1.5.2.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "OpenSP-1.5.2.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/4mbfsnymaw7i5n3004jwyar16bsmjywx-OpenSP-1.5.2.tar.gz"; outputHash = "1khpasr6l0a8nfz6kcf3s81vgdab8fm2dj291n5r2s53k228kx2p"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/openjade/OpenSP-1.5.2.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/openjade/OpenSP-1.5.2.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "1.5.2"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "opensp-1.5.2"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/y6brf8j140jl6mmkargr1566jbsiy7qb-opensp-1.5.2"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "opensp"; postFixup = "# Remove random ids in the release notes\nsed -i -e 's/href=\"#idm.*\"//g' $out/share/doc/OpenSP/releasenotes.html\nsed -i -e 's/name=\"idm.*\"//g' $out/share/doc/OpenSP/releasenotes.html\n"; postPatch = "sed -i s,/usr/share/sgml/docbook/xml-dtd-4.1.2/,/nix/store/8sin09bah3p7ndxs6fy8k996wh5j3zf0-docbook-xml-4.1.2/xml/dtd/docbook/, \\\n  docsrc/*.xml\n"; preConfigure = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/text/sgml/opensp/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "1.5.2"; } «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = «repeated»; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; mesonFlags = [ ]; name = "docbook2X-0.8.8"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/tools/typesetting/docbook2x/db2x_texixml-to-stdout.patch ]; pname = "docbook2X"; postConfigure = "# Broken substitution is used for `perl/config.pl', which leaves literal\n# `$prefix' in it.\nsubstituteInPlace \"perl/config.pl\"       \\\n  --replace '\${prefix}' \"$out\"\n"; postInstall = "perlPrograms=\"db2x_manxml db2x_texixml db2x_xsltproc\n              docbook2man docbook2texi\";\nfor i in $perlPrograms\ndo\n  # XXX: We work around the fact that `wrapProgram' doesn't support\n  # spaces below by inserting escaped backslashes.\n  wrapProgram $out/bin/$i \\\n    --prefix PERL5LIB : /nix/store/8v08amwgdx8fxzf8llia87a4cz6sd1gw-perl5.36.0-XML-SAX-1.02/lib/perl5/site_perl:/nix/store/4sgh4hvjw1myqbcj637h33y31zb1s3bq-perl5.36.0-XML-Parser-2.46/lib/perl5/site_perl:/nix/store/626irlx24im7x7fxsgnc90gww98dgphr-perl5.36.0-XML-NamespaceSupport-1.12/lib/perl5/site_perl:/nix/store/gvlnx15ml59aj7lnylixdmxdg8xrh185-perl5.36.0-XML-SAX-Base-1.09/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/5hcqibb0if2r9hk30ncv1grilv1rr1z1-perl5.36.0-File-Listing-6.14/lib/perl5/site_perl:/nix/store/z93672507ghc7r95q0n7dvib1cw65ncy-perl5.36.0-HTML-Parser-3.75/lib/perl5/site_perl:/nix/store/46mhdq269qpwvayvr9wdid8byakp4pyf-perl5.36.0-HTTP-Cookies-6.09/lib/perl5/site_perl:/nix/store/wbswwv6jgk8ii9ggb4k0qn6sss6234aq-perl5.36.0-HTTP-Negotiate-6.01/lib/perl5/site_perl:/nix/store/zh3qih1j29b6k2651ps2nbx6fb8qglp4-perl5.36.0-Net-HTTP-6.19/lib/perl5/site_perl:/nix/store/q4hnkp3aqsxscl58vlsmbrzn8yzbn5hp-perl5.36.0-Try-Tiny-0.30/lib/perl5/site_perl:/nix/store/4gyy4v5mbx6p48lpkziyry8nhmhwwa21-perl5.36.0-WWW-RobotRules-6.02/lib/perl5/site_perl:/nix/store/zmsybk62xaw5zfwp11v156mjhg3x8zmm-perl5.36.0-HTTP-Date-6.05/lib/perl5/site_perl:/nix/store/xbjgi4lcq5ayq9xbajxyh0dzsbavbp90-perl5.36.0-HTML-Tagset-3.20/lib/perl5/site_perl:/nix/store/l33yyd86m2anyjp4142jmkbqk8jjl7nr-perl5.36.0-HTTP-Message-6.26/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/9jr38rmgh7q9lscxa96ivlry5c57pwm3-perl5.36.0-TimeDate-2.33/lib/perl5/site_perl:/nix/store/1jsw9q5w62hckaijkgbnxs7xamzqy33n-perl5.36.0-Encode-Locale-1.05/lib/perl5/site_perl:/nix/store/g489z1i3gxda135xh2fh2i4jkaqq55vi-perl5.36.0-IO-HTML-1.004/lib/perl5/site_perl:/nix/store/wr63gjkgwn9bv3y06v44lcb1krknr4ni-perl5.36.0-LWP-MediaTypes-6.04/lib/perl5/site_perl \\\n    --prefix XML_CATALOG_FILES \"\\ \" \\\n    \"$out/share/docbook2X/dtd/catalog.xml\\ $out/share/docbook2X/xslt/catalog.xml\\ /nix/store/l7iq7dnn7pxcw4hsxiaa647qc9s6qnf4-docbook-xml-4.3/xml/dtd/docbook/catalog.xml\"\ndone\n\nwrapProgram $out/bin/sgml2xml-isoent --prefix PATH : \\\n  \"/nix/store/kr6p5jwckmfyqk6pay22b8palxpil81l-gnused-4.8/bin\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "docbook2X-0.8.8.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "0ifwzk99rzjws0ixzimbvs83x6cxqk1xzmg84wa1p7bs6rypaxs0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://sourceforge/docbook2x/docbook2X-0.8.8.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "docbook2X-0.8.8.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/0xs59grdbgz7z2ci2ff4yfwb6jha1qaa-docbook2X-0.8.8.tar.gz"; outputHash = "0ifwzk99rzjws0ixzimbvs83x6cxqk1xzmg84wa1p7bs6rypaxs0"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://sourceforge/docbook2x/docbook2X-0.8.8.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://sourceforge/docbook2x/docbook2X-0.8.8.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "0.8.8"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = "docbook2X-0.8.8"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/yghx9sx37kiyhvihw94s7qxc108nr9lw-docbook2X-0.8.8"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = «repeated»; pname = "docbook2X"; postConfigure = "# Broken substitution is used for `perl/config.pl', which leaves literal\n# `$prefix' in it.\nsubstituteInPlace \"perl/config.pl\"       \\\n  --replace '\${prefix}' \"$out\"\n"; postInstall = "perlPrograms=\"db2x_manxml db2x_texixml db2x_xsltproc\n              docbook2man docbook2texi\";\nfor i in $perlPrograms\ndo\n  # XXX: We work around the fact that `wrapProgram' doesn't support\n  # spaces below by inserting escaped backslashes.\n  wrapProgram $out/bin/$i \\\n    --prefix PERL5LIB : /nix/store/8v08amwgdx8fxzf8llia87a4cz6sd1gw-perl5.36.0-XML-SAX-1.02/lib/perl5/site_perl:/nix/store/4sgh4hvjw1myqbcj637h33y31zb1s3bq-perl5.36.0-XML-Parser-2.46/lib/perl5/site_perl:/nix/store/626irlx24im7x7fxsgnc90gww98dgphr-perl5.36.0-XML-NamespaceSupport-1.12/lib/perl5/site_perl:/nix/store/gvlnx15ml59aj7lnylixdmxdg8xrh185-perl5.36.0-XML-SAX-Base-1.09/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/5hcqibb0if2r9hk30ncv1grilv1rr1z1-perl5.36.0-File-Listing-6.14/lib/perl5/site_perl:/nix/store/z93672507ghc7r95q0n7dvib1cw65ncy-perl5.36.0-HTML-Parser-3.75/lib/perl5/site_perl:/nix/store/46mhdq269qpwvayvr9wdid8byakp4pyf-perl5.36.0-HTTP-Cookies-6.09/lib/perl5/site_perl:/nix/store/wbswwv6jgk8ii9ggb4k0qn6sss6234aq-perl5.36.0-HTTP-Negotiate-6.01/lib/perl5/site_perl:/nix/store/zh3qih1j29b6k2651ps2nbx6fb8qglp4-perl5.36.0-Net-HTTP-6.19/lib/perl5/site_perl:/nix/store/q4hnkp3aqsxscl58vlsmbrzn8yzbn5hp-perl5.36.0-Try-Tiny-0.30/lib/perl5/site_perl:/nix/store/4gyy4v5mbx6p48lpkziyry8nhmhwwa21-perl5.36.0-WWW-RobotRules-6.02/lib/perl5/site_perl:/nix/store/zmsybk62xaw5zfwp11v156mjhg3x8zmm-perl5.36.0-HTTP-Date-6.05/lib/perl5/site_perl:/nix/store/xbjgi4lcq5ayq9xbajxyh0dzsbavbp90-perl5.36.0-HTML-Tagset-3.20/lib/perl5/site_perl:/nix/store/l33yyd86m2anyjp4142jmkbqk8jjl7nr-perl5.36.0-HTTP-Message-6.26/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/9jr38rmgh7q9lscxa96ivlry5c57pwm3-perl5.36.0-TimeDate-2.33/lib/perl5/site_perl:/nix/store/1jsw9q5w62hckaijkgbnxs7xamzqy33n-perl5.36.0-Encode-Locale-1.05/lib/perl5/site_perl:/nix/store/g489z1i3gxda135xh2fh2i4jkaqq55vi-perl5.36.0-IO-HTML-1.004/lib/perl5/site_perl:/nix/store/wr63gjkgwn9bv3y06v44lcb1krknr4ni-perl5.36.0-LWP-MediaTypes-6.04/lib/perl5/site_perl \\\n    --prefix XML_CATALOG_FILES \"\\ \" \\\n    \"$out/share/docbook2X/dtd/catalog.xml\\ $out/share/docbook2X/xslt/catalog.xml\\ /nix/store/l7iq7dnn7pxcw4hsxiaa647qc9s6qnf4-docbook-xml-4.3/xml/dtd/docbook/catalog.xml\"\ndone\n\nwrapProgram $out/bin/sgml2xml-isoent --prefix PATH : \\\n  \"/nix/store/kr6p5jwckmfyqk6pay22b8palxpil81l-gnused-4.8/bin\"\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.8.8"; } «repeated» «repeated» «repeated» /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/setup-hooks/separate-debug-info.sh ]; outputs = [ "out" "doc" "debug" ]; patches = [ /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/applications/version-management/git-and-tools/git/docbook2texi.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/applications/version-management/git-and-tools/git/git-sh-i18n.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/applications/version-management/git-and-tools/git/git-send-email-honor-PATH.patch /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/applications/version-management/git-and-tools/git/installCheck-path.patch ]; pname = "git"; postBuild = "make -C contrib/subtree\nmake -C contrib/diff-highlight\n"; postInstall = "notSupported() {\n  unlink $1 || true\n}\n\n# Install git-subtree.\nmake -C contrib/subtree install install-doc\nrm -rf contrib/subtree\n\n# Install contrib stuff.\nmkdir -p $out/share/git\ncp -a contrib $out/share/git/\nmkdir -p $out/share/bash-completion/completions\nln -s $out/share/git/contrib/completion/git-completion.bash $out/share/bash-completion/completions/git\nln -s $out/share/git/contrib/completion/git-prompt.sh $out/share/bash-completion/completions/\n# only readme, developed in another repo\nrm -r contrib/hooks/multimail\nmkdir -p $out/share/git-core/contrib\ncp -a contrib/hooks/ $out/share/git-core/contrib/\nsubstituteInPlace $out/share/git-core/contrib/hooks/pre-auto-gc-battery \\\n  --replace ' grep' ' /nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep' \\\n\n# grep is a runtime dependency, need to patch so that it's found\nsubstituteInPlace $out/libexec/git-core/git-sh-setup \\\n    --replace ' grep' ' /nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep' \\\n    --replace ' egrep' ' /nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/egrep'\n\n# Fix references to the perl, sed, awk and various coreutil binaries used by\n# shell scripts that git calls (e.g. filter-branch)\nSCRIPT=\"$(cat <<'EOS'\n  BEGIN{\n    @a=(\n      '/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep', '/nix/store/kr6p5jwckmfyqk6pay22b8palxpil81l-gnused-4.8/bin/sed', '/nix/store/b9i4h55fq5vrlb7b6an990c57njgpiar-gawk-5.1.1/bin/awk',\n      '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/cut', '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/basename', '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/dirname',\n      '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/wc', '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/tr'\n      , '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl'\n    );\n  }\n  foreach $c (@a) {\n    $n=(split(\"/\", $c))[-1];\n    s|(?<=[^#][^/.-])\\b\${n}(?=\\s)|\${c}|g\n  }\nEOS\n)\"\nperl -0777 -i -pe \"$SCRIPT\" \\\n  $out/libexec/git-core/git-{sh-setup,filter-branch,merge-octopus,mergetool,quiltimport,request-pull,submodule,subtree,web--browse}\n\n\n# Also put git-http-backend into $PATH, so that we can use smart\n# HTTP(s) transports for pushing\nln -s $out/libexec/git-core/git-http-backend $out/bin/git-http-backend\nln -s $out/share/git/contrib/git-jump/git-jump $out/bin/git-jump\n# wrap perl commands\nmakeWrapper \"$out/share/git/contrib/credential/netrc/git-credential-netrc.perl\" $out/bin/git-credential-netrc \\\n            --set PERL5LIB   \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-cvsimport \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-add--interactive \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-archimport \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-instaweb \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-cvsexportcommit \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\n\n# gzip (and optionally bzip2, xz, zip) are runtime dependencies for\n# gitweb.cgi, need to patch so that it's found\nsed -i -e \"s|'compressor' => \\['gzip'|'compressor' => ['/nix/store/xgm1prhav93k4a8w6hkc0ri7kk5gx5x3-gzip-1.12/bin/gzip'|\" \\\n    $out/share/gitweb/gitweb.cgi\n# Give access to CGI.pm and friends (was removed from perl core in 5.22)\nfor p in /nix/store/kqcwzb42b2wphynd92f37ifj5h5nigrq-perl5.36.0-CGI-4.51 /nix/store/z93672507ghc7r95q0n7dvib1cw65ncy-perl5.36.0-HTML-Parser-3.75 /nix/store/74ca4ky8imig3p370w80h12hm2fw59c6-perl5.36.0-CGI-Fast-2.15 /nix/store/c8wqn51f7biw78hz1jh0brhq7hpg45n5-perl5.36.0-FCGI-0.79 /nix/store/1yqv88dypkw87pgwlr76q3vkxwp170vy-perl5.36.0-FCGI-ProcManager-0.28 /nix/store/myy0kkxfs624ffy48v87zmjcacy1s4wq-perl5.36.0-HTML-TagCloud-0.38; do\n    sed -i -e \"/use CGI /i use lib \\\"$p/lib/perl5/site_perl\\\";\" \\\n        \"$out/share/gitweb/gitweb.cgi\"\ndone\n# replace git-svn by notification script\n       notSupported $out/libexec/git-core/git-svn\n# replace git-send-email by notification script\nnotSupported $out/libexec/git-core/git-send-email\n# Install man pages\n       make -j $NIX_BUILD_CORES PERL_PATH=\"/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl\" cmd-list.made install install-html \\\n         -C Documentation # Don't wrap Tcl/Tk, replace them by notification scripts\nfor prog in bin/gitk libexec/git-core/git-gui; do\n  notSupported \"$out/$prog\"\ndone\n"; postPatch = "# Fix references to gettext introduced by ./git-sh-i18n.patch\nsubstituteInPlace git-sh-i18n.sh \\\n    --subst-var-by gettext /nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21\n\n# ensure we are using the correct shell when executing the test scripts\npatchShebangs t/*.sh\n"; preBuild = "makeFlagsArray+=( perllibdir=$out/$(perl -MConfig -wle 'print substr $Config{installsitelib}, 1 + length $Config{siteprefixexp}') )\n"; preInstall = ""; preInstallCheck = "installCheckFlagsArray+=(\n  GIT_PROVE_OPTS=\"--jobs $NIX_BUILD_CORES --failures --state=failed,save\"\n  GIT_TEST_INSTALLED=$out/bin\n  NO_SVN_TESTS=y\n)\n\nfunction disable_test {\n  local test=$1 pattern=$2\n  if [ $# -eq 1 ]; then\n    mv t/{,skip-}$test.sh || true\n  else\n    sed -i t/$test.sh \\\n      -e \"/^\\s*test_expect_.*$pattern/,/^\\s*' *\\$/{s/^/: #/}\"\n  fi\n}\n\n# Shared permissions are forbidden in sandbox builds:\nsubstituteInPlace t/test-lib.sh \\\n  --replace \"test_set_prereq POSIXPERM\" \"\"\n# TODO: Investigate while these still fail (without POSIXPERM):\ndisable_test t0001-init 'shared overrides system'\ndisable_test t0001-init 'init honors global core.sharedRepository'\ndisable_test t1301-shared-repo\n# git-completion.bash: line 405: compgen: command not found:\ndisable_test t9902-completion 'option aliases are shown with GIT_COMPLETION_SHOW_ALL'\n\n# Our patched gettext never fallbacks\ndisable_test t0201-gettext-fallbacks\n\n# Disable sendmail tests\ndisable_test t9001-send-email\n\n\n# XXX: I failed to understand why this one fails.\n# Could someone try to re-enable it on the next release ?\n# Tested to fail: 2.18.0 and 2.19.0\ndisable_test t1700-split-index \"null sha1\"\n\n# Tested to fail: 2.18.0\ndisable_test t9902-completion \"sourcing the completion script clears cached --options\"\n\n# Flaky tests:\ndisable_test t5319-multi-pack-index\ndisable_test t6421-merge-partial-clone\n\n# Fails reproducibly on ZFS on Linux with formD normalization\ndisable_test t0021-conversion\ndisable_test t3910-mac-os-precompose\n\n\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "git-2.38.1.tar.xz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-l9346liiueD7wlCOJFAoynWRG9ONFVFhaxSMGqV0Ctk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "https://www.kernel.org/pub/software/scm/git/git-2.38.1.tar.xz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "git-2.38.1.tar.xz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/h2cp2cplaijvmbvlxycynn4ay97vyadf-git-2.38.1.tar.xz"; outputHash = "sha256-l9346liiueD7wlCOJFAoynWRG9ONFVFhaxSMGqV0Ctk="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "https://www.kernel.org/pub/software/scm/git/git-2.38.1.tar.xz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "https://www.kernel.org/pub/software/scm/git/git-2.38.1.tar.xz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; stripDebugList = [ "lib" "libexec" "bin" "share/git/contrib/credential/libsecret" ]; system = "aarch64-linux"; userHook = null; version = "2.38.1"; }; drvPath = <CODE>; enableParallelBuilding = true; enableParallelChecking = true; hardeningDisable = «repeated»; inputDerivation = <CODE>; installCheckFlags = «repeated»; installCheckTarget = "test"; installFlags = «repeated»; makeFlags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "git-2.38.1"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/gsghwn72nxagir4jp38ndc8a1izij2h6-git-2.38.1"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { shellPath = "/bin/git-shell"; tests = <CODE>; }; patches = «repeated»; pname = "git"; postBuild = "make -C contrib/subtree\nmake -C contrib/diff-highlight\n"; postInstall = "notSupported() {\n  unlink $1 || true\n}\n\n# Install git-subtree.\nmake -C contrib/subtree install install-doc\nrm -rf contrib/subtree\n\n# Install contrib stuff.\nmkdir -p $out/share/git\ncp -a contrib $out/share/git/\nmkdir -p $out/share/bash-completion/completions\nln -s $out/share/git/contrib/completion/git-completion.bash $out/share/bash-completion/completions/git\nln -s $out/share/git/contrib/completion/git-prompt.sh $out/share/bash-completion/completions/\n# only readme, developed in another repo\nrm -r contrib/hooks/multimail\nmkdir -p $out/share/git-core/contrib\ncp -a contrib/hooks/ $out/share/git-core/contrib/\nsubstituteInPlace $out/share/git-core/contrib/hooks/pre-auto-gc-battery \\\n  --replace ' grep' ' /nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep' \\\n\n# grep is a runtime dependency, need to patch so that it's found\nsubstituteInPlace $out/libexec/git-core/git-sh-setup \\\n    --replace ' grep' ' /nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep' \\\n    --replace ' egrep' ' /nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/egrep'\n\n# Fix references to the perl, sed, awk and various coreutil binaries used by\n# shell scripts that git calls (e.g. filter-branch)\nSCRIPT=\"$(cat <<'EOS'\n  BEGIN{\n    @a=(\n      '/nix/store/7zdwjc66k8q18dszbfjl6djg11gjhqis-gnugrep-3.7/bin/grep', '/nix/store/kr6p5jwckmfyqk6pay22b8palxpil81l-gnused-4.8/bin/sed', '/nix/store/b9i4h55fq5vrlb7b6an990c57njgpiar-gawk-5.1.1/bin/awk',\n      '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/cut', '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/basename', '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/dirname',\n      '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/wc', '/nix/store/wcckxdl0i7k2kxhzj0ii23s6096n40jh-coreutils-9.1/bin/tr'\n      , '/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl'\n    );\n  }\n  foreach $c (@a) {\n    $n=(split(\"/\", $c))[-1];\n    s|(?<=[^#][^/.-])\\b\${n}(?=\\s)|\${c}|g\n  }\nEOS\n)\"\nperl -0777 -i -pe \"$SCRIPT\" \\\n  $out/libexec/git-core/git-{sh-setup,filter-branch,merge-octopus,mergetool,quiltimport,request-pull,submodule,subtree,web--browse}\n\n\n# Also put git-http-backend into $PATH, so that we can use smart\n# HTTP(s) transports for pushing\nln -s $out/libexec/git-core/git-http-backend $out/bin/git-http-backend\nln -s $out/share/git/contrib/git-jump/git-jump $out/bin/git-jump\n# wrap perl commands\nmakeWrapper \"$out/share/git/contrib/credential/netrc/git-credential-netrc.perl\" $out/bin/git-credential-netrc \\\n            --set PERL5LIB   \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-cvsimport \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-add--interactive \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-archimport \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-instaweb \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\nwrapProgram $out/libexec/git-core/git-cvsexportcommit \\\n            --set GITPERLLIB \"$out/lib/perl5/site_perl:/nix/store/hj2fblbbniwlcfss4lzbj1xfhk9g82fy-perl5.36.0-libwww-perl-6.67/lib/perl5/site_perl:/nix/store/x3rppgxl5srs12drbgdqjjmfbibhlfx1-perl5.36.0-URI-5.05/lib/perl5/site_perl:/nix/store/z3m5kkdv92j3z2nqr689jqza1kl8zfjz-perl5.36.0-TermReadKey-2.38/lib/perl5/site_perl\"\n\n# gzip (and optionally bzip2, xz, zip) are runtime dependencies for\n# gitweb.cgi, need to patch so that it's found\nsed -i -e \"s|'compressor' => \\['gzip'|'compressor' => ['/nix/store/xgm1prhav93k4a8w6hkc0ri7kk5gx5x3-gzip-1.12/bin/gzip'|\" \\\n    $out/share/gitweb/gitweb.cgi\n# Give access to CGI.pm and friends (was removed from perl core in 5.22)\nfor p in /nix/store/kqcwzb42b2wphynd92f37ifj5h5nigrq-perl5.36.0-CGI-4.51 /nix/store/z93672507ghc7r95q0n7dvib1cw65ncy-perl5.36.0-HTML-Parser-3.75 /nix/store/74ca4ky8imig3p370w80h12hm2fw59c6-perl5.36.0-CGI-Fast-2.15 /nix/store/c8wqn51f7biw78hz1jh0brhq7hpg45n5-perl5.36.0-FCGI-0.79 /nix/store/1yqv88dypkw87pgwlr76q3vkxwp170vy-perl5.36.0-FCGI-ProcManager-0.28 /nix/store/myy0kkxfs624ffy48v87zmjcacy1s4wq-perl5.36.0-HTML-TagCloud-0.38; do\n    sed -i -e \"/use CGI /i use lib \\\"$p/lib/perl5/site_perl\\\";\" \\\n        \"$out/share/gitweb/gitweb.cgi\"\ndone\n# replace git-svn by notification script\n       notSupported $out/libexec/git-core/git-svn\n# replace git-send-email by notification script\nnotSupported $out/libexec/git-core/git-send-email\n# Install man pages\n       make -j $NIX_BUILD_CORES PERL_PATH=\"/nix/store/qjkhzhzav2bkifw5kis91ckzv9sjjpj7-perl-5.36.0/bin/perl\" cmd-list.made install install-html \\\n         -C Documentation # Don't wrap Tcl/Tk, replace them by notification scripts\nfor prog in bin/gitk libexec/git-core/git-gui; do\n  notSupported \"$out/$prog\"\ndone\n"; postPatch = "# Fix references to gettext introduced by ./git-sh-i18n.patch\nsubstituteInPlace git-sh-i18n.sh \\\n    --subst-var-by gettext /nix/store/lqn8q5piapxnwssalrzzw772vqs7n3g7-gettext-0.21\n\n# ensure we are using the correct shell when executing the test scripts\npatchShebangs t/*.sh\n"; preBuild = "makeFlagsArray+=( perllibdir=$out/$(perl -MConfig -wle 'print substr $Config{installsitelib}, 1 + length $Config{siteprefixexp}') )\n"; preInstall = ""; preInstallCheck = "installCheckFlagsArray+=(\n  GIT_PROVE_OPTS=\"--jobs $NIX_BUILD_CORES --failures --state=failed,save\"\n  GIT_TEST_INSTALLED=$out/bin\n  NO_SVN_TESTS=y\n)\n\nfunction disable_test {\n  local test=$1 pattern=$2\n  if [ $# -eq 1 ]; then\n    mv t/{,skip-}$test.sh || true\n  else\n    sed -i t/$test.sh \\\n      -e \"/^\\s*test_expect_.*$pattern/,/^\\s*' *\\$/{s/^/: #/}\"\n  fi\n}\n\n# Shared permissions are forbidden in sandbox builds:\nsubstituteInPlace t/test-lib.sh \\\n  --replace \"test_set_prereq POSIXPERM\" \"\"\n# TODO: Investigate while these still fail (without POSIXPERM):\ndisable_test t0001-init 'shared overrides system'\ndisable_test t0001-init 'init honors global core.sharedRepository'\ndisable_test t1301-shared-repo\n# git-completion.bash: line 405: compgen: command not found:\ndisable_test t9902-completion 'option aliases are shown with GIT_COMPLETION_SHOW_ALL'\n\n# Our patched gettext never fallbacks\ndisable_test t0201-gettext-fallbacks\n\n# Disable sendmail tests\ndisable_test t9001-send-email\n\n\n# XXX: I failed to understand why this one fails.\n# Could someone try to re-enable it on the next release ?\n# Tested to fail: 2.18.0 and 2.19.0\ndisable_test t1700-split-index \"null sha1\"\n\n# Tested to fail: 2.18.0\ndisable_test t9902-completion \"sourcing the completion script clears cached --options\"\n\n# Flaky tests:\ndisable_test t5319-multi-pack-index\ndisable_test t6421-merge-partial-clone\n\n# Fails reproducibly on ZFS on Linux with formD normalization\ndisable_test t0021-conversion\ndisable_test t3910-mac-os-precompose\n\n\n"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; separateDebugInfo = true; shellPath = "/bin/git-shell"; src = «repeated»; stdenv = «repeated»; strictDeps = false; stripDebugList = «repeated»; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; userHook = null; version = "2.38.1"; } { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "mkdir unbundled\nbuildcatrust \\\n  --certdata_input certdata.txt \\\n  --ca_bundle_input \"/nix/store/jw505b1g3mqy1cr4xwhv896pa0bqlzpl-cacert-extra-certificates-bundle.crt\"  \\\n  --blocklist \"/nix/store/wg5ls76kw1j8q98a335pa3fc5l4vxz2s-cacert-blocklist.txt\" \\\n  --ca_bundle_output ca-bundle.crt \\\n  --ca_unpacked_output unbundled \\\n  --p11kit_output ca-bundle.trust.p11-kit\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "mkdir unbundled\nbuildcatrust \\\n  --certdata_input certdata.txt \\\n  --ca_bundle_input \"/nix/store/jw505b1g3mqy1cr4xwhv896pa0bqlzpl-cacert-extra-certificates-bundle.crt\"  \\\n  --blocklist \"/nix/store/wg5ls76kw1j8q98a335pa3fc5l4vxz2s-cacert-blocklist.txt\" \\\n  --ca_bundle_output ca-bundle.crt \\\n  --ca_unpacked_output unbundled \\\n  --p11kit_output ca-bundle.trust.p11-kit\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; installPhase = "install -D -t \"$out/etc/ssl/certs\" ca-bundle.crt\n\n# install p11-kit specific output to p11kit output\ninstall -D -t \"$p11kit/etc/ssl/trust-source\" ca-bundle.trust.p11-kit\n\n# install individual certs in unbundled output\ninstall -D -t \"$unbundled/etc/ssl/certs\" unbundled/*.crt\n"; mesonFlags = [ ]; name = "nss-cacert-3.86"; nativeBuildInputs = [ { LANG = "C.UTF-8"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disabledTestPaths = "'buildcatrust/tests/test_nonhermetic.py'"; disallowedReferences = [ ]; dist = <CODE>; doCheck = false; doInstallCheck = true; drvAttrs = { LANG = "C.UTF-8"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disabledTestPaths = "'buildcatrust/tests/test_nonhermetic.py'"; disallowedReferences = [ ]; doCheck = false; doInstallCheck = true; mesonFlags = [ ]; name = "python3.10-buildcatrust-0.1.3"; nativeBuildInputs = [ «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» «repeated» ]; outputs = [ "out" "dist" ]; patches = [ ]; pname = "buildcatrust"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = [ «repeated» ]; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = [ "buildcatrust" "buildcatrust.cli" ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "buildcatrust-0.1.3.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256:0s0m0fy943dakw9cbd40h46qmrhhgrcp292kppyb34m6y27sbagy"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://pypi/b/buildcatrust/buildcatrust-0.1.3.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "buildcatrust-0.1.3.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/09rvrwyc2ljbrdk20fqkld7jnx8zv45x-buildcatrust-0.1.3.tar.gz"; outputHash = "sha256:0s0m0fy943dakw9cbd40h46qmrhhgrcp292kppyb34m6y27sbagy"; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; override = <CODE>; overrideAttrs = <CODE>; overrideDerivation = <CODE>; passthru = { url = "mirror://pypi/b/buildcatrust/buildcatrust-0.1.3.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://pypi/b/buildcatrust/buildcatrust-0.1.3.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; userHook = null; version = "0.1.3"; }; drvPath = <CODE>; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; name = <CODE>; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/0371h4w245l18i2a0rsicq8458qlqxc8-python3.10-buildcatrust-0.1.3"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { name = <CODE>; pythonModule = false; pythonPath = <CODE>; requiredPythonModules = <CODE>; }; patches = [ ]; pname = "buildcatrust"; postFixup = "wrapPythonPrograms\n"; propagatedBuildInputs = «repeated»; propagatedNativeBuildInputs = [ ]; pythonImportsCheck = «repeated»; pythonModule = false; pythonPath = <CODE>; requiredPythonModules = <CODE>; src = «repeated»; stdenv = «repeated»; strictDeps = true; system = "aarch64-linux"; type = <CODE>; userHook = null; version = "0.1.3"; } ]; outputs = [ "out" "unbundled" "p11kit" ]; patches = [ ]; pname = "nss-cacert"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/cacert/setup-hook.sh; src = { __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; drvAttrs = { __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontBuild = true; installPhase = "runHook preInstall\n\nmkdir $out\ncp nss/lib/ckfw/builtins/certdata.txt $out\n\nrunHook postInstall\n"; mesonFlags = [ ]; name = "nss-cacert-certdata-3.86"; nativeBuildInputs = [ ]; outputs = [ "out" ]; patches = [ ]; pname = "nss-cacert-certdata"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/build-support/fetchurl/builder.sh ]; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; drvAttrs = { SSL_CERT_FILE = "/no-cert-file.crt"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; curlOpts = ""; curlOptsList = ""; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; downloadToTemp = false; executable = false; impureEnvVars = «repeated»; mesonFlags = [ ]; mirrorsFile = «repeated»; name = "nss-3.86.tar.gz"; nativeBuildInputs = [ «repeated» ]; nixpkgsVersion = "23.05"; outputHash = "sha256-PzhfxoZHa7uoEQNfpoIbVCR11VdHsYwgwiHU1mVzuXU="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputs = [ "out" ]; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; urls = [ "mirror://mozilla/security/nss/releases/NSS_3_86_RTM/src/nss-3.86.tar.gz" ]; userHook = null; }; drvPath = <CODE>; executable = false; impureEnvVars = «repeated»; inputDerivation = <CODE>; mesonFlags = [ ]; meta = <CODE>; mirrorsFile = «repeated»; name = "nss-3.86.tar.gz"; nativeBuildInputs = «repeated»; nixpkgsVersion = "23.05"; out = <CODE>; outPath = "/nix/store/500f1a7lc3qqmvs6kqvwgs549yhkm936-nss-3.86.tar.gz"; outputHash = "sha256-PzhfxoZHa7uoEQNfpoIbVCR11VdHsYwgwiHU1mVzuXU="; outputHashAlgo = "sha256"; outputHashMode = "flat"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { url = "mirror://mozilla/security/nss/releases/NSS_3_86_RTM/src/nss-3.86.tar.gz"; }; patches = [ ]; postFetch = ""; postHook = null; preferHashedMirrors = true; preferLocalBuild = true; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; showURLs = false; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; url = "mirror://mozilla/security/nss/releases/NSS_3_86_RTM/src/nss-3.86.tar.gz"; urls = «repeated»; userHook = null; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.86"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir $out\ncp nss/lib/ckfw/builtins/certdata.txt $out\n\nrunHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "nss-cacert-certdata-3.86"; nativeBuildInputs = [ ]; out = <CODE>; outPath = "/nix/store/46j2xlh5126fs7mwv8r2xhdw06nkfhlr-nss-cacert-certdata-3.86"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patches = [ ]; pname = "nss-cacert-certdata"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; version = "3.86"; }; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; version = "3.86"; }; drvPath = <CODE>; inputDerivation = <CODE>; installPhase = "install -D -t \"$out/etc/ssl/certs\" ca-bundle.crt\n\n# install p11-kit specific output to p11kit output\ninstall -D -t \"$p11kit/etc/ssl/trust-source\" ca-bundle.trust.p11-kit\n\n# install individual certs in unbundled output\ninstall -D -t \"$unbundled/etc/ssl/certs\" unbundled/*.crt\n"; mesonFlags = [ ]; meta = <CODE>; name = "nss-cacert-3.86"; nativeBuildInputs = «repeated»; out = «repeated»; outPath = "/nix/store/fphy8fvpx4akk6n3pxqkacwm9gnqcdfr-nss-cacert-3.86"; outputName = <CODE>; outputSpecified = true; outputs = «repeated»; overrideAttrs = <CODE>; p11kit = <CODE>; passthru = { tests = <CODE>; updateScript = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/cacert/update.sh; }; patches = [ ]; pname = "nss-cacert"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; setupHook = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/cacert/setup-hook.sh; src = «repeated»; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; tests = <CODE>; type = <CODE>; unbundled = <CODE>; updateScript = /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/data/misc/cacert/update.sh; userHook = null; version = "3.86"; } ]; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-cs-20221210-go-modules"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/ja22cw1cy9va63wpf2629nrpij735kyv-qrystal-cs-20221210-go-modules"; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; }; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-cs-20221210"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { go = «repeated»; go-modules = «repeated»; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; }; patches = [ ]; pname = "qrystal-cs"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = «repeated»; system = "aarch64-linux"; tags = «repeated»; type = "derivation"; userHook = null; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; version = "20221210"; }; etc = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = [ "-mod=vendor" "-trimpath" ]; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/viaky0d7yql9q4nlvrd0pi01bp6mpi2s-qrystal-etc-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = true; doInstallCheck = false; drvAttrs = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = «repeated»; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/viaky0d7yql9q4nlvrd0pi01bp6mpi2s-qrystal-etc-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = [ "-X github.com/nyiyui/qrystal/node.CommandIp=/nix/store/b38k8kd6qqbcqzcmsvmbsi9kh1bjf7gw-iproute2-6.0.0/bin/ip" "-X github.com/nyiyui/qrystal/node.CommandIptables=/nix/store/8i1jgn26n45yir596zssraq2xpjjzqjn-iptables-1.8.8/bin/iptables" ]; mesonFlags = [ ]; name = "qrystal-etc-20221210"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "qrystal-etc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = [ "cmd/cs-push" "cmd/gen-keys" "cmd/tray" ]; system = "aarch64-linux"; tags = [ "nix" ]; userHook = null; version = "20221210"; }; drvPath = "/nix/store/n00afb28vj478s71rln026glcgn5fgqg-qrystal-etc-20221210.drv"; enableParallelBuilding = true; enableParallelChecking = true; go = «repeated»; go-modules = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; drvAttrs = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" "GIT_PROXY_COMMAND" "SOCKS_SERVER" "GOPROXY" ]; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; name = "qrystal-etc-20221210-go-modules"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-etc-20221210-go-modules"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/viaky0d7yql9q4nlvrd0pi01bp6mpi2s-qrystal-etc-20221210-go-modules"; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; }; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-etc-20221210"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { go = «repeated»; go-modules = «repeated»; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; }; patches = [ ]; pname = "qrystal-etc"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = «repeated»; system = "aarch64-linux"; tags = «repeated»; type = "derivation"; userHook = null; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; version = "20221210"; }; mio = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = [ "-mod=vendor" "-trimpath" ]; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/9dlk018d2p8vnkpik3iaygsm0y4xn74d-qrystal-mio-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = true; doInstallCheck = false; drvAttrs = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = «repeated»; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/9dlk018d2p8vnkpik3iaygsm0y4xn74d-qrystal-mio-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = [ "-X github.com/nyiyui/qrystal/node.CommandIp=/nix/store/b38k8kd6qqbcqzcmsvmbsi9kh1bjf7gw-iproute2-6.0.0/bin/ip" "-X github.com/nyiyui/qrystal/node.CommandIptables=/nix/store/8i1jgn26n45yir596zssraq2xpjjzqjn-iptables-1.8.8/bin/iptables" ]; mesonFlags = [ ]; name = "qrystal-mio-20221210"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "qrystal-mio"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = [ "cmd/runner-mio" ]; system = "aarch64-linux"; tags = [ "nix" ]; userHook = null; version = "20221210"; }; drvPath = "/nix/store/7f89khlldwnk8s619rgkn46bppjlzy5l-qrystal-mio-20221210.drv"; enableParallelBuilding = true; enableParallelChecking = true; go = «repeated»; go-modules = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; drvAttrs = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" "GIT_PROXY_COMMAND" "SOCKS_SERVER" "GOPROXY" ]; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; name = "qrystal-mio-20221210-go-modules"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-mio-20221210-go-modules"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/9dlk018d2p8vnkpik3iaygsm0y4xn74d-qrystal-mio-20221210-go-modules"; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; }; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-mio-20221210"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/qa6m5jzrkx4qijzpi6i5d0q3vmjgvgh7-qrystal-mio-20221210"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { go = «repeated»; go-modules = «repeated»; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; }; patches = [ ]; pname = "qrystal-mio"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = «repeated»; system = "aarch64-linux"; tags = «repeated»; type = "derivation"; userHook = null; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; version = "20221210"; }; node = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = [ "-mod=vendor" "-trimpath" ]; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/3caz7zxyzikq8vyv5vf7mmgzm06phc70-qrystal-node-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = true; doInstallCheck = false; drvAttrs = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = «repeated»; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/3caz7zxyzikq8vyv5vf7mmgzm06phc70-qrystal-node-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = [ "-X github.com/nyiyui/qrystal/node.CommandIp=/nix/store/b38k8kd6qqbcqzcmsvmbsi9kh1bjf7gw-iproute2-6.0.0/bin/ip" "-X github.com/nyiyui/qrystal/node.CommandIptables=/nix/store/8i1jgn26n45yir596zssraq2xpjjzqjn-iptables-1.8.8/bin/iptables" ]; mesonFlags = [ ]; name = "qrystal-node-20221210"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "qrystal-node"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = [ "cmd/runner-node" ]; system = "aarch64-linux"; tags = [ "nix" ]; userHook = null; version = "20221210"; }; drvPath = "/nix/store/v31ll0mgf1cisiilkbpcyl2p8izpk2qb-qrystal-node-20221210.drv"; enableParallelBuilding = true; enableParallelChecking = true; go = «repeated»; go-modules = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; drvAttrs = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" "GIT_PROXY_COMMAND" "SOCKS_SERVER" "GOPROXY" ]; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; name = "qrystal-node-20221210-go-modules"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-node-20221210-go-modules"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/3caz7zxyzikq8vyv5vf7mmgzm06phc70-qrystal-node-20221210-go-modules"; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; }; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-node-20221210"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/c3rbr6gixck2yl4dn8jgmd4z6wjbax9x-qrystal-node-20221210"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { go = «repeated»; go-modules = «repeated»; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; }; patches = [ ]; pname = "qrystal-node"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = «repeated»; system = "aarch64-linux"; tags = «repeated»; type = "derivation"; userHook = null; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; version = "20221210"; }; runner = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = [ "-mod=vendor" "-trimpath" ]; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/cp0lmmyk3nc4f6jxnbax8c0psxn43575-qrystal-runner-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = [ «repeated» ]; doCheck = true; doInstallCheck = false; drvAttrs = { CGO_ENABLED = 1; GO111MODULE = "on"; GOARCH = "arm64"; GOFLAGS = «repeated»; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n\nexclude='\\(/_\\|examples\\|Godeps\\|testdata'\nif [[ -n \"$excludedPackages\" ]]; then\n  IFS=' ' read -r -a excludedArr <<<$excludedPackages\n  printf -v excludedAlternates '%s\\\\|' \"\${excludedArr[@]}\"\n  excludedAlternates=\${excludedAlternates%\\\\|} # drop final \\| added by printf\n  exclude+='\\|'\"$excludedAlternates\"\nfi\nexclude+='\\)'\n\nbuildGoDir() {\n  local cmd=\"$1\" dir=\"$2\"\n\n  . $TMPDIR/buildFlagsArray\n\n  declare -a flags\n  flags+=($buildFlags \"\${buildFlagsArray[@]}\")\n  flags+=(\${tags:+-tags=nix})\n  flags+=(\${ldflags:+-ldflags=\"$ldflags\"})\n  flags+=(\"-p\" \"$NIX_BUILD_CORES\")\n\n  if [ \"$cmd\" = \"test\" ]; then\n    flags+=(-vet=off)\n    flags+=($checkFlags)\n  fi\n\n  local OUT\n  if ! OUT=\"$(go $cmd \"\${flags[@]}\" $dir 2>&1)\"; then\n    if ! echo \"$OUT\" | grep -qE '(no( buildable| non-test)?|build constraints exclude all) Go (source )?files'; then\n      echo \"$OUT\" >&2\n      return 1\n    fi\n  fi\n  if [ -n \"$OUT\" ]; then\n    echo \"$OUT\" >&2\n  fi\n  return 0\n}\n\ngetGoDirs() {\n  local type;\n  type=\"$1\"\n  if [ -n \"$subPackages\" ]; then\n    echo \"$subPackages\" | sed \"s,\\(^\\| \\),\\1./,g\"\n  else\n    find . -type f -name \\*$type.go -exec dirname {} \\; | grep -v \"/vendor/\" | sort --unique | grep -v \"$exclude\"\n  fi\n}\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  buildFlagsArray+=(-x)\nfi\n\nif [ \${#buildFlagsArray[@]} -ne 0 ]; then\n  declare -p buildFlagsArray > $TMPDIR/buildFlagsArray\nelse\n  touch $TMPDIR/buildFlagsArray\nfi\nif [ -z \"$enableParallelBuilding\" ]; then\n    export NIX_BUILD_CORES=1\nfi\nfor pkg in $(getGoDirs \"\"); do\n  echo \"Building subPackage $pkg\"\n  buildGoDir install \"$pkg\"\ndone\nrunHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; checkPhase = "runHook preCheck\n# We do not set trimpath for tests, in case they reference test assets\nexport GOFLAGS=\${GOFLAGS//-trimpath/}\n\nfor pkg in $(getGoDirs test); do\n  buildGoDir test \"$pkg\"\ndone\n\nrunHook postCheck\n"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\n\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\nexport GOPROXY=off\nexport GOSUMDB=off\ncd \"$modRoot\"\nrm -rf vendor\ncp -r --reflink=auto /nix/store/cp0lmmyk3nc4f6jxnbax8c0psxn43575-qrystal-runner-20221210-go-modules vendor\n\n\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; disallowedReferences = «repeated»; doCheck = true; doInstallCheck = false; enableParallelBuilding = true; enableParallelChecking = true; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = [ "-X github.com/nyiyui/qrystal/runner.mioPath=/nix/store/qa6m5jzrkx4qijzpi6i5d0q3vmjgvgh7-qrystal-mio-20221210/bin/runner-mio" "-X github.com/nyiyui/qrystal/runner.nodePath=/nix/store/c3rbr6gixck2yl4dn8jgmd4z6wjbax9x-qrystal-node-20221210/bin/runner-node" "-X github.com/nyiyui/qrystal/runner.nodeUser=qrystal-node" "-X github.com/nyiyui/qrystal/runner.nodeConfig=/nix/store/c3rbr6gixck2yl4dn8jgmd4z6wjbax9x-qrystal-node-20221210" ]; mesonFlags = [ ]; name = "qrystal-runner-20221210"; nativeBuildInputs = [ «repeated» ]; outputs = [ "out" ]; patches = [ ]; pname = "qrystal-runner"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = [ "cmd/runner" ]; system = "aarch64-linux"; tags = [ "nix" ]; userHook = null; version = "20221210"; }; drvPath = "/nix/store/jc43w54z5fifr6z8xx6qmwq09lj0zjd4-qrystal-runner-20221210.drv"; enableParallelBuilding = true; enableParallelChecking = true; go = «repeated»; go-modules = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; all = <CODE>; args = [ "-e" /nix/store/yy4f7s8hkkwp2k2xa1hcf06palavcr4k-source/pkgs/stdenv/generic/default-builder.sh ]; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; drvAttrs = { GO111MODULE = "on"; GOARCH = "arm64"; GOOS = "linux"; __ignoreNulls = true; args = «repeated»; buildInputs = [ ]; buildPhase = "runHook preBuild\n  if [ -d vendor ]; then\n    echo \"vendor folder exists, please set 'vendorHash = null;' or 'vendorSha256 = null;' in your expression\"\n    exit 10\n  fi\n\nif (( \"\${NIX_DEBUG:-0}\" >= 1 )); then\n  goModVendorFlags+=(-v)\nfi\ngo mod vendor \"\${goModVendorFlags[@]}\"\n\n\n  mkdir -p vendor\n\n  runHook postBuild\n"; builder = "/nix/store/m45cjiwspshg01wrk2pln2qndasky23r-bash-5.1-p16/bin/bash"; cmakeFlags = [ ]; configureFlags = [ ]; configurePhase = "runHook preConfigure\nexport GOCACHE=$TMPDIR/go-cache\nexport GOPATH=\"$TMPDIR/go\"\ncd \"./\"\nrunHook postConfigure\n"; depsBuildBuild = [ ]; depsBuildBuildPropagated = [ ]; depsBuildTarget = [ ]; depsBuildTargetPropagated = [ ]; depsHostHost = [ ]; depsHostHostPropagated = [ ]; depsTargetTarget = [ ]; depsTargetTargetPropagated = [ ]; doCheck = false; doInstallCheck = false; dontFixup = true; impureEnvVars = [ "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy" "GIT_PROXY_COMMAND" "SOCKS_SERVER" "GOPROXY" ]; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; name = "qrystal-runner-20221210-go-modules"; nativeBuildInputs = [ «repeated» «repeated» «repeated» ]; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputs = [ "out" ]; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; userHook = null; }; drvPath = <CODE>; impureEnvVars = «repeated»; inputDerivation = <CODE>; installPhase = "  runHook preInstall\n\ncp -r --reflink=auto vendor $out\n\n\n  runHook postInstall\n"; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-runner-20221210-go-modules"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = "/nix/store/cp0lmmyk3nc4f6jxnbax8c0psxn43575-qrystal-runner-20221210-go-modules"; outputHash = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; outputHashAlgo = "sha256"; outputHashMode = "recursive"; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { }; patchFlags = [ ]; patches = [ ]; preBuild = ""; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; sourceRoot = ""; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = false; system = "aarch64-linux"; type = "derivation"; userHook = null; }; inputDerivation = <CODE>; installPhase = "runHook preInstall\n\nmkdir -p $out\ndir=\"$GOPATH/bin\"\n[ -e \"$dir\" ] && cp -r $dir $out\n\nrunHook postInstall\n"; ldflags = «repeated»; mesonFlags = [ ]; meta = <CODE>; name = "qrystal-runner-20221210"; nativeBuildInputs = «repeated»; out = <CODE>; outPath = <CODE>; outputName = "out"; outputs = «repeated»; overrideAttrs = <CODE>; passthru = { go = «repeated»; go-modules = «repeated»; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; }; patches = [ ]; pname = "qrystal-runner"; propagatedBuildInputs = [ ]; propagatedNativeBuildInputs = [ ]; src = /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source; stdenv = «repeated»; strictDeps = true; subPackages = «repeated»; system = "aarch64-linux"; tags = «repeated»; type = "derivation"; userHook = null; vendorHash = "_unset"; vendorSha256 = "a35aca9c155e9994766bad5c56d67db85476a30bd7b0864fd3191df72f340387"; version = "20221210"; }; }
error: attribute 'aarch64-linux' missing

       at /nix/store/w9q9snkz30bx4yf1vw5wd15f1pb9dr19-source/flake.nix:250:66:

          249|
          250|               serviceConfig = let pkg = (builtins.trace packages packages.${system}.cs);
             |                                                                  ^
          251|               in {
(use '--show-trace' to show detailed location information)
