// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ok struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ok) Reset() {
	*x = Ok{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ok) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ok) ProtoMessage() {}

func (x *Ok) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ok.ProtoReflect.Descriptor instead.
func (*Ok) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type PingQS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingQS) Reset() {
	*x = PingQS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingQS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingQS) ProtoMessage() {}

func (x *PingQS) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingQS.ProtoReflect.Descriptor instead.
func (*PingQS) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type PushQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CentralToken string       `protobuf:"bytes,1,opt,name=centralToken,proto3" json:"centralToken,omitempty"`
	Cnn          string       `protobuf:"bytes,2,opt,name=cnn,proto3" json:"cnn,omitempty"`
	PeerName     string       `protobuf:"bytes,3,opt,name=peerName,proto3" json:"peerName,omitempty"`
	Peer         *CentralPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"` // peer to add. If CentralPeer.allowedIPs is blank, 1 IP address (which is not already used) is assigned automatically.
}

func (x *PushQ) Reset() {
	*x = PushQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushQ) ProtoMessage() {}

func (x *PushQ) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushQ.ProtoReflect.Descriptor instead.
func (*PushQ) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *PushQ) GetCentralToken() string {
	if x != nil {
		return x.CentralToken
	}
	return ""
}

func (x *PushQ) GetCnn() string {
	if x != nil {
		return x.Cnn
	}
	return ""
}

func (x *PushQ) GetPeerName() string {
	if x != nil {
		return x.PeerName
	}
	return ""
}

func (x *PushQ) GetPeer() *CentralPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type PushS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to S:
	//
	//	*PushS_Ok
	//	*PushS_InvalidData
	//	*PushS_Overflow
	//	*PushS_Other
	S isPushS_S `protobuf_oneof:"s"`
}

func (x *PushS) Reset() {
	*x = PushS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushS) ProtoMessage() {}

func (x *PushS) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushS.ProtoReflect.Descriptor instead.
func (*PushS) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (m *PushS) GetS() isPushS_S {
	if m != nil {
		return m.S
	}
	return nil
}

func (x *PushS) GetOk() *Ok {
	if x, ok := x.GetS().(*PushS_Ok); ok {
		return x.Ok
	}
	return nil
}

func (x *PushS) GetInvalidData() string {
	if x, ok := x.GetS().(*PushS_InvalidData); ok {
		return x.InvalidData
	}
	return ""
}

func (x *PushS) GetOverflow() string {
	if x, ok := x.GetS().(*PushS_Overflow); ok {
		return x.Overflow
	}
	return ""
}

func (x *PushS) GetOther() string {
	if x, ok := x.GetS().(*PushS_Other); ok {
		return x.Other
	}
	return ""
}

type isPushS_S interface {
	isPushS_S()
}

type PushS_Ok struct {
	Ok *Ok `protobuf:"bytes,1,opt,name=ok,proto3,oneof"`
}

type PushS_InvalidData struct {
	InvalidData string `protobuf:"bytes,2,opt,name=invalidData,proto3,oneof"`
}

type PushS_Overflow struct {
	Overflow string `protobuf:"bytes,3,opt,name=overflow,proto3,oneof"`
}

type PushS_Other struct {
	Other string `protobuf:"bytes,4,opt,name=other,proto3,oneof"`
}

func (*PushS_Ok) isPushS_S() {}

func (*PushS_InvalidData) isPushS_S() {}

func (*PushS_Overflow) isPushS_S() {}

func (*PushS_Other) isPushS_S() {}

type CentralConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks map[string]*CentralNetwork `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CentralConfig) Reset() {
	*x = CentralConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CentralConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CentralConfig) ProtoMessage() {}

func (x *CentralConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CentralConfig.ProtoReflect.Descriptor instead.
func (*CentralConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *CentralConfig) GetNetworks() map[string]*CentralNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

type CentralNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ips        []*IPNet                `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	Me         string                  `protobuf:"bytes,2,opt,name=me,proto3" json:"me,omitempty"`
	Keepalive  *durationpb.Duration    `protobuf:"bytes,3,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	ListenPort int32                   `protobuf:"varint,4,opt,name=listenPort,proto3" json:"listenPort,omitempty"`
	Peers      map[string]*CentralPeer `protobuf:"bytes,5,rep,name=peers,proto3" json:"peers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CentralNetwork) Reset() {
	*x = CentralNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CentralNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CentralNetwork) ProtoMessage() {}

func (x *CentralNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CentralNetwork.ProtoReflect.Descriptor instead.
func (*CentralNetwork) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *CentralNetwork) GetIps() []*IPNet {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *CentralNetwork) GetMe() string {
	if x != nil {
		return x.Me
	}
	return ""
}

func (x *CentralNetwork) GetKeepalive() *durationpb.Duration {
	if x != nil {
		return x.Keepalive
	}
	return nil
}

func (x *CentralNetwork) GetListenPort() int32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *CentralNetwork) GetPeers() map[string]*CentralPeer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type CentralPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host       string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	AllowedIPs []*IPNet `protobuf:"bytes,2,rep,name=allowedIPs,proto3" json:"allowedIPs,omitempty"`
	CanSee     *CanSee  `protobuf:"bytes,5,opt,name=canSee,proto3" json:"canSee,omitempty"`
}

func (x *CentralPeer) Reset() {
	*x = CentralPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CentralPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CentralPeer) ProtoMessage() {}

func (x *CentralPeer) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CentralPeer.ProtoReflect.Descriptor instead.
func (*CentralPeer) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *CentralPeer) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CentralPeer) GetAllowedIPs() []*IPNet {
	if x != nil {
		return x.AllowedIPs
	}
	return nil
}

func (x *CentralPeer) GetCanSee() *CanSee {
	if x != nil {
		return x.CanSee
	}
	return nil
}

type CanSee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Only []string `protobuf:"bytes,1,rep,name=only,proto3" json:"only,omitempty"`
}

func (x *CanSee) Reset() {
	*x = CanSee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanSee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanSee) ProtoMessage() {}

func (x *CanSee) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanSee.ProtoReflect.Descriptor instead.
func (*CanSee) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *CanSee) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

type IPNet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cidr string `protobuf:"bytes,1,opt,name=cidr,proto3" json:"cidr,omitempty"`
}

func (x *IPNet) Reset() {
	*x = IPNet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPNet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPNet) ProtoMessage() {}

func (x *IPNet) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPNet.ProtoReflect.Descriptor instead.
func (*IPNet) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *IPNet) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

type AddTokenQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CentralToken string            `protobuf:"bytes,1,opt,name=centralToken,proto3" json:"centralToken,omitempty"`
	Overwrite    bool              `protobuf:"varint,2,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	Hash         []byte            `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Name         string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Networks     map[string]string `protobuf:"bytes,5,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CanPull      bool              `protobuf:"varint,6,opt,name=canPull,proto3" json:"canPull,omitempty"`
	CanPush      *CanPush          `protobuf:"bytes,7,opt,name=canPush,proto3" json:"canPush,omitempty"`
}

func (x *AddTokenQ) Reset() {
	*x = AddTokenQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTokenQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTokenQ) ProtoMessage() {}

func (x *AddTokenQ) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTokenQ.ProtoReflect.Descriptor instead.
func (*AddTokenQ) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *AddTokenQ) GetCentralToken() string {
	if x != nil {
		return x.CentralToken
	}
	return ""
}

func (x *AddTokenQ) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

func (x *AddTokenQ) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *AddTokenQ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddTokenQ) GetNetworks() map[string]string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *AddTokenQ) GetCanPull() bool {
	if x != nil {
		return x.CanPull
	}
	return false
}

func (x *AddTokenQ) GetCanPush() *CanPush {
	if x != nil {
		return x.CanPush
	}
	return nil
}

type CanPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks map[string]string `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CanPush) Reset() {
	*x = CanPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanPush) ProtoMessage() {}

func (x *CanPush) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanPush.ProtoReflect.Descriptor instead.
func (*CanPush) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *CanPush) GetNetworks() map[string]string {
	if x != nil {
		return x.Networks
	}
	return nil
}

type AddTokenS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTokenS) Reset() {
	*x = AddTokenS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTokenS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTokenS) ProtoMessage() {}

func (x *AddTokenS) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTokenS.ProtoReflect.Descriptor instead.
func (*AddTokenS) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

type GetStatusQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusQ) Reset() {
	*x = GetStatusQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusQ) ProtoMessage() {}

func (x *GetStatusQ) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusQ.ProtoReflect.Descriptor instead.
func (*GetStatusQ) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

type GetStatusS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cs   map[int32]*CSStatus `protobuf:"bytes,1,rep,name=cs,proto3" json:"cs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Peer map[string]string   `protobuf:"bytes,2,rep,name=peer,proto3" json:"peer,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetStatusS) Reset() {
	*x = GetStatusS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusS) ProtoMessage() {}

func (x *GetStatusS) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusS.ProtoReflect.Descriptor instead.
func (*GetStatusS) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetStatusS) GetCs() map[int32]*CSStatus {
	if x != nil {
		return x.Cs
	}
	return nil
}

func (x *GetStatusS) GetPeer() map[string]string {
	if x != nil {
		return x.Peer
	}
	return nil
}

type CSStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CSStatus) Reset() {
	*x = CSStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSStatus) ProtoMessage() {}

func (x *CSStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSStatus.ProtoReflect.Descriptor instead.
func (*CSStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *CSStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CSStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x04, 0x0a, 0x02, 0x4f,
	0x6b, 0x22, 0x08, 0x0a, 0x06, 0x50, 0x69, 0x6e, 0x67, 0x51, 0x53, 0x22, 0x7b, 0x0a, 0x05, 0x50,
	0x75, 0x73, 0x68, 0x51, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6e, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x7d, 0x0a, 0x05, 0x50, 0x75, 0x73, 0x68,
	0x53, 0x12, 0x15, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x03, 0x2e,
	0x4f, 0x6b, 0x48, 0x00, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x22, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x05, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x42, 0x03, 0x0a, 0x01, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x43, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x08, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x1a, 0x4c, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x8d, 0x02, 0x0a, 0x0e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x49, 0x50, 0x4e, 0x65, 0x74, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x1a, 0x46, 0x0a, 0x0a, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6c, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x6a, 0x0a, 0x0b, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x50, 0x65, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49,
	0x50, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x50, 0x4e, 0x65, 0x74,
	0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x50, 0x73, 0x12, 0x1f, 0x0a, 0x06,
	0x63, 0x61, 0x6e, 0x53, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43,
	0x61, 0x6e, 0x53, 0x65, 0x65, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x65, 0x22, 0x1c, 0x0a,
	0x06, 0x43, 0x61, 0x6e, 0x53, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x22, 0x1b, 0x0a, 0x05, 0x49,
	0x50, 0x4e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x64, 0x72, 0x22, 0xa6, 0x02, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x51, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x76,
	0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f,
	0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x51, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x75, 0x6c,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x75, 0x6c, 0x6c,
	0x12, 0x22, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x07, 0x63, 0x61, 0x6e,
	0x50, 0x75, 0x73, 0x68, 0x1a, 0x3b, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7a, 0x0a, 0x07, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x08,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x1a, 0x3b, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0b, 0x0a,
	0x09, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x22, 0xd7, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x12, 0x23, 0x0a, 0x02, 0x63, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x2e, 0x43, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x63, 0x73, 0x12, 0x29, 0x0a, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x1a, 0x40, 0x0a, 0x07, 0x43, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x50, 0x65, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x36, 0x0a, 0x08, 0x43, 0x53, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x65, 0x0a, 0x0d, 0x43, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x04, 0x70,
	0x75, 0x73, 0x68, 0x12, 0x06, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x51, 0x1a, 0x06, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x12, 0x22, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x0a, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x51, 0x1a, 0x0a, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x12, 0x18, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x07, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x51, 0x53, 0x1a, 0x07, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x51,
	0x53, 0x32, 0x33, 0x0a, 0x08, 0x4b, 0x69, 0x72, 0x69, 0x79, 0x61, 0x6d, 0x61, 0x12, 0x27, 0x0a,
	0x09, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x51, 0x1a, 0x0b, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x30, 0x01, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x79, 0x69, 0x79, 0x75, 0x69, 0x2f, 0x71, 0x72, 0x79, 0x73,
	0x74, 0x61, 0x6c, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_goTypes = []interface{}{
	(*Ok)(nil),                  // 0: Ok
	(*PingQS)(nil),              // 1: PingQS
	(*PushQ)(nil),               // 2: PushQ
	(*PushS)(nil),               // 3: PushS
	(*CentralConfig)(nil),       // 4: CentralConfig
	(*CentralNetwork)(nil),      // 5: CentralNetwork
	(*CentralPeer)(nil),         // 6: CentralPeer
	(*CanSee)(nil),              // 7: CanSee
	(*IPNet)(nil),               // 8: IPNet
	(*AddTokenQ)(nil),           // 9: AddTokenQ
	(*CanPush)(nil),             // 10: CanPush
	(*AddTokenS)(nil),           // 11: AddTokenS
	(*GetStatusQ)(nil),          // 12: GetStatusQ
	(*GetStatusS)(nil),          // 13: GetStatusS
	(*CSStatus)(nil),            // 14: CSStatus
	nil,                         // 15: CentralConfig.NetworksEntry
	nil,                         // 16: CentralNetwork.PeersEntry
	nil,                         // 17: AddTokenQ.NetworksEntry
	nil,                         // 18: CanPush.NetworksEntry
	nil,                         // 19: GetStatusS.CsEntry
	nil,                         // 20: GetStatusS.PeerEntry
	(*durationpb.Duration)(nil), // 21: google.protobuf.Duration
}
var file_api_proto_depIdxs = []int32{
	6,  // 0: PushQ.peer:type_name -> CentralPeer
	0,  // 1: PushS.ok:type_name -> Ok
	15, // 2: CentralConfig.networks:type_name -> CentralConfig.NetworksEntry
	8,  // 3: CentralNetwork.ips:type_name -> IPNet
	21, // 4: CentralNetwork.keepalive:type_name -> google.protobuf.Duration
	16, // 5: CentralNetwork.peers:type_name -> CentralNetwork.PeersEntry
	8,  // 6: CentralPeer.allowedIPs:type_name -> IPNet
	7,  // 7: CentralPeer.canSee:type_name -> CanSee
	17, // 8: AddTokenQ.networks:type_name -> AddTokenQ.NetworksEntry
	10, // 9: AddTokenQ.canPush:type_name -> CanPush
	18, // 10: CanPush.networks:type_name -> CanPush.NetworksEntry
	19, // 11: GetStatusS.cs:type_name -> GetStatusS.CsEntry
	20, // 12: GetStatusS.peer:type_name -> GetStatusS.PeerEntry
	5,  // 13: CentralConfig.NetworksEntry.value:type_name -> CentralNetwork
	6,  // 14: CentralNetwork.PeersEntry.value:type_name -> CentralPeer
	14, // 15: GetStatusS.CsEntry.value:type_name -> CSStatus
	2,  // 16: CentralSource.push:input_type -> PushQ
	9,  // 17: CentralSource.addToken:input_type -> AddTokenQ
	1,  // 18: CentralSource.ping:input_type -> PingQS
	12, // 19: Kiriyama.getStatus:input_type -> GetStatusQ
	3,  // 20: CentralSource.push:output_type -> PushS
	11, // 21: CentralSource.addToken:output_type -> AddTokenS
	1,  // 22: CentralSource.ping:output_type -> PingQS
	13, // 23: Kiriyama.getStatus:output_type -> GetStatusS
	20, // [20:24] is the sub-list for method output_type
	16, // [16:20] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ok); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingQS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CentralConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CentralNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CentralPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanSee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPNet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTokenQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTokenS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CSStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*PushS_Ok)(nil),
		(*PushS_InvalidData)(nil),
		(*PushS_Overflow)(nil),
		(*PushS_Other)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
